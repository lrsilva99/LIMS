webpackJsonp([0,3],{

/***/ "./node_modules/css-loader/index.js!./src/main/webapp/app/account/password/password-strength-bar.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)();
// imports


// module
exports.push([module.i, "/* ==========================================================================\nstart Password strength bar style\n========================================================================== */\nul#strengthBar {\n    display:inline;\n    list-style:none;\n    margin:0;\n    margin-left:15px;\n    padding:0;\n    vertical-align:2px;\n}\n\n.point:last {\n    margin:0 !important;\n}\n.point {\n    background:#DDD;\n    border-radius:2px;\n    display:inline-block;\n    height:5px;\n    margin-right:1px;\n    width:20px;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./src/main/webapp/app/home/home.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)();
// imports


// module
exports.push([module.i, "/* ==========================================================================\nMain page styles\n========================================================================== */\n\n.hipster {\n    display: inline-block;\n    width: 347px;\n    height: 497px;\n    background: url(" + __webpack_require__("./src/main/webapp/content/images/hipster.png") + ") no-repeat center top;\n    background-size: contain;\n}\n\n/* wait autoprefixer update to allow simple generation of high pixel density media query */\n@media\nonly screen and (-webkit-min-device-pixel-ratio: 2),\nonly screen and (   min--moz-device-pixel-ratio: 2),\nonly screen and (     -o-min-device-pixel-ratio: 2/1),\nonly screen and (        min-device-pixel-ratio: 2),\nonly screen and (                min-resolution: 192dpi),\nonly screen and (                min-resolution: 2dppx) {\n    .hipster {\n        background: url(" + __webpack_require__("./src/main/webapp/content/images/hipster2x.png") + ") no-repeat center top;\n        background-size: contain;\n    }\n}\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./src/main/webapp/app/layouts/navbar/navbar.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)();
// imports


// module
exports.push([module.i, "/* ==========================================================================\nNavbar\n========================================================================== */\n.navbar-version {\n    font-size: 10px;\n    color: #ccc\n}\n\n.jh-navbar {\n    background-color: #353d47;\n    padding: .2em 1em;\n    border-radius: 0; /* Hide the navbar rounded corners */\n\t-moz-border-radius: 0;\n}\n\n.jh-navbar .profile-image {\n    margin: -10px 0px;\n    height: 40px;\n    width: 40px;\n    border-radius: 50%;\n}\n\n.jh-navbar .dropdown-item.active, .jh-navbar .dropdown-item.active:focus, .jh-navbar .dropdown-item.active:hover {\n    background-color: #353d47;\n}\n\n.jh-navbar .dropdown-toggle::after {\n    margin-left: 0.15em;\n}\n\n.jh-navbar ul.navbar-nav {\n    padding: 0.5em;\n}\n\n.jh-navbar .navbar-nav .nav-item+.nav-item {\n    margin-left: 1.5rem;\n}\n\n.jh-navbar a.nav-link {\n    font-weight: 400;\n}\n\n.jh-navbar .jh-navbar-toggler {\n    color: #ccc;\n    font-size: 1.5em;\n    padding: 10px;\n}\n\n.jh-navbar .jh-navbar-toggler:hover {\n    color: #fff;\n}\n\n\n\n@media screen and (max-width: 992px) {\n    .jh-logo-container {\n        width: 100%;\n    }\n}\n\n.navbar-title {\n    display: inline-block;\n    vertical-align: middle;\n}\n\n/* ==========================================================================\nLogo styles\n========================================================================== */\n.navbar-brand.logo {\n    padding: 5px 15px;\n}\n\n.logo .logo-img {\n    height: 45px;\n    display: inline-block;\n    vertical-align: middle;\n    width: 70px;\n}\n\n.logo-img {\n    height: 100%;\n    background: url(" + __webpack_require__("./src/main/webapp/content/images/logo-jhipster.png") + ") no-repeat center center;\n    background-size: contain;\n    width: 100%;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./src/main/webapp/app/layouts/profiles/page-ribbon.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(7)();
// imports


// module
exports.push([module.i, "/* ==========================================================================\nDevelopement Ribbon\n========================================================================== */\n.ribbon {\n    background-color: rgba(170, 0, 0, 0.5);\n    left: -3.5em;\n    moz-transform: rotate(-45deg);\n    ms-transform: rotate(-45deg);\n    o-transform: rotate(-45deg);\n    webkit-transform: rotate(-45deg);\n    transform: rotate(-45deg);\n    overflow: hidden;\n    position: absolute;\n    top: 40px;\n    white-space: nowrap;\n    width: 15em;\n    z-index: 9999;\n    pointer-events: none;\n    opacity: 0.75;\n}\n\n.ribbon a {\n    color: #fff;\n    display: block;\n    font-weight: 400;\n    margin: 1px 0;\n    padding: 10px 50px;\n    text-align: center;\n    text-decoration: none;\n    text-shadow: 0 0 5px #444;\n    pointer-events: none;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/ng2-translate/ng2-translate.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(8);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "translateLoaderFactory", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["translateLoaderFactory"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TranslateModule", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["TranslateModule"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TranslatePipe", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["TranslatePipe"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "MissingTranslationHandler", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["MissingTranslationHandler"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TranslateLoader", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["TranslateLoader"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TranslateStaticLoader", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["TranslateStaticLoader"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TranslateService", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["TranslateService"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TranslateParser", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["TranslateParser"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DefaultTranslateParser", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["DefaultTranslateParser"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TranslateDirective", function() { return __WEBPACK_IMPORTED_MODULE_0__index__["TranslateDirective"]; });



/***/ }),

/***/ "./src/main/webapp/app/account/account.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/account/index.ts");
var LimsAccountModule = (function () {
    function LimsAccountModule() {
    }
    return LimsAccountModule;
}());
LimsAccountModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(_1.accountState, { useHash: true })
        ],
        declarations: [
            _1.ActivateComponent,
            _1.RegisterComponent,
            _1.PasswordComponent,
            _1.PasswordStrengthBarComponent,
            _1.PasswordResetInitComponent,
            _1.PasswordResetFinishComponent,
            _1.SessionsComponent,
            _1.SettingsComponent
        ],
        providers: [
            _1.SessionsService,
            _1.Register,
            _1.Activate,
            _1.Password,
            _1.PasswordResetInit,
            _1.PasswordResetFinish
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsAccountModule);
exports.LimsAccountModule = LimsAccountModule;


/***/ }),

/***/ "./src/main/webapp/app/account/account.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _1 = __webpack_require__("./src/main/webapp/app/account/index.ts");
var ACCOUNT_ROUTES = [
    _1.activateRoute,
    _1.passwordRoute,
    _1.passwordResetFinishRoute,
    _1.passwordResetInitRoute,
    _1.registerRoute,
    _1.sessionsRoute,
    _1.settingsRoute
];
exports.accountState = [{
        path: '',
        children: ACCOUNT_ROUTES
    }];


/***/ }),

/***/ "./src/main/webapp/app/account/activate/activate.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h1 jhiTranslate=\"activate.title\">Activation</h1>\n\n            <div class=\"alert alert-success\" *ngIf=\"success\">\n                <span jhiTranslate=\"activate.messages.success\">\n                    <strong>Your user has been activated.</strong> Please\n                    <a class=\"alert-link\" (click)=\"login()\" jhiTranslate=\"global.messages.info.authenticated.link\">sign in</a>.\n                </span>\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"error\" jhiTranslate=\"activate.messages.error\">\n                <strong>Your user could not be activated.</strong> Please use the registration form to sign up.\n            </div>\n\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/activate/activate.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var activate_service_1 = __webpack_require__("./src/main/webapp/app/account/activate/activate.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var ActivateComponent = (function () {
    function ActivateComponent(jhiLanguageService, activate, loginModalService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.activate = activate;
        this.loginModalService = loginModalService;
        this.route = route;
        this.jhiLanguageService.setLocations(['activate']);
    }
    ActivateComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            _this.activate.get(params['key']).subscribe(function () {
                _this.error = null;
                _this.success = 'OK';
            }, function () {
                _this.success = null;
                _this.error = 'ERROR';
            });
        });
    };
    ActivateComponent.prototype.login = function () {
        this.modalRef = this.loginModalService.open();
    };
    return ActivateComponent;
}());
ActivateComponent = __decorate([
    core_1.Component({
        selector: 'jhi-activate',
        template: __webpack_require__("./src/main/webapp/app/account/activate/activate.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        activate_service_1.Activate,
        shared_1.LoginModalService,
        router_1.ActivatedRoute])
], ActivateComponent);
exports.ActivateComponent = ActivateComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/activate/activate.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var activate_component_1 = __webpack_require__("./src/main/webapp/app/account/activate/activate.component.ts");
exports.activateRoute = {
    path: 'activate',
    component: activate_component_1.ActivateComponent,
    data: {
        authorities: [],
        pageTitle: 'activate.title'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/activate/activate.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Activate = (function () {
    function Activate(http) {
        this.http = http;
    }
    Activate.prototype.get = function (key) {
        var params = new http_1.URLSearchParams();
        params.set('key', key);
        return this.http.get('api/activate', {
            search: params
        }).map(function (res) { return res.json(); });
    };
    return Activate;
}());
Activate = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Activate);
exports.Activate = Activate;


/***/ }),

/***/ "./src/main/webapp/app/account/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/account/activate/activate.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/activate/activate.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/activate/activate.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password/password.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password/password-strength-bar.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password/password.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password/password.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/register/register.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/register/register.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/register/register.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/sessions/sessions.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/sessions/sessions.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/sessions/sessions.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/sessions/session.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/settings/settings.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/settings/settings.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/account/account.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-4 col-md-offset-4\">\n            <h1 jhiTranslate=\"reset.finish.title\">Reset password</h1>\n\n            <div class=\"alert alert-danger\" jhiTranslate=\"reset.finish.messages.keymissing\" *ngIf=\"keyMissing\">\n                <strong>The password reset key is missing.</strong>\n            </div>\n\n            <div class=\"alert alert-warning\" *ngIf=\"!success && !keyMissing\">\n                <p jhiTranslate=\"reset.finish.messages.info\">Choose a new password</p>\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"error\">\n                <p jhiTranslate=\"reset.finish.messages.error\">Your password couldn't be reset. Remember a password request is only valid for 24 hours.</p>\n            </div>\n\n            <p class=\"alert alert-success\" *ngIf=\"success\">\n                <span jhiTranslate=\"reset.finish.messages.success\"><strong>Your password has been reset.</strong> Please </span>\n                <a class=\"alert-link\" (click)=\"login()\" jhiTranslate=\"global.messages.info.authenticated.link\">sign in</a>.\n            </p>\n\n            <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\" jhiTranslate=\"global.messages.error.dontmatch\">\n                The password and its confirmation do not match!\n            </div>\n\n            <div *ngIf=\"!keyMissing\">\n                <form *ngIf=\"!success\" name=\"form\" role=\"form\" (ngSubmit)=\"finishReset()\" #passwordForm=\"ngForm\">\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\" for=\"password\" jhiTranslate=\"global.form.newpassword\">New password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" #passwordInput=\"ngModel\"\n                               placeholder=\"{{'global.form.newpassword.placeholder' | translate}}\"\n                               [(ngModel)]=\"resetAccount.password\" minlength=4 maxlength=50 required>\n                        <div *ngIf=\"passwordInput.dirty && passwordInput.invalid\">\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"passwordInput.errors.required\" jhiTranslate=\"global.messages.validate.newpassword.required\">\n                                Your password is required.\n                            </small>\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"passwordInput.errors.minlength\" jhiTranslate=\"global.messages.validate.newpassword.minlength\">\n                                Your password is required to be at least 4 characters.\n                            </small>\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"passwordInput.errors.maxlength\" jhiTranslate=\"global.messages.validate.newpassword.maxlength\">\n                                Your password cannot be longer than 50 characters.\n                            </small>\n                        </div>\n                        <jhi-password-strength-bar [passwordToCheck]=\"resetAccount.password\"></jhi-password-strength-bar>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label class=\"form-control-label\" for=\"confirmPassword\" jhiTranslate=\"global.form.confirmpassword\">New password confirmation</label>\n                        <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" #confirmPasswordInput=\"ngModel\"\n                               placeholder=\"{{'global.form.confirmpassword.placeholder' | translate}}\"\n                               [(ngModel)]=\"confirmPassword\" minlength=4 maxlength=50 required>\n                        <div *ngIf=\"confirmPasswordInput.dirty && confirmPasswordInput.invalid\">\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"confirmPasswordInput.errors.required\" jhiTranslate=\"global.messages.validate.confirmpassword.required\">\n                                Your password confirmation is required.\n                            </small>\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"confirmPasswordInput.errors.minlength\" jhiTranslate=\"global.messages.validate.confirmpassword.minlength\">\n                                Your password confirmation is required to be at least 4 characters.\n                            </small>\n                            <small class=\"form-text text-danger\"\n                               *ngIf=\"confirmPasswordInput.errors.maxlength\" jhiTranslate=\"global.messages.validate.confirmpassword.maxlength\">\n                                Your password confirmation cannot be longer than 50 characters.\n                            </small>\n                        </div>\n                    </div>\n                    <button type=\"submit\" [disabled]=\"passwordForm.form.invalid\" class=\"btn btn-primary\" jhiTranslate=\"reset.finish.form.button\">Reset Password</button>\n                </form>\n            </div>\n\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var password_reset_finish_service_1 = __webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var PasswordResetFinishComponent = (function () {
    function PasswordResetFinishComponent(jhiLanguageService, passwordResetFinish, loginModalService, route, elementRef, renderer) {
        this.jhiLanguageService = jhiLanguageService;
        this.passwordResetFinish = passwordResetFinish;
        this.loginModalService = loginModalService;
        this.route = route;
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.jhiLanguageService.setLocations(['reset']);
    }
    PasswordResetFinishComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            _this.key = params['key'];
        });
        this.resetAccount = {};
        this.keyMissing = !this.key;
    };
    PasswordResetFinishComponent.prototype.ngAfterViewInit = function () {
        if (this.elementRef.nativeElement.querySelector('#password') != null) {
            this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#password'), 'focus', []);
        }
    };
    PasswordResetFinishComponent.prototype.finishReset = function () {
        var _this = this;
        this.doNotMatch = null;
        this.error = null;
        if (this.resetAccount.password !== this.confirmPassword) {
            this.doNotMatch = 'ERROR';
        }
        else {
            this.passwordResetFinish.save({ key: this.key, newPassword: this.resetAccount.password }).subscribe(function () {
                _this.success = 'OK';
            }, function () {
                _this.success = null;
                _this.error = 'ERROR';
            });
        }
    };
    PasswordResetFinishComponent.prototype.login = function () {
        this.modalRef = this.loginModalService.open();
    };
    return PasswordResetFinishComponent;
}());
PasswordResetFinishComponent = __decorate([
    core_1.Component({
        selector: 'jhi-password-reset-finish',
        template: __webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        password_reset_finish_service_1.PasswordResetFinish,
        shared_1.LoginModalService,
        router_1.ActivatedRoute,
        core_1.ElementRef, core_1.Renderer])
], PasswordResetFinishComponent);
exports.PasswordResetFinishComponent = PasswordResetFinishComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/finish/password-reset-finish.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var password_reset_finish_component_1 = __webpack_require__("./src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts");
exports.passwordResetFinishRoute = {
    path: 'reset/finish',
    component: password_reset_finish_component_1.PasswordResetFinishComponent,
    data: {
        authorities: [],
        pageTitle: 'global.menu.account.password'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/finish/password-reset-finish.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var PasswordResetFinish = (function () {
    function PasswordResetFinish(http) {
        this.http = http;
    }
    PasswordResetFinish.prototype.save = function (keyAndPassword) {
        return this.http.post('api/account/reset_password/finish', keyAndPassword);
    };
    return PasswordResetFinish;
}());
PasswordResetFinish = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], PasswordResetFinish);
exports.PasswordResetFinish = PasswordResetFinish;


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/init/password-reset-init.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h1 jhiTranslate=\"reset.request.title\">Reset your password</h1>\n\n            <div class=\"alert alert-danger\" jhiTranslate=\"reset.request.messages.notfound\" *ngIf=\"errorEmailNotExists\">\n                <strong>E-Mail address isn't registered!</strong> Please check and try again.\n            </div>\n\n            <div class=\"alert alert-warning\" *ngIf=\"!success\">\n                <p jhiTranslate=\"reset.request.messages.info\">Enter the e-mail address you used to register.</p>\n            </div>\n\n            <div class=\"alert alert-success\" *ngIf=\"success == 'OK'\">\n                <p jhiTranslate=\"reset.request.messages.success\">Check your e-mails for details on how to reset your password.</p>\n            </div>\n\n            <form *ngIf=\"!success\" name=\"form\" role=\"form\" (ngSubmit)=\"requestReset()\" #resetRequestForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"email\" jhiTranslate=\"global.form.email\">E-mail</label>\n                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{'global.form.email.placeholder' | translate}}\"\n                           [(ngModel)]=\"resetAccount.email\" minlength=5 maxlength=100 #emailInput=\"ngModel\" required>\n                    <div *ngIf=\"emailInput.dirty && emailInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.required\" jhiTranslate=\"global.messages.validate.email.required\">\n                            Your e-mail is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.email\" jhiTranslate=\"global.messages.validate.email.invalid\">\n                            Your e-mail is invalid.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.minlength\" jhiTranslate=\"global.messages.validate.email.minlength\">\n                            Your e-mail is required to be at least 5 characters.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.maxlength\" jhiTranslate=\"global.messages.validate.email.maxlength\">\n                            Your e-mail cannot be longer than 100 characters.\n                        </small>\n                    </div>\n                </div>\n                <button type=\"submit\" [disabled]=\"resetRequestForm.form.invalid\" class=\"btn btn-primary\" jhiTranslate=\"reset.request.form.button\">Reset</button>\n            </form>\n\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var password_reset_init_service_1 = __webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts");
var PasswordResetInitComponent = (function () {
    function PasswordResetInitComponent(jhiLanguageService, passwordResetInit, elementRef, renderer) {
        this.jhiLanguageService = jhiLanguageService;
        this.passwordResetInit = passwordResetInit;
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.jhiLanguageService.setLocations(['reset']);
    }
    PasswordResetInitComponent.prototype.ngOnInit = function () {
        this.resetAccount = {};
    };
    PasswordResetInitComponent.prototype.ngAfterViewInit = function () {
        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#email'), 'focus', []);
    };
    PasswordResetInitComponent.prototype.requestReset = function () {
        var _this = this;
        this.error = null;
        this.errorEmailNotExists = null;
        this.passwordResetInit.save(this.resetAccount.email).subscribe(function () {
            _this.success = 'OK';
        }, function (response) {
            _this.success = null;
            if (response.status === 400 && response.data === 'e-mail address not registered') {
                _this.errorEmailNotExists = 'ERROR';
            }
            else {
                _this.error = 'ERROR';
            }
        });
    };
    return PasswordResetInitComponent;
}());
PasswordResetInitComponent = __decorate([
    core_1.Component({
        selector: 'jhi-password-reset-init',
        template: __webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        password_reset_init_service_1.PasswordResetInit,
        core_1.ElementRef,
        core_1.Renderer])
], PasswordResetInitComponent);
exports.PasswordResetInitComponent = PasswordResetInitComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/init/password-reset-init.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var password_reset_init_component_1 = __webpack_require__("./src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts");
exports.passwordResetInitRoute = {
    path: 'reset/request',
    component: password_reset_init_component_1.PasswordResetInitComponent,
    data: {
        authorities: [],
        pageTitle: 'global.menu.account.password'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/password-reset/init/password-reset-init.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var PasswordResetInit = (function () {
    function PasswordResetInit(http) {
        this.http = http;
    }
    PasswordResetInit.prototype.save = function (mail) {
        return this.http.post('api/account/reset_password/init', mail);
    };
    return PasswordResetInit;
}());
PasswordResetInit = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], PasswordResetInit);
exports.PasswordResetInit = PasswordResetInit;


/***/ }),

/***/ "./src/main/webapp/app/account/password/password-strength-bar.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var PasswordStrengthBarComponent = (function () {
    function PasswordStrengthBarComponent(renderer, elementRef) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];
    }
    PasswordStrengthBarComponent.prototype.measureStrength = function (p) {
        var force = 0;
        var regex = /[$-/:-?{-~!"^_`\[\]]/g; // "
        var lowerLetters = /[a-z]+/.test(p);
        var upperLetters = /[A-Z]+/.test(p);
        var numbers = /[0-9]+/.test(p);
        var symbols = regex.test(p);
        var flags = [lowerLetters, upperLetters, numbers, symbols];
        var passedMatches = flags.filter(function (isMatchedFlag) {
            return isMatchedFlag === true;
        }).length;
        force += 2 * p.length + ((p.length >= 10) ? 1 : 0);
        force += passedMatches * 10;
        // penality (short password)
        force = (p.length <= 6) ? Math.min(force, 10) : force;
        // penality (poor variety of characters)
        force = (passedMatches === 1) ? Math.min(force, 10) : force;
        force = (passedMatches === 2) ? Math.min(force, 20) : force;
        force = (passedMatches === 3) ? Math.min(force, 40) : force;
        return force;
    };
    ;
    PasswordStrengthBarComponent.prototype.getColor = function (s) {
        var idx = 0;
        if (s <= 10) {
            idx = 0;
        }
        else if (s <= 20) {
            idx = 1;
        }
        else if (s <= 30) {
            idx = 2;
        }
        else if (s <= 40) {
            idx = 3;
        }
        else {
            idx = 4;
        }
        return { idx: idx + 1, col: this.colors[idx] };
    };
    ;
    Object.defineProperty(PasswordStrengthBarComponent.prototype, "passwordToCheck", {
        set: function (password) {
            if (password) {
                var c = this.getColor(this.measureStrength(password));
                var element = this.elementRef.nativeElement;
                if (element.className) {
                    this.renderer.setElementClass(element, element.className, false);
                }
                var lis = element.getElementsByTagName('li');
                for (var i = 0; i < lis.length; i++) {
                    if (i < c.idx) {
                        this.renderer.setElementStyle(lis[i], 'backgroundColor', c.col);
                    }
                    else {
                        this.renderer.setElementStyle(lis[i], 'backgroundColor', '#DDD');
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    return PasswordStrengthBarComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PasswordStrengthBarComponent.prototype, "passwordToCheck", null);
PasswordStrengthBarComponent = __decorate([
    core_1.Component({
        selector: 'jhi-password-strength-bar',
        template: "\n        <div id=\"strength\">\n            <small jhiTranslate=\"global.messages.validate.newpassword.strength\">Password strength:</small>\n            <ul id=\"strengthBar\">\n                <li class=\"point\"></li>\n                <li class=\"point\"></li>\n                <li class=\"point\"></li>\n                <li class=\"point\"></li>\n                <li class=\"point\"></li>\n            </ul>\n        </div>",
        styles: [
            __webpack_require__("./src/main/webapp/app/account/password/password-strength-bar.css")
        ]
    }),
    __metadata("design:paramtypes", [core_1.Renderer, core_1.ElementRef])
], PasswordStrengthBarComponent);
exports.PasswordStrengthBarComponent = PasswordStrengthBarComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/password/password-strength-bar.css":
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__("./node_modules/css-loader/index.js!./src/main/webapp/app/account/password/password-strength-bar.css");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./src/main/webapp/app/account/password/password.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h2 jhiTranslate=\"password.title\" translateValues=\"{username: '{{account.login}}'}\" *ngIf=\"account\">Password for [<b>{{account.login}}</b>]</h2>\n\n            <div class=\"alert alert-success\" *ngIf=\"success\" jhiTranslate=\"password.messages.success\">\n                <strong>Password changed!</strong>\n            </div>\n            <div class=\"alert alert-danger\" *ngIf=\"error\"  jhiTranslate=\"password.messages.error\">\n                <strong>An error has occurred!</strong> The password could not be changed.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\" jhiTranslate=\"global.messages.error.dontmatch\">\n                The password and its confirmation do not match!\n            </div>\n\n            <form name=\"form\" role=\"form\" (ngSubmit)=\"changePassword()\" #passwordForm=\"ngForm\">\n\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"password\" jhiTranslate=\"global.form.newpassword\">New password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" #passwordInput=\"ngModel\"\n                    placeholder=\"{{'global.form.newpassword.placeholder' | translate}}\"\n                           [(ngModel)]=\"password\" minlength=4 maxlength=50 required>\n                    <div *ngIf=\"passwordInput.dirty && passwordInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"passwordInput.errors.required\" jhiTranslate=\"global.messages.validate.newpassword.required\">\n                            Your password is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"passwordInput.errors.minlength\" jhiTranslate=\"global.messages.validate.newpassword.minlength\">\n                            Your password is required to be at least 4 characters.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"passwordInput.errors.maxlength\" jhiTranslate=\"global.messages.validate.newpassword.maxlength\">\n                            Your password cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                    <jhi-password-strength-bar [passwordToCheck]=\"password\"></jhi-password-strength-bar>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"confirmPassword\" jhiTranslate=\"global.form.confirmpassword\">New password confirmation</label>\n                    <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" #confirmPasswordInput=\"ngModel\"\n                    placeholder=\"{{'global.form.confirmpassword.placeholder' | translate}}\"\n                           [(ngModel)]=\"confirmPassword\" minlength=4 maxlength=50 required>\n                    <div *ngIf=\"confirmPasswordInput.dirty && confirmPasswordInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"confirmPasswordInput.errors.required\" jhiTranslate=\"global.messages.validate.confirmpassword.required\">\n                            Your confirmation password is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"confirmPasswordInput.errors.minlength\" jhiTranslate=\"global.messages.validate.confirmpassword.minlength\">\n                            Your confirmation password is required to be at least 4 characters.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"confirmPasswordInput.errors.maxlength\" jhiTranslate=\"global.messages.validate.confirmpassword.maxlength\">\n                            Your confirmation password cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                </div>\n\n                <button type=\"submit\" [disabled]=\"passwordForm.form.invalid\" class=\"btn btn-primary\" jhiTranslate=\"password.form.button\">Save</button>\n            </form>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/password/password.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var password_service_1 = __webpack_require__("./src/main/webapp/app/account/password/password.service.ts");
var PasswordComponent = (function () {
    function PasswordComponent(jhiLanguageService, passwordService, principal) {
        this.jhiLanguageService = jhiLanguageService;
        this.passwordService = passwordService;
        this.principal = principal;
        this.jhiLanguageService.setLocations(['password']);
    }
    PasswordComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.principal.identity().then(function (account) {
            _this.account = account;
        });
    };
    PasswordComponent.prototype.changePassword = function () {
        var _this = this;
        if (this.password !== this.confirmPassword) {
            this.error = null;
            this.success = null;
            this.doNotMatch = 'ERROR';
        }
        else {
            this.doNotMatch = null;
            this.passwordService.save(this.password).subscribe(function () {
                _this.error = null;
                _this.success = 'OK';
            }, function () {
                _this.success = null;
                _this.error = 'ERROR';
            });
        }
    };
    return PasswordComponent;
}());
PasswordComponent = __decorate([
    core_1.Component({
        selector: 'jhi-password',
        template: __webpack_require__("./src/main/webapp/app/account/password/password.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        password_service_1.Password,
        shared_1.Principal])
], PasswordComponent);
exports.PasswordComponent = PasswordComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/password/password.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var password_component_1 = __webpack_require__("./src/main/webapp/app/account/password/password.component.ts");
exports.passwordRoute = {
    path: 'password',
    component: password_component_1.PasswordComponent,
    data: {
        authorities: ['ROLE_USER'],
        pageTitle: 'global.menu.account.password'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/password/password.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Password = (function () {
    function Password(http) {
        this.http = http;
    }
    Password.prototype.save = function (newPassword) {
        return this.http.post('api/account/change_password', newPassword);
    };
    return Password;
}());
Password = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Password);
exports.Password = Password;


/***/ }),

/***/ "./src/main/webapp/app/account/register/register.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h1 jhiTranslate=\"register.title\">Registration</h1>\n\n            <div class=\"alert alert-success\" *ngIf=\"success\" jhiTranslate=\"register.messages.success\">\n                <strong>Registration saved!</strong> Please check your email for confirmation.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"error\" jhiTranslate=\"register.messages.error.fail\">\n                <strong>Registration failed!</strong> Please try again later.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"errorUserExists\" jhiTranslate=\"register.messages.error.userexists\">\n                <strong>Login name already registered!</strong> Please choose another one.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"errorEmailExists\" jhiTranslate=\"register.messages.error.emailexists\">\n                <strong>E-mail is already in use!</strong> Please choose another one.\n            </div>\n\n            <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\" jhiTranslate=\"global.messages.error.dontmatch\">\n                The password and its confirmation do not match!\n            </div>\n        </div>\n        <div class=\"col-md-8 offset-md-2\">\n            <form name=\"form\" role=\"form\" (ngSubmit)=\"register()\" #registerForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"login\" jhiTranslate=\"global.form.username\">Username</label>\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"registerAccount.login\" id=\"login\" name=\"login\" #login=\"ngModel\" placeholder=\"{{'global.form.username.placeholder' | translate}}\"\n                            required minlength=\"1\" maxlength=\"50\" pattern=\"^[_'.@A-Za-z0-9-]*$\">\n                    <div *ngIf=\"login.dirty && login.invalid\">\n                        <small class=\"form-text text-danger\" *ngIf=\"login.errors.required\" jhiTranslate=\"register.messages.validate.login.required\">\n                            Your username is required.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"login.errors.minlength\"\n                                jhiTranslate=\"register.messages.validate.login.minlength\">\n                            Your username is required to be at least 1 character.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"login.errors.maxlength\"\n                                jhiTranslate=\"register.messages.validate.login.maxlength\">\n                            Your username cannot be longer than 50 characters.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"login.errors.pattern\"\n                               jhiTranslate=\"register.messages.validate.login.pattern\">\n                            Your username can only contain lower-case letters and digits.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"email\" jhiTranslate=\"global.form.email\">E-mail</label>\n                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" #email=\"ngModel\" placeholder=\"{{'global.form.email.placeholder' | translate}}\"\n                            [(ngModel)]=\"registerAccount.email\" minlength=5 maxlength=100 required>\n                    <div *ngIf=\"email.dirty && email.invalid\">\n                        <small class=\"form-text text-danger\" *ngIf=\"email.errors.required\"\n                                jhiTranslate=\"global.messages.validate.email.required\">\n                            Your e-mail is required.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"email.errors.invalid\"\n                               jhiTranslate=\"global.messages.validate.email.invalid\">\n                            Your e-mail is invalid.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"email.errors.minlength\"\n                               jhiTranslate=\"global.messages.validate.email.minlength\">\n                            Your e-mail is required to be at least 5 characters.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"email.errors.maxlength\"\n                               jhiTranslate=\"global.messages.validate.email.maxlength\">\n                            Your e-mail cannot be longer than 100 characters.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"password\" jhiTranslate=\"global.form.newpassword\">New password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" #password=\"ngModel\" placeholder=\"{{'global.form.newpassword.placeholder' | translate}}\"\n                            [(ngModel)]=\"registerAccount.password\" minlength=4 maxlength=50 required>\n                    <div *ngIf=\"password.dirty && password.invalid\">\n                        <small class=\"form-text text-danger\" *ngIf=\"password.errors.required\"\n                                jhiTranslate=\"global.messages.validate.newpassword.required\">\n                            Your password is required.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"password.errors.minlength\"\n                                jhiTranslate=\"global.messages.validate.newpassword.minlength\">\n                            Your password is required to be at least 4 characters.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"password.errors.maxlength\"\n                                jhiTranslate=\"global.messages.validate.newpassword.maxlength\">\n                            Your password cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                    <jhi-password-strength-bar [passwordToCheck]=\"registerAccount.password\"></jhi-password-strength-bar>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"confirmPassword\" jhiTranslate=\"global.form.confirmpassword\">New password confirmation</label>\n                    <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" name=\"confirmPassword\" #confirmPasswordInput=\"ngModel\" placeholder=\"{{'global.form.confirmpassword.placeholder' | translate}}\"\n                            [(ngModel)]=\"confirmPassword\" minlength=4 maxlength=50 required>\n                    <div *ngIf=\"confirmPasswordInput.dirty && confirmPasswordInput.invalid\">\n                        <small class=\"form-text text-danger\" *ngIf=\"confirmPasswordInput.errors.required\"\n                               jhiTranslate=\"global.messages.validate.confirmpassword.required\">\n                            Your confirmation password is required.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"confirmPasswordInput.errors.minlength\"\n                              jhiTranslate=\"global.messages.validate.confirmpassword.minlength\">\n                            Your confirmation password is required to be at least 4 characters.\n                        </small>\n                        <small class=\"form-text text-danger\" *ngIf=\"confirmPasswordInput.errors.maxlength\"\n                               jhiTranslate=\"global.messages.validate.confirmpassword.maxlength\">\n                            Your confirmation password cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                </div>\n\n                <button type=\"submit\" [disabled]=\"registerForm.form.invalid\" class=\"btn btn-primary\" jhiTranslate=\"register.form.button\">Register</button>\n            </form>\n            <p></p>\n            <div class=\"alert alert-warning\">\n                <span jhiTranslate=\"global.messages.info.authenticated.prefix\">If you want to </span>\n                <a class=\"alert-link\" (click)=\"openLogin()\" jhiTranslate=\"global.messages.info.authenticated.link\">sign in</a><span jhiTranslate=\"global.messages.info.authenticated.suffix\">, you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\").</span>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/register/register.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var register_service_1 = __webpack_require__("./src/main/webapp/app/account/register/register.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var RegisterComponent = (function () {
    function RegisterComponent(languageService, loginModalService, registerService, elementRef, renderer) {
        this.languageService = languageService;
        this.loginModalService = loginModalService;
        this.registerService = registerService;
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.languageService.setLocations(['register']);
    }
    RegisterComponent.prototype.ngOnInit = function () {
        this.success = false;
        this.registerAccount = {};
    };
    RegisterComponent.prototype.ngAfterViewInit = function () {
        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);
    };
    RegisterComponent.prototype.register = function () {
        var _this = this;
        if (this.registerAccount.password !== this.confirmPassword) {
            this.doNotMatch = 'ERROR';
        }
        else {
            this.doNotMatch = null;
            this.error = null;
            this.errorUserExists = null;
            this.errorEmailExists = null;
            this.languageService.getCurrent().then(function (key) {
                _this.registerAccount.langKey = key;
                _this.registerService.save(_this.registerAccount).subscribe(function () {
                    _this.success = true;
                }, function (response) { return _this.processError(response); });
            });
        }
    };
    RegisterComponent.prototype.openLogin = function () {
        this.modalRef = this.loginModalService.open();
    };
    RegisterComponent.prototype.processError = function (response) {
        this.success = null;
        if (response.status === 400 && response._body === 'login already in use') {
            this.errorUserExists = 'ERROR';
        }
        else if (response.status === 400 && response._body === 'e-mail address already in use') {
            this.errorEmailExists = 'ERROR';
        }
        else {
            this.error = 'ERROR';
        }
    };
    return RegisterComponent;
}());
RegisterComponent = __decorate([
    core_1.Component({
        selector: 'jhi-register',
        template: __webpack_require__("./src/main/webapp/app/account/register/register.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        shared_1.LoginModalService,
        register_service_1.Register,
        core_1.ElementRef,
        core_1.Renderer])
], RegisterComponent);
exports.RegisterComponent = RegisterComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/register/register.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var register_component_1 = __webpack_require__("./src/main/webapp/app/account/register/register.component.ts");
exports.registerRoute = {
    path: 'register',
    component: register_component_1.RegisterComponent,
    data: {
        authorities: [],
        pageTitle: 'register.title'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/register/register.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Register = (function () {
    function Register(http) {
        this.http = http;
    }
    Register.prototype.save = function (account) {
        return this.http.post('api/register', account);
    };
    return Register;
}());
Register = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Register);
exports.Register = Register;


/***/ }),

/***/ "./src/main/webapp/app/account/sessions/session.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Session = (function () {
    function Session(series, tokenDate, ipAddress, userAgent) {
        this.series = series;
        this.tokenDate = tokenDate;
        this.ipAddress = ipAddress;
        this.userAgent = userAgent;
    }
    return Session;
}());
exports.Session = Session;


/***/ }),

/***/ "./src/main/webapp/app/account/sessions/sessions.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2 jhiTranslate=\"sessions.title\" translateValues=\"{username: '{{account.login}}'}\" *ngIf=\"account\">Active sessions for [<b>{{account.login}}</b>]</h2>\n\n    <div class=\"alert alert-success\" *ngIf=\"success\" jhiTranslate=\"sessions.messages.success\">\n        <strong>Session invalidated!</strong>\n    </div>\n    <div class=\"alert alert-danger\" *ngIf=\"error\" jhiTranslate=\"sessions.messages.error\">\n        <strong>An error has occured!</strong> The session could not be invalidated.\n    </div>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th jhiTranslate=\"sessions.table.ipaddress\">IP Address</th>\n                    <th jhiTranslate=\"sessions.table.useragent\">User agent</th>\n                    <th jhiTranslate=\"sessions.table.date\">Date</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let session of sessions\">\n                    <td>{{session.ipAddress}}</td>\n                    <td>{{session.userAgent}}</td>\n                    <td>{{session.tokenDate | date:'longDate'}}</td>\n                    <td>\n                        <button type=\"submit\"\n                                class=\"btn btn-primary\"\n                                (click)=\"invalidate(session.series)\" jhiTranslate=\"sessions.table.button\">\n                                 Invalidate\n                        </button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/sessions/sessions.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var sessions_service_1 = __webpack_require__("./src/main/webapp/app/account/sessions/sessions.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var SessionsComponent = (function () {
    function SessionsComponent(jhiLanguageService, sessionsService, principal) {
        this.jhiLanguageService = jhiLanguageService;
        this.sessionsService = sessionsService;
        this.principal = principal;
        this.jhiLanguageService.setLocations(['sessions']);
    }
    SessionsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sessionsService.findAll().subscribe(function (sessions) { return _this.sessions = sessions; });
        this.principal.identity().then(function (account) {
            _this.account = account;
        });
    };
    SessionsComponent.prototype.invalidate = function (series) {
        var _this = this;
        this.sessionsService.delete(encodeURIComponent(series)).subscribe(function (response) {
            if (response.status === 200) {
                _this.error = null;
                _this.success = 'OK';
                _this.sessionsService.findAll().subscribe(function (sessions) { return _this.sessions = sessions; });
            }
            else {
                _this.success = null;
                _this.error = 'ERROR';
            }
        });
    };
    return SessionsComponent;
}());
SessionsComponent = __decorate([
    core_1.Component({
        selector: 'jhi-sessions',
        template: __webpack_require__("./src/main/webapp/app/account/sessions/sessions.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        sessions_service_1.SessionsService,
        shared_1.Principal])
], SessionsComponent);
exports.SessionsComponent = SessionsComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/sessions/sessions.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var sessions_component_1 = __webpack_require__("./src/main/webapp/app/account/sessions/sessions.component.ts");
exports.sessionsRoute = {
    path: 'sessions',
    component: sessions_component_1.SessionsComponent,
    data: {
        authorities: ['ROLE_USER'],
        pageTitle: 'global.menu.account.sessions'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/account/sessions/sessions.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var SessionsService = (function () {
    function SessionsService(http) {
        this.http = http;
        this.resourceUrl = 'api/account/sessions/';
    }
    SessionsService.prototype.findAll = function () {
        return this.http.get(this.resourceUrl).map(function (res) { return res.json(); });
    };
    SessionsService.prototype.delete = function (series) {
        return this.http.delete("" + this.resourceUrl + series);
    };
    return SessionsService;
}());
SessionsService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], SessionsService);
exports.SessionsService = SessionsService;


/***/ }),

/***/ "./src/main/webapp/app/account/settings/settings.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <h2 jhiTranslate=\"settings.title\" translateValues=\"{username: '{{settingsAccount.login}}'}\" *ngIf=\"settingsAccount\">User settings for [<b>{{settingsAccount.login}}</b>]</h2>\n\n            <div class=\"alert alert-success\" *ngIf=\"success\" jhiTranslate=\"settings.messages.success\">\n                <strong>Settings saved!</strong>\n            </div>\n\n            <jhi-alert-error></jhi-alert-error>\n\n            <form name=\"form\" role=\"form\" (ngSubmit)=\"save()\" #settingsForm=\"ngForm\" *ngIf=\"settingsAccount\" novalidate>\n\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"firstName\" jhiTranslate=\"settings.form.firstname\">First Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" placeholder=\"{{'settings.form.firstname.placeholder' | translate}}\"\n                           [(ngModel)]=\"settingsAccount.firstName\" minlength=1 maxlength=50 #firstNameInput=\"ngModel\" required>\n                    <div *ngIf=\"firstNameInput.dirty && firstNameInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"firstNameInput.errors.required\" jhiTranslate=\"settings.messages.validate.firstname.required\">\n                            Your first name is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"firstNameInput.errors.minlength\" jhiTranslate=\"settings.messages.validate.firstname.minlength\">\n                            Your first name is required to be at least 1 character.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"firstNameInput.errors.maxlength\" jhiTranslate=\"settings.messages.validate.firstname.maxlength\">\n                            Your first name cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"lastName\" jhiTranslate=\"settings.form.lastname\">Last Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" placeholder=\"{{'settings.form.lastname.placeholder' | translate}}\"\n                           [(ngModel)]=\"settingsAccount.lastName\" minlength=1 maxlength=50 #lastNameInput=\"ngModel\" required>\n                    <div *ngIf=\"lastNameInput.dirty && lastNameInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"lastNameInput.errors.required\" jhiTranslate=\"settings.messages.validate.lastname.required\">\n                            Your last name is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"lastNameInput.errors.minlength\" jhiTranslate=\"settings.messages.validate.lastname.minlength\">\n                            Your last name is required to be at least 1 character.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"lastNameInput.errors.maxlength\" jhiTranslate=\"settings.messages.validate.lastname.maxlength\">\n                            Your last name cannot be longer than 50 characters.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-control-label\" for=\"email\" jhiTranslate=\"global.form.email\">E-mail</label>\n                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"{{'global.form.email.placeholder' | translate}}\"\n                           [(ngModel)]=\"settingsAccount.email\" minlength=5 maxlength=100 #emailInput=\"ngModel\" required>\n                    <div *ngIf=\"emailInput.dirty && emailInput.invalid\">\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.required\" jhiTranslate=\"global.messages.validate.email.required\">\n                            Your e-mail is required.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.email\" jhiTranslate=\"global.messages.validate.email.invalid\">\n                            Your e-mail is invalid.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.minlength\" jhiTranslate=\"global.messages.validate.email.minlength\">\n                            Your e-mail is required to be at least 5 characters.\n                        </small>\n                        <small class=\"form-text text-danger\"\n                           *ngIf=\"emailInput.errors.maxlength\" jhiTranslate=\"global.messages.validate.email.maxlength\">\n                            Your e-mail cannot be longer than 100 characters.\n                        </small>\n                    </div>\n                </div>\n                <div class=\"form-group\" *ngIf=\"languages && languages.length > 0\">\n                    <label for=\"langKey\" jhiTranslate=\"settings.form.language\">Language</label>\n                    <select class=\"form-control\" id=\"langKey\" name=\"langKey\" [(ngModel)]=\"settingsAccount.langKey\">\n                        <option *ngFor=\"let language of languages\" [value]=\"language\">{{language | findLanguageFromKey}}</option>\n                    </select>\n                </div>\n                <button type=\"submit\" [disabled]=\"settingsForm.form.invalid\" class=\"btn btn-primary\" jhiTranslate=\"settings.form.button\">Save</button>\n            </form>\n        </div>\n    </div>\n\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/account/settings/settings.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var SettingsComponent = (function () {
    function SettingsComponent(account, principal, languageService, languageHelper) {
        this.account = account;
        this.principal = principal;
        this.languageService = languageService;
        this.languageHelper = languageHelper;
        this.languageService.setLocations(['settings']);
    }
    SettingsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.principal.identity().then(function (account) {
            _this.settingsAccount = _this.copyAccount(account);
        });
        this.languageHelper.getAll().then(function (languages) {
            _this.languages = languages;
        });
    };
    SettingsComponent.prototype.save = function () {
        var _this = this;
        this.account.save(this.settingsAccount).subscribe(function () {
            _this.error = null;
            _this.success = 'OK';
            _this.principal.identity(true).then(function (account) {
                _this.settingsAccount = _this.copyAccount(account);
            });
            _this.languageService.getCurrent().then(function (current) {
                if (_this.settingsAccount.langKey !== current) {
                    _this.languageService.changeLanguage(_this.settingsAccount.langKey);
                }
            });
        }, function () {
            _this.success = null;
            _this.error = 'ERROR';
        });
    };
    SettingsComponent.prototype.copyAccount = function (account) {
        return {
            activated: account.activated,
            email: account.email,
            firstName: account.firstName,
            langKey: account.langKey,
            lastName: account.lastName,
            login: account.login,
            imageUrl: account.imageUrl
        };
    };
    return SettingsComponent;
}());
SettingsComponent = __decorate([
    core_1.Component({
        selector: 'jhi-settings',
        template: __webpack_require__("./src/main/webapp/app/account/settings/settings.component.html")
    }),
    __metadata("design:paramtypes", [shared_1.AccountService,
        shared_1.Principal,
        ng_jhipster_1.JhiLanguageService,
        shared_1.JhiLanguageHelper])
], SettingsComponent);
exports.SettingsComponent = SettingsComponent;


/***/ }),

/***/ "./src/main/webapp/app/account/settings/settings.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var settings_component_1 = __webpack_require__("./src/main/webapp/app/account/settings/settings.component.ts");
exports.settingsRoute = {
    path: 'settings',
    component: settings_component_1.SettingsComponent,
    data: {
        authorities: ['ROLE_USER'],
        pageTitle: 'global.menu.account.settings'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/admin/admin.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/admin/index.ts");
var LimsAdminModule = (function () {
    function LimsAdminModule() {
    }
    return LimsAdminModule;
}());
LimsAdminModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(_1.adminState, { useHash: true })
        ],
        declarations: [
            _1.AuditsComponent,
            _1.UserMgmtComponent,
            _1.UserDialogComponent,
            _1.UserDeleteDialogComponent,
            _1.UserMgmtDetailComponent,
            _1.UserMgmtDialogComponent,
            _1.UserMgmtDeleteDialogComponent,
            _1.LogsComponent,
            _1.JhiConfigurationComponent,
            _1.JhiHealthCheckComponent,
            _1.JhiHealthModalComponent,
            _1.JhiDocsComponent,
            _1.JhiMetricsMonitoringComponent,
            _1.JhiMetricsMonitoringModalComponent
        ],
        entryComponents: [
            _1.UserMgmtDialogComponent,
            _1.UserMgmtDeleteDialogComponent,
            _1.JhiHealthModalComponent,
            _1.JhiMetricsMonitoringModalComponent,
        ],
        providers: [
            _1.AuditsService,
            _1.JhiConfigurationService,
            _1.JhiHealthService,
            _1.JhiMetricsService,
            _1.LogsService,
            _1.UserResolvePagingParams,
            _1.UserResolve,
            _1.UserModalService
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsAdminModule);
exports.LimsAdminModule = LimsAdminModule;


/***/ }),

/***/ "./src/main/webapp/app/admin/admin.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var _1 = __webpack_require__("./src/main/webapp/app/admin/index.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var ADMIN_ROUTES = [
    _1.auditsRoute,
    _1.configurationRoute,
    _1.docsRoute,
    _1.healthRoute,
    _1.logsRoute
].concat(_1.userMgmtRoute, [
    _1.metricsRoute
]);
exports.adminState = [{
        path: '',
        data: {
            authorities: ['ROLE_ADMIN']
        },
        canActivate: [shared_1.UserRouteAccessService],
        children: ADMIN_ROUTES
    }].concat(_1.userDialogRoute);


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audit-data.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AuditData = (function () {
    function AuditData(remoteAddress, sessionId) {
        this.remoteAddress = remoteAddress;
        this.sessionId = sessionId;
    }
    return AuditData;
}());
exports.AuditData = AuditData;


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audit.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Audit = (function () {
    function Audit(data, principal, timestamp, type) {
        this.data = data;
        this.principal = principal;
        this.timestamp = timestamp;
        this.type = type;
    }
    return Audit;
}());
exports.Audit = Audit;


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audits.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"audits\">\n    <h2 jhiTranslate=\"audits.title\">Audits</h2>\n\n    <div class=\"row\">\n        <div class=\"col-md-5\">\n            <h4 jhiTranslate=\"audits.filter.title\">Filter by date</h4>\n            <p class=\"input-group\">\n                <span jhiTranslate=\"audits.filter.from\" class=\"input-group-addon\">from</span>\n                <input type=\"date\" class=\"input-sm form-control\" name=\"start\" [(ngModel)]=\"fromDate\" (ngModelChange)=\"onChangeDate($event)\" required/>\n                <span jhiTranslate=\"audits.filter.to\" class=\"input-group-addon\">to</span>\n                <input type=\"date\" class=\"input-sm form-control\" name=\"end\" [(ngModel)]=\"toDate\" (ngModelChange)=\"onChangeDate($event)\" required/>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"table-responsive\">\n        <table class=\"table table-condensed table-striped table-bordered\">\n            <thead>\n            <tr>\n                <th (click)=\"orderProp = 'timestamp'; reverse=!reverse\"><span jhiTranslate=\"audits.table.header.date\">Date</span></th>\n                <th (click)=\"orderProp = 'principal'; reverse=!reverse\"><span jhiTranslate=\"audits.table.header.principal\">User</span></th>\n                <th (click)=\"orderProp = 'type'; reverse=!reverse\"><span jhiTranslate=\"audits.table.header.status\">State</span></th>\n                <th (click)=\"orderProp = 'data.message'; reverse=!reverse\"><span jhiTranslate=\"audits.table.header.data\">Extra data</span></th>\n            </tr>\n            </thead>\n            <tr *ngFor=\"let audit of getAudits()\">\n                <td><span>{{audit.timestamp| date:'medium'}}</span></td>\n                <td><small>{{audit.principal}}</small></td>\n                <td>{{audit.type}}</td>\n                <td>\n                    <span ng-show=\"audit.data.message\">{{audit.data.message}}</span>\n                    <span ng-show=\"audit.data.remoteAddress\"><span jhiTranslate=\"audits.table.data.remoteAddress\">Remote Address</span> {{audit.data.remoteAddress}}</span>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div class=\"text-xs-center\" *ngIf=\"audits\">\n        <jhi-item-count [page]=\"page\" [total]=\"totalItems\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n        <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" (pageChange)=\"loadPage(page)\"></ngb-pagination>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audits.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = __webpack_require__(0);
var common_1 = __webpack_require__(6);
var ng_jhipster_1 = __webpack_require__(2);
var audits_service_1 = __webpack_require__("./src/main/webapp/app/admin/audits/audits.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var AuditsComponent = (function () {
    function AuditsComponent(jhiLanguageService, auditsService, parseLinks, locale, paginationConfig) {
        this.jhiLanguageService = jhiLanguageService;
        this.auditsService = auditsService;
        this.parseLinks = parseLinks;
        this.locale = locale;
        this.paginationConfig = paginationConfig;
        this.jhiLanguageService.setLocations(['audits']);
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.page = 1;
        this.reverse = false;
        this.orderProp = 'timestamp';
        this.datePipe = new common_1.DatePipe(this.locale);
    }
    AuditsComponent.prototype.getAudits = function () {
        return this.sortAudits(this.audits);
    };
    AuditsComponent.prototype.loadPage = function (page) {
        this.page = page;
        this.onChangeDate();
    };
    AuditsComponent.prototype.ngOnInit = function () {
        this.today();
        this.previousMonth();
        this.onChangeDate();
    };
    AuditsComponent.prototype.onChangeDate = function () {
        var _this = this;
        this.auditsService.query({ page: this.page - 1, size: this.itemsPerPage,
            fromDate: this.fromDate, toDate: this.toDate }).subscribe(function (res) {
            _this.audits = res.json();
            _this.links = _this.parseLinks.parse(res.headers.get('link'));
            _this.totalItems = +res.headers.get('X-Total-Count');
        });
    };
    AuditsComponent.prototype.previousMonth = function () {
        var dateFormat = 'yyyy-MM-dd';
        var fromDate = new Date();
        if (fromDate.getMonth() === 0) {
            fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());
        }
        else {
            fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());
        }
        this.fromDate = this.datePipe.transform(fromDate, dateFormat);
    };
    AuditsComponent.prototype.today = function () {
        var dateFormat = 'yyyy-MM-dd';
        // Today + 1 day - needed if the current day must be included
        var today = new Date();
        var date = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);
        this.toDate = this.datePipe.transform(date, dateFormat);
    };
    AuditsComponent.prototype.sortAudits = function (audits) {
        var _this = this;
        audits = audits.slice(0).sort(function (a, b) {
            if (a[_this.orderProp] < b[_this.orderProp]) {
                return -1;
            }
            else if (true) {
                return 1;
            }
            else {
                return 0;
            }
        });
        return this.reverse ? audits.reverse() : audits;
    };
    return AuditsComponent;
}());
AuditsComponent = __decorate([
    core_1.Component({
        selector: 'jhi-audit',
        template: __webpack_require__("./src/main/webapp/app/admin/audits/audits.component.html")
    }),
    __param(3, core_1.Inject(core_1.LOCALE_ID)),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        audits_service_1.AuditsService,
        ng_jhipster_1.ParseLinks, String, uib_pagination_config_1.PaginationConfig])
], AuditsComponent);
exports.AuditsComponent = AuditsComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audits.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var audits_component_1 = __webpack_require__("./src/main/webapp/app/admin/audits/audits.component.ts");
exports.auditsRoute = {
    path: 'audits',
    component: audits_component_1.AuditsComponent,
    data: {
        pageTitle: 'audits.title'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/audits/audits.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var AuditsService = (function () {
    function AuditsService(http) {
        this.http = http;
    }
    AuditsService.prototype.query = function (req) {
        var params = new http_1.URLSearchParams();
        params.set('fromDate', req.fromDate);
        params.set('toDate', req.toDate);
        params.set('page', req.page);
        params.set('size', req.size);
        params.set('sort', req.sort);
        var options = {
            search: params
        };
        return this.http.get('management/audits', options);
    };
    return AuditsService;
}());
AuditsService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], AuditsService);
exports.AuditsService = AuditsService;


/***/ }),

/***/ "./src/main/webapp/app/admin/configuration/configuration.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"allConfiguration && configuration\">\n    <h2 jhiTranslate=\"configuration.title\">Configuration</h2>\n\n    <span jhiTranslate=\"configuration.filter\">Filter (by prefix)</span> <input type=\"text\" [(ngModel)]=\"filter\" class=\"form-control\">\n    <label>Spring configuration</label>\n    <table class=\"table table-sm table-striped table-bordered table-responsive\"\n        style=\"table-layout:fixed\">\n        <thead>\n        <tr class=\"row\">\n            <th class=\"col-sm-4\" (click)=\"orderProp = 'prefix'; reverse=!reverse\"><span jhiTranslate=\"configuration.table.prefix\">Prefix</span></th>\n            <th class=\"col-sm-8\" (click)=\"orderProp = 'properties'; reverse=!reverse\" jhiTranslate=\"configuration.table.properties\">Properties</th>\n        </tr>\n        </thead>\n\n        <tr *ngFor=\"let entry of (configuration | pureFilter:filter:'prefix' | orderBy:orderProp:reverse)\">\n            <td><span>{{entry.prefix}}</span></td>\n            <td>\n                <div class=\"row\" *ngFor=\"let key of keys(entry.properties)\">\n                    <div class=\"col-md-4\">{{key}}</div>\n                    <div class=\"col-md-8\">\n                        <span class=\"float-xs-right tag tag-default break\">{{entry.properties[key]}}</span>\n                    </div>\n                </div>\n            </td>\n        </tr>\n    </table>\n    <div *ngFor=\"let key of keys(allConfiguration)\">\n        <label><span>{{key}}</span></label>\n        <table class=\"table table-sm table-striped table-bordered table-responsive\"\n               style=\"table-layout:fixed\">\n            <thead>\n            <tr class=\"row\">\n                <th class=\"col-sm-4\">Property</th>\n                <th class=\"col-sm-8\">Value</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of allConfiguration[key]\">\n                <td class=\"break\">{{item.key}}</td>\n                <td class=\"break\">\n                    <span class=\"float-xs-right tag tag-default break\">{{item.val}}</span>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/configuration/configuration.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var configuration_service_1 = __webpack_require__("./src/main/webapp/app/admin/configuration/configuration.service.ts");
var JhiConfigurationComponent = (function () {
    function JhiConfigurationComponent(jhiLanguageService, configurationService) {
        this.jhiLanguageService = jhiLanguageService;
        this.configurationService = configurationService;
        this.allConfiguration = null;
        this.configuration = null;
        this.jhiLanguageService.setLocations(['configuration']);
        this.configKeys = [];
        this.filter = '';
        this.orderProp = 'prefix';
        this.reverse = false;
    }
    JhiConfigurationComponent.prototype.keys = function (dict) {
        return (dict === undefined) ? [] : Object.keys(dict);
    };
    JhiConfigurationComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.configurationService.get().subscribe(function (configuration) {
            _this.configuration = configuration;
            for (var _i = 0, configuration_1 = configuration; _i < configuration_1.length; _i++) {
                var config = configuration_1[_i];
                if (config.properties !== undefined) {
                    _this.configKeys.push(Object.keys(config.properties));
                }
            }
        });
        this.configurationService.getEnv().subscribe(function (configuration) {
            _this.allConfiguration = configuration;
        });
    };
    return JhiConfigurationComponent;
}());
JhiConfigurationComponent = __decorate([
    core_1.Component({
        selector: 'jhi-configuration',
        template: __webpack_require__("./src/main/webapp/app/admin/configuration/configuration.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        configuration_service_1.JhiConfigurationService])
], JhiConfigurationComponent);
exports.JhiConfigurationComponent = JhiConfigurationComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/configuration/configuration.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var configuration_component_1 = __webpack_require__("./src/main/webapp/app/admin/configuration/configuration.component.ts");
exports.configurationRoute = {
    path: 'jhi-configuration',
    component: configuration_component_1.JhiConfigurationComponent,
    data: {
        pageTitle: 'configuration.title'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/configuration/configuration.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var JhiConfigurationService = (function () {
    function JhiConfigurationService(http) {
        this.http = http;
    }
    JhiConfigurationService.prototype.get = function () {
        return this.http.get('management/configprops').map(function (res) {
            var properties = [];
            var propertiesObject = res.json();
            for (var key in propertiesObject) {
                if (propertiesObject.hasOwnProperty(key)) {
                    properties.push(propertiesObject[key]);
                }
            }
            return properties.sort(function (propertyA, propertyB) {
                return (propertyA.prefix === propertyB.prefix) ? 0 :
                    (propertyA.prefix < propertyB.prefix) ? -1 : 1;
            });
        });
    };
    JhiConfigurationService.prototype.getEnv = function () {
        return this.http.get('management/env').map(function (res) {
            var properties = {};
            var propertiesObject = res.json();
            for (var key in propertiesObject) {
                if (propertiesObject.hasOwnProperty(key)) {
                    var valsObject = propertiesObject[key];
                    var vals = [];
                    for (var valKey in valsObject) {
                        if (valsObject.hasOwnProperty(valKey)) {
                            vals.push({ key: valKey, val: valsObject[valKey] });
                        }
                    }
                    properties[key] = vals;
                }
            }
            return properties;
        });
    };
    return JhiConfigurationService;
}());
JhiConfigurationService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], JhiConfigurationService);
exports.JhiConfigurationService = JhiConfigurationService;


/***/ }),

/***/ "./src/main/webapp/app/admin/docs/docs.component.html":
/***/ (function(module, exports) {

module.exports = "<iframe src=\"swagger-ui/index.html\" width=\"100%\" height=\"900\"\n    target=\"_top\" title=\"Swagger UI\"></iframe>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/docs/docs.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var JhiDocsComponent = (function () {
    function JhiDocsComponent() {
    }
    return JhiDocsComponent;
}());
JhiDocsComponent = __decorate([
    core_1.Component({
        selector: 'jhi-docs',
        template: __webpack_require__("./src/main/webapp/app/admin/docs/docs.component.html")
    }),
    __metadata("design:paramtypes", [])
], JhiDocsComponent);
exports.JhiDocsComponent = JhiDocsComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/docs/docs.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var docs_component_1 = __webpack_require__("./src/main/webapp/app/admin/docs/docs.component.ts");
exports.docsRoute = {
    path: 'docs',
    component: docs_component_1.JhiDocsComponent,
    data: {
        pageTitle: 'global.menu.admin.apidocs'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/health/health-modal.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\n    <button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" (click)=\"activeModal.dismiss('closed')\"><span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h4 class=\"modal-title\" id=\"showHealthLabel\">\n\t\t{{'health.indicator.' + baseName(currentHealth.name) | translate}}\n        {{subSystemName(currentHealth.name)}}\n    </h4>\n</div>\n<div class=\"modal-body pad\">\n    <div *ngIf=\"currentHealth.details\">\n        <h4 jhiTranslate=\"health.details.properties\">Properties</h4>\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr class=\"row\">\n                        <th class=\"col-md-6 text-xs-left\" jhiTranslate=\"health.details.name\">Name</th>\n                        <th class=\"col-md-6 text-xs-left\" jhiTranslate=\"health.details.value\">Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let entry of currentHealth.details | keys\">\n                        <td class=\"col-md-6 text-xs-left\">{{entry.key}}</td>\n                        <td class=\"col-md-6 text-xs-left\">{{readableValue(entry.value)}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div *ngIf=\"currentHealth.error\">\n        <h4 jhiTranslate=\"health.details.error\">Error</h4>\n            <pre>{{currentHealth.error}}</pre>\n    </div>\n</div>\n<div class=\"modal-footer\">\n    <button data-dismiss=\"modal\" class=\"btn btn-secondary float-xs-left\" type=\"button\" (click)=\"activeModal.dismiss('closed')\">Done</button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/health/health-modal.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var health_service_1 = __webpack_require__("./src/main/webapp/app/admin/health/health.service.ts");
var JhiHealthModalComponent = (function () {
    function JhiHealthModalComponent(healthService, activeModal) {
        this.healthService = healthService;
        this.activeModal = activeModal;
    }
    JhiHealthModalComponent.prototype.baseName = function (name) {
        return this.healthService.getBaseName(name);
    };
    JhiHealthModalComponent.prototype.subSystemName = function (name) {
        return this.healthService.getSubSystemName(name);
    };
    JhiHealthModalComponent.prototype.readableValue = function (value) {
        if (this.currentHealth.name !== 'diskSpace') {
            return value.toString();
        }
        // Should display storage space in an human readable unit
        var val = value / 1073741824;
        if (val > 1) {
            return val.toFixed(2) + ' GB';
        }
        else {
            return (value / 1048576).toFixed(2) + ' MB';
        }
    };
    return JhiHealthModalComponent;
}());
JhiHealthModalComponent = __decorate([
    core_1.Component({
        selector: 'jhi-health-modal',
        template: __webpack_require__("./src/main/webapp/app/admin/health/health-modal.component.html")
    }),
    __metadata("design:paramtypes", [health_service_1.JhiHealthService, ng_bootstrap_1.NgbActiveModal])
], JhiHealthModalComponent);
exports.JhiHealthModalComponent = JhiHealthModalComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/health/health.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span jhiTranslate=\"health.title\">Health Checks</span>\n        <button class=\"btn btn-primary float-xs-right\" (click)=\"refresh()\">\n            <span class=\"fa fa-refresh\"></span> <span jhiTranslate=\"health.refresh.button\">Refresh</span>\n        </button>\n    </h2>\n    <div class=\"table-responsive\">\n        <table id=\"healthCheck\" class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th class=\"col-md-7\" jhiTranslate=\"health.table.service\">Service Name</th>\n                    <th class=\"col-md-2 text-xs-center\" jhiTranslate=\"health.table.status\">Status</th>\n                    <th class=\"col-md-2 text-xs-center\" jhiTranslate=\"health.details.details\">Details</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let health of healthData\">\n                    <td>{{'health.indicator.' + baseName(health.name) | translate}} {{subSystemName(health.name)}}</td>\n                    <td class=\"text-xs-center\">\n                        <span class=\"tag\" [ngClass]=\"getTagClass(health.status)\" jhiTranslate=\"{{'health.status.' + health.status}}\">\n                            {{health.status}}\n                        </span>\n                    </td>\n                    <td class=\"text-xs-center\">\n                        <a class=\"hand\" (click)=\"showHealth(health)\" *ngIf=\"health.details || health.error\">\n                            <i class=\"fa fa-eye\"></i>\n                        </a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/health/health.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var health_service_1 = __webpack_require__("./src/main/webapp/app/admin/health/health.service.ts");
var health_modal_component_1 = __webpack_require__("./src/main/webapp/app/admin/health/health-modal.component.ts");
var JhiHealthCheckComponent = (function () {
    function JhiHealthCheckComponent(jhiLanguageService, modalService, healthService) {
        this.jhiLanguageService = jhiLanguageService;
        this.modalService = modalService;
        this.healthService = healthService;
        this.jhiLanguageService.setLocations(['health']);
    }
    JhiHealthCheckComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    JhiHealthCheckComponent.prototype.baseName = function (name) {
        return this.healthService.getBaseName(name);
    };
    JhiHealthCheckComponent.prototype.getTagClass = function (statusState) {
        if (statusState === 'UP') {
            return 'tag-success';
        }
        else {
            return 'tag-danger';
        }
    };
    JhiHealthCheckComponent.prototype.refresh = function () {
        var _this = this;
        this.updatingHealth = true;
        this.healthService.checkHealth().subscribe(function (health) {
            _this.healthData = _this.healthService.transformHealthData(health);
            _this.updatingHealth = false;
        }, function (error) {
            if (error.status === 503) {
                _this.healthData = _this.healthService.transformHealthData(error.json());
                _this.updatingHealth = false;
            }
        });
    };
    JhiHealthCheckComponent.prototype.showHealth = function (health) {
        var modalRef = this.modalService.open(health_modal_component_1.JhiHealthModalComponent);
        modalRef.componentInstance.currentHealth = health;
        modalRef.result.then(function (result) {
            // Left blank intentionally, nothing to do here
        }, function (reason) {
            // Left blank intentionally, nothing to do here
        });
    };
    JhiHealthCheckComponent.prototype.subSystemName = function (name) {
        return this.healthService.getSubSystemName(name);
    };
    return JhiHealthCheckComponent;
}());
JhiHealthCheckComponent = __decorate([
    core_1.Component({
        selector: 'jhi-health',
        template: __webpack_require__("./src/main/webapp/app/admin/health/health.component.html"),
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_bootstrap_1.NgbModal,
        health_service_1.JhiHealthService])
], JhiHealthCheckComponent);
exports.JhiHealthCheckComponent = JhiHealthCheckComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/health/health.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var health_component_1 = __webpack_require__("./src/main/webapp/app/admin/health/health.component.ts");
exports.healthRoute = {
    path: 'jhi-health',
    component: health_component_1.JhiHealthCheckComponent,
    data: {
        pageTitle: 'health.title'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/health/health.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var JhiHealthService = (function () {
    function JhiHealthService(http) {
        this.http = http;
        this.separator = '.';
    }
    JhiHealthService.prototype.checkHealth = function () {
        return this.http.get('management/health').map(function (res) { return res.json(); });
    };
    JhiHealthService.prototype.transformHealthData = function (data) {
        var response = [];
        this.flattenHealthData(response, null, data);
        return response;
    };
    JhiHealthService.prototype.getBaseName = function (name) {
        if (name) {
            var split = name.split('.');
            return split[0];
        }
    };
    JhiHealthService.prototype.getSubSystemName = function (name) {
        if (name) {
            var split = name.split('.');
            split.splice(0, 1);
            var remainder = split.join('.');
            return remainder ? ' - ' + remainder : '';
        }
    };
    /* private methods */
    JhiHealthService.prototype.addHealthObject = function (result, isLeaf, healthObject, name) {
        var status;
        var error;
        var healthData = {
            'name': name,
            'error': error,
            'status': status
        };
        var details = {};
        var hasDetails = false;
        for (var key in healthObject) {
            if (healthObject.hasOwnProperty(key)) {
                var value = healthObject[key];
                if (key === 'status' || key === 'error') {
                    healthData[key] = value;
                }
                else {
                    if (!this.isHealthObject(value)) {
                        details[key] = value;
                        hasDetails = true;
                    }
                }
            }
        }
        // Add the details
        if (hasDetails) {
            healthData.details = details;
        }
        // Only add nodes if they provide additional information
        if (isLeaf || hasDetails || healthData.error) {
            result.push(healthData);
        }
        return healthData;
    };
    JhiHealthService.prototype.flattenHealthData = function (result, path, data) {
        for (var key in data) {
            if (data.hasOwnProperty(key)) {
                var value = data[key];
                if (this.isHealthObject(value)) {
                    if (this.hasSubSystem(value)) {
                        this.addHealthObject(result, false, value, this.getModuleName(path, key));
                        this.flattenHealthData(result, this.getModuleName(path, key), value);
                    }
                    else {
                        this.addHealthObject(result, true, value, this.getModuleName(path, key));
                    }
                }
            }
        }
        return result;
    };
    JhiHealthService.prototype.getModuleName = function (path, name) {
        var result;
        if (path && name) {
            result = path + this.separator + name;
        }
        else if (path) {
            result = path;
        }
        else if (name) {
            result = name;
        }
        else {
            result = '';
        }
        return result;
    };
    JhiHealthService.prototype.hasSubSystem = function (healthObject) {
        var result = false;
        for (var key in healthObject) {
            if (healthObject.hasOwnProperty(key)) {
                var value = healthObject[key];
                if (value && value.status) {
                    result = true;
                }
            }
        }
        return result;
    };
    JhiHealthService.prototype.isHealthObject = function (healthObject) {
        var result = false;
        for (var key in healthObject) {
            if (healthObject.hasOwnProperty(key)) {
                if (key === 'status') {
                    result = true;
                }
            }
        }
        return result;
    };
    return JhiHealthService;
}());
JhiHealthService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], JhiHealthService);
exports.JhiHealthService = JhiHealthService;


/***/ }),

/***/ "./src/main/webapp/app/admin/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audits.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audits.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audits.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audit.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/audits/audit-data.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/configuration/configuration.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/configuration/configuration.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/configuration/configuration.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/docs/docs.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/docs/docs.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/health/health.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/health/health-modal.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/health/health.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/health/health.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/logs/logs.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/logs/logs.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/logs/logs.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/logs/log.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/metrics/metrics.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/metrics/metrics-modal.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/metrics/metrics.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/metrics/metrics.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-management.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/user-management/user-modal.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/admin/admin.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/admin/logs/log.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Log = (function () {
    function Log(name, level) {
        this.name = name;
        this.level = level;
    }
    return Log;
}());
exports.Log = Log;


/***/ }),

/***/ "./src/main/webapp/app/admin/logs/logs.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"table-responsive\" *ngIf=\"loggers\">\n    <h2 jhiTranslate=\"logs.title\">Logs</h2>\n\n    <p jhiTranslate=\"logs.nbloggers\" translateValues=\"{total: '{{ loggers.length }}'}\">There are {{ loggers.length }} loggers.</p>\n\n    <span jhiTranslate=\"logs.filter\">Filter</span> <input type=\"text\" [(ngModel)]=\"filter\" class=\"form-control\">\n\n    <table class=\"table table-condensed table-striped table-bordered\">\n        <thead>\n        <tr title=\"click to order\">\n            <th (click)=\"orderProp = 'name'; reverse=!reverse\"><span jhiTranslate=\"logs.table.name\">Name</span></th>\n            <th (click)=\"orderProp = 'level'; reverse=!reverse\"><span jhiTranslate=\"logs.table.level\">Level</span></th>\n        </tr>\n        </thead>\n\n        <tr *ngFor=\"let logger of (loggers | pureFilter:filter:'name' | orderBy:orderProp:reverse)\">\n            <td><small>{{logger.name | slice:0:140}}</small></td>\n            <td>\n                <button (click)=\"changeLevel(logger.name, 'TRACE')\" [ngClass]=\"(logger.level=='TRACE') ? 'btn-danger' : 'btn-secondary'\" class=\"btn btn-sm\">TRACE</button>\n                <button (click)=\"changeLevel(logger.name, 'DEBUG')\" [ngClass]=\"(logger.level=='DEBUG') ? 'btn-warning' : 'btn-secondary'\" class=\"btn btn-sm\">DEBUG</button>\n                <button (click)=\"changeLevel(logger.name, 'INFO')\" [ngClass]=\"(logger.level=='INFO') ? 'btn-info' : 'btn-secondary'\" class=\"btn btn-sm\">INFO</button>\n                <button (click)=\"changeLevel(logger.name, 'WARN')\" [ngClass]=\"(logger.level=='WARN') ? 'btn-success' : 'btn-secondary'\" class=\"btn btn-sm\">WARN</button>\n                <button (click)=\"changeLevel(logger.name, 'ERROR')\" [ngClass]=\"(logger.level=='ERROR') ? 'btn-primary' : 'btn-secondary'\" class=\"btn btn-sm\">ERROR</button>\n            </td>\n        </tr>\n    </table>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/logs/logs.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var log_model_1 = __webpack_require__("./src/main/webapp/app/admin/logs/log.model.ts");
var logs_service_1 = __webpack_require__("./src/main/webapp/app/admin/logs/logs.service.ts");
var LogsComponent = (function () {
    function LogsComponent(jhiLanguageService, logsService) {
        this.jhiLanguageService = jhiLanguageService;
        this.logsService = logsService;
        this.filter = '';
        this.orderProp = 'name';
        this.reverse = false;
        this.jhiLanguageService.setLocations(['logs']);
    }
    LogsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.logsService.findAll().subscribe(function (loggers) { return _this.loggers = loggers; });
    };
    LogsComponent.prototype.changeLevel = function (name, level) {
        var _this = this;
        var log = new log_model_1.Log(name, level);
        this.logsService.changeLevel(log).subscribe(function () {
            _this.logsService.findAll().subscribe(function (loggers) { return _this.loggers = loggers; });
        });
    };
    return LogsComponent;
}());
LogsComponent = __decorate([
    core_1.Component({
        selector: 'jhi-logs',
        template: __webpack_require__("./src/main/webapp/app/admin/logs/logs.component.html"),
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        logs_service_1.LogsService])
], LogsComponent);
exports.LogsComponent = LogsComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/logs/logs.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var logs_component_1 = __webpack_require__("./src/main/webapp/app/admin/logs/logs.component.ts");
exports.logsRoute = {
    path: 'logs',
    component: logs_component_1.LogsComponent,
    data: {
        pageTitle: 'logs.title'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/logs/logs.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var LogsService = (function () {
    function LogsService(http) {
        this.http = http;
    }
    LogsService.prototype.changeLevel = function (log) {
        return this.http.put('management/logs', log);
    };
    LogsService.prototype.findAll = function () {
        return this.http.get('management/logs').map(function (res) { return res.json(); });
    };
    return LogsService;
}());
LogsService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], LogsService);
exports.LogsService = LogsService;


/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics-modal.component.html":
/***/ (function(module, exports) {

module.exports = "<!-- Modal used to display the threads dump -->\n<div class=\"modal-header\">\n    <button type=\"button\" class=\"close\" (click)=\"activeModal.dismiss('closed')\">&times;</button>\n    <h4 class=\"modal-title\" jhiTranslate=\"metrics.jvm.threads.dump.title\">Threads dump</h4>\n</div>\n<div class=\"modal-body pad\">\n    <span class=\"tag tag-primary\" (click)=\"threadDumpFilter = {}\">All&nbsp;<span class=\"tag-pill\">{{threadDumpAll}}</span></span>&nbsp;\n    <span class=\"tag tag-success\" (click)=\"threadDumpFilter = {threadState: 'RUNNABLE'}\">Runnable&nbsp;<span class=\"tag-pill\">{{threadDumpRunnable}}</span></span>&nbsp;\n    <span class=\"tag tag-info\" (click)=\"threadDumpFilter = {threadState: 'WAITING'}\">Waiting&nbsp;<span class=\"tag-pill\">{{threadDumpWaiting}}</span></span>&nbsp;\n    <span class=\"tag tag-warning\" (click)=\"threadDumpFilter = {threadState: 'TIMED_WAITING'}\">Timed Waiting&nbsp;<span class=\"tag-pill\">{{threadDumpTimedWaiting}}</span></span>&nbsp;\n    <span class=\"tag tag-danger\" (click)=\"threadDumpFilter = {threadState: 'BLOCKED'}\">Blocked&nbsp;<span class=\"tag-pill\">{{threadDumpBlocked}}</span></span>&nbsp;\n    <div class=\"voffset2\">&nbsp;</div>\n    Filter\n    <input type=\"text\" [(ngModel)]=\"threadDumpFilter\" class=\"form-control\">\n    <div class=\"row pad\" *ngFor=\"let entry of threadDump | pureFilter:threadDumpFilter:'lockName' | keys\">\n        <h5><span class=\"tag\" [ngClass]=\"getTagClass(entry.value.threadState)\">{{entry.value.threadState}}</span>&nbsp;{{entry.value.threadName}} (ID {{entry.value.threadId}})\n            <a (click)=\"entry.show = !entry.show\" href=\"javascript:void(0);\">\n               <span [hidden]=\"entry.show\" jhiTranslate=\"metrics.jvm.threads.dump.show\">Show StackTrace</span>\n               <span [hidden]=\"!entry.show\" jhiTranslate=\"metrics.jvm.threads.dump.hide\">Hide StackTrace</span>\n            </a>\n        </h5>\n        <div class=\"well\" [hidden]=\"!entry.show\">\n            <div *ngFor=\"let st of entry.value.stackTrace | keys\">\n                {{st.value.className}}.{{st.value.methodName}}({{st.value.fileName}}:{{st.value.lineNumber}})\n                <span class=\"voffset1\"></span>\n            </div>\n        </div>\n        <table class=\"table table-sm table-responsive\">\n            <thead>\n                <tr>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.jvm.threads.dump.blockedtime\">Blocked Time</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.jvm.threads.dump.blockedcount\">Blocked Count</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.jvm.threads.dump.waitedtime\">Waited Time</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.jvm.threads.dump.waitedcount\">Waited Count</th>\n                    <th jhiTranslate=\"metrics.jvm.threads.dump.lockname\">Lock Name</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>{{entry.value.blockedTime}}</td>\n                    <td>{{entry.value.blockedCount}}</td>\n                    <td>{{entry.value.waitedTime}}</td>\n                    <td>{{entry.value.waitedCount}}</td>\n                    <td>{{entry.value.lockName}}</td>\n                </tr>\n            </tbody>\n        </table>\n\n    </div>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary  pull-left\" data-dismiss=\"modal\" (click)=\"activeModal.dismiss('closed')\">Done</button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics-modal.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var JhiMetricsMonitoringModalComponent = (function () {
    function JhiMetricsMonitoringModalComponent(activeModal) {
        this.activeModal = activeModal;
        this.threadDumpAll = 0;
        this.threadDumpBlocked = 0;
        this.threadDumpRunnable = 0;
        this.threadDumpTimedWaiting = 0;
        this.threadDumpWaiting = 0;
    }
    JhiMetricsMonitoringModalComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.threadDump.forEach(function (value) {
            if (value.threadState === 'RUNNABLE') {
                _this.threadDumpRunnable += 1;
            }
            else if (value.threadState === 'WAITING') {
                _this.threadDumpWaiting += 1;
            }
            else if (value.threadState === 'TIMED_WAITING') {
                _this.threadDumpTimedWaiting += 1;
            }
            else if (value.threadState === 'BLOCKED') {
                _this.threadDumpBlocked += 1;
            }
        });
        this.threadDumpAll = this.threadDumpRunnable + this.threadDumpWaiting +
            this.threadDumpTimedWaiting + this.threadDumpBlocked;
    };
    JhiMetricsMonitoringModalComponent.prototype.getTagClass = function (threadState) {
        if (threadState === 'RUNNABLE') {
            return 'tag-success';
        }
        else if (threadState === 'WAITING') {
            return 'tag-info';
        }
        else if (threadState === 'TIMED_WAITING') {
            return 'tag-warning';
        }
        else if (threadState === 'BLOCKED') {
            return 'tag-danger';
        }
    };
    return JhiMetricsMonitoringModalComponent;
}());
JhiMetricsMonitoringModalComponent = __decorate([
    core_1.Component({
        selector: 'jhi-metrics-modal',
        template: __webpack_require__("./src/main/webapp/app/admin/metrics/metrics-modal.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal])
], JhiMetricsMonitoringModalComponent);
exports.JhiMetricsMonitoringModalComponent = JhiMetricsMonitoringModalComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span jhiTranslate=\"metrics.title\">Application Metrics</span>\n        <button class=\"btn btn-primary float-xs-right\" (click)=\"refresh()\">\n            <span class=\"fa fa-refresh\"></span> <span jhiTranslate=\"metrics.refresh.button\">Refresh</span>\n        </button>\n    </h2>\n\n    <h3 jhiTranslate=\"metrics.jvm.title\">JVM Metrics</h3>\n    <div class=\"row\" *ngIf=\"!updatingMetrics\">\n        <div class=\"col-md-4\">\n            <b jhiTranslate=\"metrics.jvm.memory.title\">Memory</b>\n            <p><span jhiTranslate=\"metrics.jvm.memory.total\">Total Memory</span> ({{metrics.gauges['jvm.memory.total.used'].value / 1000000 | number:'1.0-0'}}M / {{metrics.gauges['jvm.memory.total.max'].value / 1000000 | number:'1.0-0'}}M)</p>\n            <ngb-progressbar type=\"success\" [max]=\"metrics.gauges['jvm.memory.total.max'].value\" [value]=\"metrics.gauges['jvm.memory.total.used'].value\" [striped]=\"true\" [animated]=\"true\">\n                <span>{{metrics.gauges['jvm.memory.total.used'].value * 100 / metrics.gauges['jvm.memory.total.max'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span jhiTranslate=\"metrics.jvm.memory.heap\">Heap Memory</span> ({{metrics.gauges['jvm.memory.heap.used'].value / 1000000 | number:'1.0-0'}}M / {{metrics.gauges['jvm.memory.heap.max'].value / 1000000 | number:'1.0-0'}}M)</p>\n            <ngb-progressbar [max]=\"metrics.gauges['jvm.memory.heap.max'].value\" [value]=\"metrics.gauges['jvm.memory.heap.used'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                <span>{{metrics.gauges['jvm.memory.heap.used'].value * 100 / metrics.gauges['jvm.memory.heap.max'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span jhiTranslate=\"metrics.jvm.memory.nonheap\">Non-Heap Memory</span> ({{metrics.gauges['jvm.memory.non-heap.used'].value / 1000000 | number:'1.0-0'}}M / {{metrics.gauges['jvm.memory.non-heap.committed'].value / 1000000 | number:'1.0-0'}}M)</p>\n            <ngb-progressbar [max]=\"metrics.gauges['jvm.memory.non-heap.committed'].value\" [value]=\"metrics.gauges['jvm.memory.non-heap.used'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                <span>{{metrics.gauges['jvm.memory.non-heap.used'].value * 100 / metrics.gauges['jvm.memory.non-heap.committed'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n        </div>\n        <div class=\"col-md-4\">\n            <b jhiTranslate=\"metrics.jvm.threads.title\">Threads</b> (Total: {{metrics.gauges['jvm.threads.count'].value}}) <a class=\"hand\" (click)=\"refreshThreadDumpData()\" data-toggle=\"modal\" data-target=\"#threadDump\"><i class=\"fa fa-eye\"></i></a>\n            <p><span jhiTranslate=\"metrics.jvm.threads.runnable\">Runnable</span> {{metrics.gauges['jvm.threads.runnable.count'].value}}</p>\n            <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.runnable.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                <span>{{metrics.gauges['jvm.threads.runnable.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span jhiTranslate=\"metrics.jvm.threads.timedwaiting\">Timed Waiting</span> ({{metrics.gauges['jvm.threads.timed_waiting.count'].value}})</p>\n            <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.timed_waiting.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"warning\">\n                <span>{{metrics.gauges['jvm.threads.timed_waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span jhiTranslate=\"metrics.jvm.threads.waiting\">Waiting</span> ({{metrics.gauges['jvm.threads.waiting.count'].value}})</p>\n            <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.waiting.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"warning\">\n                <span>{{metrics.gauges['jvm.threads.waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n            <p><span jhiTranslate=\"metrics.jvm.threads.blocked\">Blocked</span> ({{metrics.gauges['jvm.threads.blocked.count'].value}})</p>\n            <ngb-progressbar [value]=\"metrics.gauges['jvm.threads.blocked.count'].value\" [max]=\"metrics.gauges['jvm.threads.count'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                <span>{{metrics.gauges['jvm.threads.blocked.count'].value * 100 / metrics.gauges['jvm.threads.count'].value  | number:'1.0-0'}}%</span>\n            </ngb-progressbar>\n        </div>\n        <div class=\"col-md-4\">\n            <b jhiTranslate=\"metrics.jvm.gc.title\">Garbage collections</b>\n            <div class=\"row\">\n                <div class=\"col-md-9\" jhiTranslate=\"metrics.jvm.gc.marksweepcount\">Mark Sweep count</div>\n                <div class=\"col-md-3 text-xs-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.count'].value}}</div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-9\" jhiTranslate=\"metrics.jvm.gc.marksweeptime\">Mark Sweep time</div>\n                <div class=\"col-md-3 text-xs-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.time'].value}}ms</div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-9\" jhiTranslate=\"metrics.jvm.gc.scavengecount\">Scavenge count</div>\n                <div class=\"col-md-3 text-xs-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.count'].value}}</div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-9\" jhiTranslate=\"metrics.jvm.gc.scavengetime\">Scavenge time</div>\n                <div class=\"col-md-3 text-xs-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.time'].value}}ms</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"well well-lg\" *ngIf=\"updatingMetrics\" jhiTranslate=\"metrics.updating\">Updating...</div>\n\n    <h3 jhiTranslate=\"metrics.jvm.http.title\">HTTP requests (events per second)</h3>\n    <p *ngIf=\"metrics.counters\">\n        <span jhiTranslate=\"metrics.jvm.http.active\">Active requests</span> <b>{{metrics.counters['com.codahale.metrics.servlet.InstrumentedFilter.activeRequests'].count | number:'1.0-0'}}</b> - <span jhiTranslate=\"metrics.jvm.http.total\">Total requests</span> <b>{{metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count | number:'1.0-0'}}</b>\n    </p>\n    <div class=\"table-responsive\" *ngIf=\"!updatingMetrics\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <th jhiTranslate=\"metrics.jvm.http.table.code\">Code</th>\n                <th jhiTranslate=\"metrics.jvm.http.table.count\">Count</th>\n                <th class=\"text-xs-right\" jhiTranslate=\"metrics.jvm.http.table.mean\">Mean</th>\n                <th class=\"text-xs-right\"><span jhiTranslate=\"metrics.jvm.http.table.average\">Average</span> (1 min)</th>\n                <th class=\"text-xs-right\"><span jhiTranslate=\"metrics.jvm.http.table.average\">Average</span> (5 min)</th>\n                <th class=\"text-xs-right\"><span jhiTranslate=\"metrics.jvm.http.table.average\">Average</span> (15 min)</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td jhiTranslate=\"metrics.jvm.http.code.ok\">OK</td>\n                <td>\n                    <ngb-progressbar [max]=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" [value]=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                        <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count}}</span>\n                    </ngb-progressbar>\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].mean_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-xs-right\">{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m1_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-xs-right\">{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m5_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m15_rate | number:'1.0-2'}}\n                </td>\n            </tr>\n            <tr>\n                <td jhiTranslate=\"metrics.jvm.http.code.notfound\">Not Found</td>\n                <td>\n                    <ngb-progressbar [max]=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" [value]=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                        <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count}}</span>\n                    </ngb-progressbar>\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].mean_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m1_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m5_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m15_rate | number:'1.0-2'}}\n                </td>\n            </tr>\n            <tr>\n                <td jhiTranslate=\"metrics.jvm.http.code.servererror\">Server error</td>\n                <td>\n                    <ngb-progressbar [max]=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" [value]=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                        <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count}}</span>\n                    </ngb-progressbar>\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].mean_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m1_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m5_rate | number:'1.0-2'}}\n                </td>\n                <td class=\"text-xs-right\">\n                    {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m15_rate | number:'1.0-2'}}\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <h3 jhiTranslate=\"metrics.servicesstats.title\">Services statistics (time in millisecond)</h3>\n    <div class=\"table-responsive\" *ngIf=\"!updatingMetrics\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <th jhiTranslate=\"metrics.servicesstats.table.name\">Service name</th>\n                <th class=\"text-xs-right\" jhiTranslate=\"metrics.servicesstats.table.count\">Count</th>\n                <th class=\"text-xs-right\" jhiTranslate=\"metrics.servicesstats.table.mean\">Mean</th>\n                <th class=\"text-xs-right\" jhiTranslate=\"metrics.servicesstats.table.min\">Min</th>\n                <th class=\"text-xs-right\" jhiTranslate=\"metrics.servicesstats.table.p50\">p50</th>\n                <th class=\"text-xs-right\" jhiTranslate=\"metrics.servicesstats.table.p75\">p75</th>\n                <th class=\"text-xs-right\" jhiTranslate=\"metrics.servicesstats.table.p95\">p95</th>\n                <th class=\"text-xs-right\" jhiTranslate=\"metrics.servicesstats.table.p99\">p99</th>\n                <th class=\"text-xs-right\" jhiTranslate=\"metrics.servicesstats.table.max\">Max</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let entry of servicesStats | keys\">\n                <td>{{entry.key}}</td>\n                <td class=\"text-xs-right\">{{entry.value.count}}</td>\n                <td class=\"text-xs-right\">{{entry.value.mean * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-xs-right\">{{entry.value.min * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-xs-right\">{{entry.value.p50 * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-xs-right\">{{entry.value.p75 * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-xs-right\">{{entry.value.p95 * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-xs-right\">{{entry.value.p99 * 1000 | number:'1.0-0'}}</td>\n                <td class=\"text-xs-right\">{{entry.value.max * 1000 | number:'1.0-0'}}</td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n    \n    <h3 jhiTranslate=\"metrics.cache.title\">Cache statistics</h3>\n    <div class=\"table-responsive\" *ngIf=\"!updatingMetrics\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <th jhiTranslate=\"metrics.cache.cachename\">Cache name</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.hits\">Cache Hits</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.misses\">Cache Misses</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.gets\">Cache Gets</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.puts\">Cache Puts</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.removals\">Cache Removals</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.evictions\">Cache Evictions</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.hitPercent\">Cache Hit %</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.missPercent\">Cache Miss %</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.averageGetTime\">Average get time (µs)</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.averagePutTime\">Average put time (µs)</th>\n                <th class=\"text-xs-right\" data-translate=\"metrics.cache.averageRemoveTime\">Average remove time (µs)</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let entry of cachesStats | keys\">\n                <td>{{entry.key}}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.cache-hits'].value}}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.cache-misses'].value}}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.cache-gets'].value}}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.cache-puts'].value}}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.cache-removals'].value}}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.cache-evictions'].value}}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.cache-hit-percentage'].value}}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.cache-miss-percentage'].value }}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.average-get-time'].value  | number : '1.2-2' }}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.average-put-time'].value  | number : '1.2-2'}}</td>\n                <td class=\"text-xs-right\">{{metrics.gauges[entry.key + '.average-remove-time'].value | number : '1.2-2' }}</td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n    \n    <h3 jhiTranslate=\"metrics.datasource.title\" *ngIf=\"metrics.gauges && metrics.gauges['HikariPool-1.pool.TotalConnections'] && metrics.gauges['HikariPool-1.pool.TotalConnections'].value > 0\">DataSource statistics (time in millisecond)</h3>\n    <div class=\"table-responsive\" *ngIf=\"!updatingMetrics && metrics.gauges && metrics.gauges['HikariPool-1.pool.TotalConnections'] && metrics.gauges['HikariPool-1.pool.TotalConnections'].value > 0\">\n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th><span jhiTranslate=\"metrics.datasource.usage\">Usage</span> ({{metrics.gauges['HikariPool-1.pool.ActiveConnections'].value}} / {{metrics.gauges['HikariPool-1.pool.TotalConnections'].value}})</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.datasource.count\">Count</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.datasource.mean\">Mean</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.datasource.min\">Min</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.datasource.p50\">p50</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.datasource.p75\">p75</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.datasource.p95\">p95</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.datasource.p99\">p99</th>\n                    <th class=\"text-xs-right\" jhiTranslate=\"metrics.datasource.max\">Max</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>\n                        <div class=\"progress progress-striped\">\n                            <ngb-progressbar [max]=\"metrics.gauges['HikariPool-1.pool.TotalConnections'].value\" [value]=\"metrics.gauges['HikariPool-1.pool.ActiveConnections'].value\" [striped]=\"true\" [animated]=\"true\" type=\"success\">\n                                <span>{{metrics.gauges['HikariPool-1.pool.ActiveConnections'].value * 100 / metrics.gauges['HikariPool-1.pool.TotalConnections'].value  | number:'1.0-0'}}%</span>\n                            </ngb-progressbar>\n                        </div>\n                    </td>\n                    <td class=\"text-xs-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].count}}</td>\n                    <td class=\"text-xs-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].mean | number:'1.0-2'}}</td>\n                    <td class=\"text-xs-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].min | number:'1.0-2'}}</td>\n                    <td class=\"text-xs-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].p50 | number:'1.0-2'}}</td>\n                    <td class=\"text-xs-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].p75 | number:'1.0-2'}}</td>\n                    <td class=\"text-xs-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].p95 | number:'1.0-2'}}</td>\n                    <td class=\"text-xs-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].p99 | number:'1.0-2'}}</td>\n                    <td class=\"text-xs-right\">{{metrics.histograms['HikariPool-1.pool.Usage'].max | number:'1.0-2'}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var metrics_modal_component_1 = __webpack_require__("./src/main/webapp/app/admin/metrics/metrics-modal.component.ts");
var metrics_service_1 = __webpack_require__("./src/main/webapp/app/admin/metrics/metrics.service.ts");
var JhiMetricsMonitoringComponent = (function () {
    function JhiMetricsMonitoringComponent(jhiLanguageService, modalService, metricsService) {
        this.jhiLanguageService = jhiLanguageService;
        this.modalService = modalService;
        this.metricsService = metricsService;
        this.metrics = {};
        this.cachesStats = {};
        this.servicesStats = {};
        this.updatingMetrics = true;
        this.JCACHE_KEY = 'jcache.statistics';
        this.jhiLanguageService.setLocations(['metrics']);
    }
    JhiMetricsMonitoringComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    JhiMetricsMonitoringComponent.prototype.refresh = function () {
        var _this = this;
        this.updatingMetrics = true;
        this.metricsService.getMetrics().subscribe(function (metrics) {
            _this.metrics = metrics;
            _this.updatingMetrics = false;
            _this.servicesStats = {};
            _this.cachesStats = {};
            Object.keys(metrics.timers).forEach(function (key) {
                var value = metrics.timers[key];
                if (key.indexOf('web.rest') !== -1 || key.indexOf('service') !== -1) {
                    _this.servicesStats[key] = value;
                }
            });
            Object.keys(metrics.gauges).forEach(function (key) {
                if (key.indexOf('jcache.statistics') !== -1) {
                    var value = metrics.gauges[key].value;
                    // remove gets or puts
                    var index = key.lastIndexOf('.');
                    var newKey = key.substr(0, index);
                    // Keep the name of the domain
                    _this.cachesStats[newKey] = {
                        'name': _this.JCACHE_KEY.length,
                        'value': value
                    };
                }
            });
        });
    };
    JhiMetricsMonitoringComponent.prototype.refreshThreadDumpData = function () {
        var _this = this;
        this.metricsService.threadDump().subscribe(function (data) {
            var modalRef = _this.modalService.open(metrics_modal_component_1.JhiMetricsMonitoringModalComponent, { size: 'lg' });
            modalRef.componentInstance.threadDump = data;
            modalRef.result.then(function (result) {
                // Left blank intentionally, nothing to do here
            }, function (reason) {
                // Left blank intentionally, nothing to do here
            });
        });
    };
    return JhiMetricsMonitoringComponent;
}());
JhiMetricsMonitoringComponent = __decorate([
    core_1.Component({
        selector: 'jhi-metrics',
        template: __webpack_require__("./src/main/webapp/app/admin/metrics/metrics.component.html"),
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_bootstrap_1.NgbModal,
        metrics_service_1.JhiMetricsService])
], JhiMetricsMonitoringComponent);
exports.JhiMetricsMonitoringComponent = JhiMetricsMonitoringComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var metrics_component_1 = __webpack_require__("./src/main/webapp/app/admin/metrics/metrics.component.ts");
exports.metricsRoute = {
    path: 'jhi-metrics',
    component: metrics_component_1.JhiMetricsMonitoringComponent,
    data: {
        pageTitle: 'metrics.title'
    }
};


/***/ }),

/***/ "./src/main/webapp/app/admin/metrics/metrics.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var JhiMetricsService = (function () {
    function JhiMetricsService(http) {
        this.http = http;
    }
    JhiMetricsService.prototype.getMetrics = function () {
        return this.http.get('management/metrics').map(function (res) { return res.json(); });
    };
    JhiMetricsService.prototype.threadDump = function () {
        return this.http.get('management/dump').map(function (res) { return res.json(); });
    };
    return JhiMetricsService;
}());
JhiMetricsService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], JhiMetricsService);
exports.JhiMetricsService = JhiMetricsService;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(user.login)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"userManagement.delete.question\" translateValues=\"{login: '{{user.login}}'}\">Are you sure you want to delete this User?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var user_modal_service_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-modal.service.ts");
var UserMgmtDeleteDialogComponent = (function () {
    function UserMgmtDeleteDialogComponent(jhiLanguageService, userService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.userService = userService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['user-management']);
    }
    UserMgmtDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    UserMgmtDeleteDialogComponent.prototype.confirmDelete = function (login) {
        var _this = this;
        this.userService.delete(login).subscribe(function (response) {
            _this.eventManager.broadcast({ name: 'userListModification',
                content: 'Deleted a user' });
            _this.activeModal.dismiss(true);
        });
    };
    return UserMgmtDeleteDialogComponent;
}());
UserMgmtDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-mgmt-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        shared_1.UserService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], UserMgmtDeleteDialogComponent);
exports.UserMgmtDeleteDialogComponent = UserMgmtDeleteDialogComponent;
var UserDeleteDialogComponent = (function () {
    function UserDeleteDialogComponent(route, userModalService) {
        this.route = route;
        this.userModalService = userModalService;
    }
    UserDeleteDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.userModalService.open(UserMgmtDeleteDialogComponent, params['login']);
        });
    };
    UserDeleteDialogComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return UserDeleteDialogComponent;
}());
UserDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-delete-dialog',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        user_modal_service_1.UserModalService])
], UserDeleteDialogComponent);
exports.UserDeleteDialogComponent = UserDeleteDialogComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-detail.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"user\">\n    <h2>\n        <span jhiTranslate=\"userManagement.detail.title\">User</span> [<b>{{user.login}}</b>]\n    </h2>\n    <dl class=\"row jh-entity-details\">\n        <dt><span jhiTranslate=\"userManagement.login\">Login</span></dt>\n        <dd>\n            <span>{{user.login}}</span>\n            <span class=\"tag tag-danger\" *ngIf=\"!user.activated\"\n                  jhiTranslate=\"userManagement.deactivated\">Deactivated</span>\n            <span class=\"tag tag-success\" *ngIf=\"user.activated\"\n                  jhiTranslate=\"userManagement.activated\">Activated</span>\n        </dd>\n        <dt><span jhiTranslate=\"userManagement.firstName\">First Name</span></dt>\n        <dd>{{user.firstName}}</dd>\n        <dt><span jhiTranslate=\"userManagement.lastName\">Last Name</span></dt>\n        <dd>{{user.lastName}}</dd>\n        <dt><span jhiTranslate=\"userManagement.email\">Email</span></dt>\n        <dd>{{user.email}}</dd>\n        <dt><span jhiTranslate=\"userManagement.langKey\">Lang Key</span></dt>\n        <dd>{{user.langKey}}</dd>\n        <dt><span jhiTranslate=\"userManagement.createdBy\">Created By</span></dt>\n        <dd>{{user.createdBy}}</dd>\n        <dt><span jhiTranslate=\"userManagement.createdDate\">Created Date</span></dt>\n        <dd>{{user.createdDate | date:'dd/MM/yy HH:mm' }}</dd>\n        <dt><span jhiTranslate=\"userManagement.lastModifiedBy\">Last Modified By</span></dt>\n        <dd>{{user.lastModifiedBy}}</dd>\n        <dt><span jhiTranslate=\"userManagement.lastModifiedDate\">Last Modified Date</span></dt>\n        <dd>{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}</dd>\n        <dt><span jhiTranslate=\"userManagement.profiles\">Profiles</span></dt>\n        <dd>\n            <ul class=\"list-unstyled\">\n                <li *ngFor=\"let authority of user.authorities\">\n                    <span class=\"tag tag-info\">{{authority}}</span>\n                </li>\n            </ul>\n        </dd>\n    </dl>\n    <button type=\"submit\"\n            routerLink=\"/user-management\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserMgmtDetailComponent = (function () {
    function UserMgmtDetailComponent(jhiLanguageService, userService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.userService = userService;
        this.route = route;
        this.jhiLanguageService.setLocations(['user-management']);
    }
    UserMgmtDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['login']);
        });
    };
    UserMgmtDetailComponent.prototype.load = function (login) {
        var _this = this;
        this.userService.find(login).subscribe(function (user) {
            _this.user = user;
        });
    };
    UserMgmtDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return UserMgmtDetailComponent;
}());
UserMgmtDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-mgmt-detail',
        template: __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        shared_1.UserService,
        router_1.ActivatedRoute])
], UserMgmtDetailComponent);
exports.UserMgmtDetailComponent = UserMgmtDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myUserLabel\" jhiTranslate=\"userManagement.home.createOrEditLabel\">\n            Create or edit a User</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" name=\"id\"\n                   [(ngModel)]=\"user.id\" readonly>\n        </div>\n\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"userManagement.login\">Login</label>\n            <input type=\"text\" class=\"form-control\" name=\"login\" #loginInput=\"ngModel\"\n                   [(ngModel)]=\"user.login\" required minlength=1 maxlength=50 pattern=\"^[_'.@A-Za-z0-9-]*$\">\n\n            <div *ngIf=\"loginInput.dirty && loginInput.invalid\">\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"loginInput.errors.required\" jhiTranslate=\"entity.validation.required\">\n                    This field is required.\n                </small>\n\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"loginInput.errors.maxlength\" jhiTranslate=\"entity.validation.maxlength\"\n                   translate-value-max=\"50\">\n                    This field cannot be longer than 50 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"userManagement.firstName\">First Name</label>\n            <input type=\"text\" class=\"form-control\" name=\"firstName\" #firstNameInput=\"ngModel\"\n                   [(ngModel)]=\"user.firstName\" maxlength=\"50\">\n\n            <div *ngIf=\"firstNameInput.dirty && firstNameInput.invalid\">\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"firstNameInput.errors.maxlength\" jhiTranslate=\"entity.validation.maxlength\"\n                   translate-value-max=\"50\">\n                    This field cannot be longer than 50 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"userManagement.lastName\">Last Name</label>\n            <input type=\"text\" class=\"form-control\" name=\"lastName\" #lastNameInput=\"ngModel\"\n                   [(ngModel)]=\"user.lastName\" maxlength=\"50\">\n\n            <div *ngIf=\"lastNameInput.dirty && lastNameInput.invalid\">\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"lastNameInput.errors.maxlength\" jhiTranslate=\"entity.validation.maxlength\"\n                   translate-value-max=\"50\">\n                    This field cannot be longer than 50 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"userManagement.email\">Email</label>\n            <input type=\"email\" class=\"form-control\" name=\"email\" #emailInput=\"ngModel\"\n                   [(ngModel)]=\"user.email\" required maxlength=\"100\">\n\n            <div *ngIf=\"emailInput.dirty && emailInput.invalid\">\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"emailInput.errors.required\" jhiTranslate=\"entity.validation.required\">\n                    This field is required.\n                </small>\n\n                <small class=\"form-text text-danger\"\n                   *ngIf=\"emailInput.errors.maxlength\" jhiTranslate=\"entity.validation.maxlength\"\n                   translate-value-max=\"100\">\n                    This field cannot be longer than 100 characters.\n                </small>\n\t\t<small class=\"form-text text-danger\"\n                   *ngIf=\"emailInput.errors.email\" jhiTranslate=\"global.messages.validate.email.invalid\">\n                    Your e-mail is invalid.\n                 </small>\n            </div>\n        </div>\n        <div class=\"form-check\">\n            <label class=\"form-check-label\" for=\"activated\">\n                <input class=\"form-check-input\" [disabled]=\"user.id === null\" type=\"checkbox\" id=\"activated\" name=\"activated\" [(ngModel)]=\"user.activated\">\n                <span jhiTranslate=\"userManagement.activated\">Activated</span>\n            </label>\n        </div>\n\n        <div class=\"form-group\" *ngIf=\"languages && languages.length > 0\">\n            <label jhiTranslate=\"userManagement.langKey\">Lang Key</label>\n            <select class=\"form-control\" id=\"langKey\" name=\"langKey\" [(ngModel)]=\"user.langKey\">\n                <option *ngFor=\"let language of languages\" [value]=\"language\">{{language | findLanguageFromKey}}</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"userManagement.profiles\">Profiles</label>\n            <select class=\"form-control\" multiple name=\"authority\" [(ngModel)]=\"user.authorities\">\n                <option *ngFor=\"let authority of authorities\" [value]=\"authority\">{{authority}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span\n            jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-floppy-o\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var user_modal_service_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-modal.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserMgmtDialogComponent = (function () {
    function UserMgmtDialogComponent(activeModal, languageHelper, jhiLanguageService, userService, eventManager) {
        this.activeModal = activeModal;
        this.languageHelper = languageHelper;
        this.jhiLanguageService = jhiLanguageService;
        this.userService = userService;
        this.eventManager = eventManager;
    }
    UserMgmtDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.languageHelper.getAll().then(function (languages) {
            _this.languages = languages;
        });
        this.jhiLanguageService.setLocations(['user-management']);
    };
    UserMgmtDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    UserMgmtDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.user.id !== null) {
            this.userService.update(this.user).subscribe(function (response) { return _this.onSaveSuccess(response); }, function () { return _this.onSaveError(); });
        }
        else {
            this.userService.create(this.user).subscribe(function (response) { return _this.onSaveSuccess(response); }, function () { return _this.onSaveError(); });
        }
    };
    UserMgmtDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'userListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    UserMgmtDialogComponent.prototype.onSaveError = function () {
        this.isSaving = false;
    };
    return UserMgmtDialogComponent;
}());
UserMgmtDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-mgmt-dialog',
        template: __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        shared_1.JhiLanguageHelper,
        ng_jhipster_1.JhiLanguageService,
        shared_1.UserService,
        ng_jhipster_1.EventManager])
], UserMgmtDialogComponent);
exports.UserMgmtDialogComponent = UserMgmtDialogComponent;
var UserDialogComponent = (function () {
    function UserDialogComponent(route, userModalService) {
        this.route = route;
        this.userModalService = userModalService;
    }
    UserDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['login']) {
                _this.modalRef = _this.userModalService.open(UserMgmtDialogComponent, params['login']);
            }
            else {
                _this.modalRef = _this.userModalService.open(UserMgmtDialogComponent);
            }
        });
    };
    UserDialogComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return UserDialogComponent;
}());
UserDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-dialog',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        user_modal_service_1.UserModalService])
], UserDialogComponent);
exports.UserDialogComponent = UserDialogComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2>\n        <span jhiTranslate=\"userManagement.home.title\">Users</span>\n        <button class=\"btn btn-primary float-xs-right\" [routerLink]=\"['/', { outlets: { popup: ['user-management-new'] } }]\">\n            <span class=\"fa fa-plus\"></span> <span jhiTranslate=\"userManagement.home.createLabel\">Create a new User</span>\n        </button>\n    </h2>\n    <jhi-alert></jhi-alert>\n    <div class=\"table-responsive\" *ngIf=\"users\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span><span class=\"fa fa-sort\"></span></th>\n                <th jhiSortBy=\"login\"><span jhiTranslate=\"userManagement.login\">Login</span> <span class=\"fa fa-sort\"></span></th>\n                <th jhiSortBy=\"email\"><span jhiTranslate=\"userManagement.email\">Email</span> <span class=\"fa fa-sort\"></span></th>\n                <th></th>\n                <th  jhiSortBy=\"langKey\"> <span jhiTranslate=\"userManagement.langKey\">Lang Key</span> <span class=\"fa fa-sort\"></span></th>\n                <th><span jhiTranslate=\"userManagement.profiles\">Profiles</span></th>\n                <th jhiSortBy=\"createdDate\"><span jhiTranslate=\"userManagement.createdDate\">Created Date</span> <span class=\"fa fa-sort\"></span></th>\n                <th jhiSortBy=\"lastModifiedBy\"><span jhiTranslate=\"userManagement.lastModifiedBy\">Last Modified By</span> <span class=\"fa fa-sort\"></span></th>\n                <th jhiSortBy=\"lastModifiedDate\"><span jhiTranslate=\"userManagement.lastModifiedDate\">Last Modified Date</span> <span class=\"fa fa-sort\"></span></th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody *ngIf =\"users\">\n            <tr *ngFor=\"let user of users; trackBy: trackIdentity\">\n                <td><a [routerLink]=\"['../user-management', user.login]\">{{user.id}}</a></td>\n                <td>{{user.login}}</td>\n                <td>{{user.email}}</td>\n                <td>\n                    <span class=\"tag tag-danger hand\" (click)=\"setActive(user, true)\" *ngIf=\"!user.activated\"\n                          jhiTranslate=\"userManagement.deactivated\">Deactivated</span>\n                    <span class=\"tag tag-success hand\" (click)=\"setActive(user, false)\" *ngIf=\"user.activated\"\n                          jhiTranslate=\"userManagement.activated\">Activated</span>\n                </td>\n                <td>{{user.langKey}}</td>\n                <td>\n                    <div *ngFor=\"let authority of user.authorities\">\n                        <span class=\"tag tag-info\">{{ authority }}</span>\n                    </div>\n                </td>\n                <td>{{user.createdDate | date:'dd/MM/yy HH:mm'}}</td>\n                <td>{{user.lastModifiedBy}}</td>\n                <td>{{user.lastModifiedDate | date:'dd/MM/yy HH:mm'}}</td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../user-management', user.login]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'user-management/'+ user.login + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'user-management/'+ user.login + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\" [disabled]=\"currentAccount.login==user.login\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"text-xs-center\" *ngIf=\"users\">\n        <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n        <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" (pageChange)=\"loadPage(page)\"></ngb-pagination>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var UserMgmtComponent = (function () {
    function UserMgmtComponent(jhiLanguageService, userService, parseLinks, alertService, principal, eventManager, paginationUtil, paginationConfig, activatedRoute, router) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.userService = userService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.jhiLanguageService.setLocations(['user-management']);
    }
    UserMgmtComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
            _this.loadAll();
            _this.registerChangeInUsers();
        });
    };
    UserMgmtComponent.prototype.ngOnDestroy = function () {
        this.routeData.unsubscribe();
    };
    UserMgmtComponent.prototype.registerChangeInUsers = function () {
        var _this = this;
        this.eventManager.subscribe('userListModification', function (response) { return _this.loadAll(); });
    };
    UserMgmtComponent.prototype.setActive = function (user, isActivated) {
        var _this = this;
        user.activated = isActivated;
        this.userService.update(user).subscribe(function (response) {
            if (response.status === 200) {
                _this.error = null;
                _this.success = 'OK';
                _this.loadAll();
            }
            else {
                _this.success = null;
                _this.error = 'ERROR';
            }
        });
    };
    UserMgmtComponent.prototype.loadAll = function () {
        var _this = this;
        this.userService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    UserMgmtComponent.prototype.trackIdentity = function (index, item) {
        return item.id;
    };
    UserMgmtComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    UserMgmtComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    UserMgmtComponent.prototype.transition = function () {
        this.router.navigate(['/user-management'], { queryParams: {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    UserMgmtComponent.prototype.onSuccess = function (data, headers) {
        // hide anonymous user from user management: it's a required user for Spring Security
        var hiddenUsersSize = 0;
        for (var i in data) {
            if (data[i]['login'] === 'anonymoususer') {
                data.splice(i, 1);
                hiddenUsersSize++;
            }
        }
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count') - hiddenUsersSize;
        this.queryCount = this.totalItems;
        this.users = data;
    };
    UserMgmtComponent.prototype.onError = function (error) {
        this.alertService.error(error.error, error.message, null);
    };
    return UserMgmtComponent;
}());
UserMgmtComponent = __decorate([
    core_1.Component({
        selector: 'jhi-user-mgmt',
        template: __webpack_require__("./src/main/webapp/app/admin/user-management/user-management.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        shared_1.UserService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        ng_jhipster_1.EventManager, ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig,
        router_1.ActivatedRoute,
        router_1.Router])
], UserMgmtComponent);
exports.UserMgmtComponent = UserMgmtComponent;


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-management.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var user_management_component_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-management.component.ts");
var user_management_detail_component_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-detail.component.ts");
var user_management_dialog_component_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-dialog.component.ts");
var user_management_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/admin/user-management/user-management-delete-dialog.component.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserResolve = (function () {
    function UserResolve(principal) {
        this.principal = principal;
    }
    UserResolve.prototype.canActivate = function () {
        var _this = this;
        return this.principal.identity().then(function (account) { return _this.principal.hasAnyAuthority(['ROLE_ADMIN']); });
    };
    return UserResolve;
}());
UserResolve = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [shared_1.Principal])
], UserResolve);
exports.UserResolve = UserResolve;
var UserResolvePagingParams = (function () {
    function UserResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    UserResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return UserResolvePagingParams;
}());
UserResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], UserResolvePagingParams);
exports.UserResolvePagingParams = UserResolvePagingParams;
exports.userMgmtRoute = [
    {
        path: 'user-management',
        component: user_management_component_1.UserMgmtComponent,
        resolve: {
            'pagingParams': UserResolvePagingParams
        },
        data: {
            pageTitle: 'userManagement.home.title'
        }
    },
    {
        path: 'user-management/:login',
        component: user_management_detail_component_1.UserMgmtDetailComponent,
        data: {
            pageTitle: 'userManagement.home.title'
        }
    }
];
exports.userDialogRoute = [
    {
        path: 'user-management-new',
        component: user_management_dialog_component_1.UserDialogComponent,
        outlet: 'popup'
    },
    {
        path: 'user-management/:login/edit',
        component: user_management_dialog_component_1.UserDialogComponent,
        outlet: 'popup'
    },
    {
        path: 'user-management/:login/delete',
        component: user_management_delete_dialog_component_1.UserDeleteDialogComponent,
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/admin/user-management/user-modal.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserModalService = (function () {
    function UserModalService(modalService, router, userService) {
        this.modalService = modalService;
        this.router = router;
        this.userService = userService;
        this.isOpen = false;
    }
    UserModalService.prototype.open = function (component, login) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (login) {
            this.userService.find(login).subscribe(function (user) { return _this.userModalRef(component, user); });
        }
        else {
            return this.userModalRef(component, new shared_1.User());
        }
    };
    UserModalService.prototype.userModalRef = function (component, user) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.user = user;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return UserModalService;
}());
UserModalService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        shared_1.UserService])
], UserModalService);
exports.UserModalService = UserModalService;


/***/ }),

/***/ "./src/main/webapp/app/app.constants.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// DO NOT EDIT THIS FILE, EDIT THE WEBPACK COMMON CONFIG INSTEAD, WHICH WILL MODIFY THIS FILE
var _VERSION = '0.0.0'; // This value will be overwritten by webpack
var _DEBUG_INFO_ENABLED = true; // This value will be overwritten by webpack
_VERSION = "0.0.0";
_DEBUG_INFO_ENABLED = true;
exports.VERSION = _VERSION;
exports.DEBUG_INFO_ENABLED = _DEBUG_INFO_ENABLED;


/***/ }),

/***/ "./src/main/webapp/app/app.main.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var platform_browser_dynamic_1 = __webpack_require__(13);
var prod_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/prod.config.ts");
var app_module_1 = __webpack_require__("./src/main/webapp/app/app.module.ts");
prod_config_1.ProdConfig();
if (false) {
    module['hot'].accept();
}
platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.LimsAppModule);


/***/ }),

/***/ "./src/main/webapp/app/app.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
__webpack_require__(18);
var core_1 = __webpack_require__(0);
var platform_browser_1 = __webpack_require__(10);
var ng2_webstorage_1 = __webpack_require__(11);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var home_module_1 = __webpack_require__("./src/main/webapp/app/home/home.module.ts");
var admin_module_1 = __webpack_require__("./src/main/webapp/app/admin/admin.module.ts");
var account_module_1 = __webpack_require__("./src/main/webapp/app/account/account.module.ts");
var entity_module_1 = __webpack_require__("./src/main/webapp/app/entities/entity.module.ts");
var layouts_1 = __webpack_require__("./src/main/webapp/app/layouts/index.ts");
var http_provider_1 = __webpack_require__("./src/main/webapp/app/blocks/interceptor/http.provider.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var layouts_2 = __webpack_require__("./src/main/webapp/app/layouts/index.ts");
var LimsAppModule = (function () {
    function LimsAppModule() {
    }
    return LimsAppModule;
}());
LimsAppModule = __decorate([
    core_1.NgModule({
        imports: [
            platform_browser_1.BrowserModule,
            layouts_1.LayoutRoutingModule,
            ng2_webstorage_1.Ng2Webstorage.forRoot({ prefix: 'jhi', separator: '-' }),
            shared_1.LimsSharedModule,
            home_module_1.LimsHomeModule,
            admin_module_1.LimsAdminModule,
            account_module_1.LimsAccountModule,
            entity_module_1.LimsEntityModule
        ],
        declarations: [
            layouts_2.JhiMainComponent,
            layouts_2.NavbarComponent,
            layouts_2.ErrorComponent,
            layouts_2.PageRibbonComponent,
            layouts_2.ActiveMenuDirective,
            layouts_2.FooterComponent
        ],
        providers: [
            layouts_2.ProfileService,
            { provide: Window, useValue: window },
            { provide: Document, useValue: document },
            http_provider_1.customHttpProvider(),
            uib_pagination_config_1.PaginationConfig,
            shared_1.UserRouteAccessService
        ],
        bootstrap: [layouts_2.JhiMainComponent]
    })
], LimsAppModule);
exports.LimsAppModule = LimsAppModule;


/***/ }),

/***/ "./src/main/webapp/app/app.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var layouts_1 = __webpack_require__("./src/main/webapp/app/layouts/index.ts");
exports.navbarRoute = {
    path: '',
    component: layouts_1.NavbarComponent,
    outlet: 'navbar'
};


/***/ }),

/***/ "./src/main/webapp/app/blocks/config/prod.config.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var core_1 = __webpack_require__(0);
var app_constants_1 = __webpack_require__("./src/main/webapp/app/app.constants.ts");
function ProdConfig() {
    // disable debug data on prod profile to improve performance
    if (!app_constants_1.DEBUG_INFO_ENABLED) {
        core_1.enableProdMode();
    }
}
exports.ProdConfig = ProdConfig;


/***/ }),

/***/ "./src/main/webapp/app/blocks/config/uib-pagination.config.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var PaginationConfig = (function () {
    function PaginationConfig(config) {
        this.config = config;
        config.boundaryLinks = true;
        config.maxSize = 5;
        config.pageSize = shared_1.ITEMS_PER_PAGE;
        config.size = 'sm';
    }
    return PaginationConfig;
}());
PaginationConfig = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbPaginationConfig])
], PaginationConfig);
exports.PaginationConfig = PaginationConfig;


/***/ }),

/***/ "./src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ng_jhipster_1 = __webpack_require__(2);
var Observable_1 = __webpack_require__(9);
var auth_session_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/auth-session.service.ts");
var login_modal_service_1 = __webpack_require__("./src/main/webapp/app/shared/login/login-modal.service.ts");
var AuthExpiredInterceptor = (function (_super) {
    __extends(AuthExpiredInterceptor, _super);
    function AuthExpiredInterceptor(injector, stateStorageService) {
        var _this = _super.call(this) || this;
        _this.injector = injector;
        _this.stateStorageService = stateStorageService;
        return _this;
    }
    AuthExpiredInterceptor.prototype.requestIntercept = function (options) {
        return options;
    };
    AuthExpiredInterceptor.prototype.responseIntercept = function (observable) {
        var _this = this;
        var self = this;
        return observable.catch(function (error) {
            if (error.status === 401 && error.text() !== '' && error.json().path && error.json().path.indexOf('/api/account') === -1) {
                var authServerProvider = self.injector.get(auth_session_service_1.AuthServerProvider);
                var destination = _this.stateStorageService.getDestinationState();
                var to = destination.destination;
                var toParams = destination.params;
                authServerProvider.logout();
                if (to.name === 'accessdenied') {
                    self.stateStorageService.storePreviousState(to.name, toParams);
                }
                var loginServiceModal = self.injector.get(login_modal_service_1.LoginModalService);
                loginServiceModal.open();
            }
            return Observable_1.Observable.throw(error);
        });
    };
    return AuthExpiredInterceptor;
}(ng_jhipster_1.HttpInterceptor));
exports.AuthExpiredInterceptor = AuthExpiredInterceptor;


/***/ }),

/***/ "./src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ng_jhipster_1 = __webpack_require__(2);
var Observable_1 = __webpack_require__(9);
var ErrorHandlerInterceptor = (function (_super) {
    __extends(ErrorHandlerInterceptor, _super);
    function ErrorHandlerInterceptor(eventManager) {
        var _this = _super.call(this) || this;
        _this.eventManager = eventManager;
        return _this;
    }
    ErrorHandlerInterceptor.prototype.requestIntercept = function (options) {
        return options;
    };
    ErrorHandlerInterceptor.prototype.responseIntercept = function (observable) {
        var _this = this;
        return observable.catch(function (error) {
            if (!(error.status === 401 && (error.text() === '' ||
                (error.json().path && error.json().path.indexOf('/api/account') === 0)))) {
                _this.eventManager.broadcast({ name: 'limsApp.httpError', content: error });
            }
            return Observable_1.Observable.throw(error);
        });
    };
    return ErrorHandlerInterceptor;
}(ng_jhipster_1.HttpInterceptor));
exports.ErrorHandlerInterceptor = ErrorHandlerInterceptor;


/***/ }),

/***/ "./src/main/webapp/app/blocks/interceptor/http.provider.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var ng_jhipster_1 = __webpack_require__(2);
var state_storage_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/state-storage.service.ts");
var auth_expired_interceptor_1 = __webpack_require__("./src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts");
var errorhandler_interceptor_1 = __webpack_require__("./src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts");
var notification_interceptor_1 = __webpack_require__("./src/main/webapp/app/blocks/interceptor/notification.interceptor.ts");
function interceptableFactory(backend, defaultOptions, injector, stateStorageService, eventManager) {
    return new ng_jhipster_1.InterceptableHttp(backend, defaultOptions, [
        new auth_expired_interceptor_1.AuthExpiredInterceptor(injector, stateStorageService),
        // Other interceptors can be added here
        new errorhandler_interceptor_1.ErrorHandlerInterceptor(eventManager),
        new notification_interceptor_1.NotificationInterceptor()
    ]);
}
exports.interceptableFactory = interceptableFactory;
;
function customHttpProvider() {
    return {
        provide: http_1.Http,
        useFactory: interceptableFactory,
        deps: [
            http_1.XHRBackend,
            http_1.RequestOptions,
            core_1.Injector,
            state_storage_service_1.StateStorageService,
            ng_jhipster_1.EventManager
        ]
    };
}
exports.customHttpProvider = customHttpProvider;
;


/***/ }),

/***/ "./src/main/webapp/app/blocks/interceptor/notification.interceptor.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ng_jhipster_1 = __webpack_require__(2);
var Observable_1 = __webpack_require__(9);
var NotificationInterceptor = (function (_super) {
    __extends(NotificationInterceptor, _super);
    function NotificationInterceptor() {
        return _super.call(this) || this;
    }
    NotificationInterceptor.prototype.requestIntercept = function (options) {
        return options;
    };
    NotificationInterceptor.prototype.responseIntercept = function (observable) {
        return observable.catch(function (error) {
            var arr = Array.from(error.headers._headers);
            var headers = [];
            var i;
            for (i = 0; i < arr.length; i++) {
                if (arr[i][0].endsWith('app-alert') || arr[i][0].endsWith('app-params')) {
                    headers.push(arr[i][0]);
                }
            }
            headers.sort();
            var alertKey = headers.length >= 1 ? error.headers.get(headers[0]) : null;
            if (typeof alertKey === 'string') {
            }
            return Observable_1.Observable.throw(error);
        });
    };
    return NotificationInterceptor;
}(ng_jhipster_1.HttpInterceptor));
exports.NotificationInterceptor = NotificationInterceptor;


/***/ }),

/***/ "./src/main/webapp/app/entities/entity.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var tbc_cliente_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.module.ts");
var tbc_instituicao_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.module.ts");
var tbc_sub_grupo_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.module.ts");
var tbc_grupo_analise_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.module.ts");
var tbc_frases_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.module.ts");
var tbc_frases_opcoes_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.module.ts");
var tbc_formulario_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.module.ts");
var tbc_tipo_cadastro_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.module.ts");
var tbc_relatorio_ensaio_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.module.ts");
var tbc_analises_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.module.ts");
var tbc_lab_tercerizado_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.module.ts");
var tbc_report_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.module.ts");
var tbc_tipo_campo_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.module.ts");
var tbc_analises_componente_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.module.ts");
var tbc_grupo_cliente_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.module.ts");
var tbc_plano_teste_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.module.ts");
var tbc_plano_teste_analise_module_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.module.ts");
/* jhipster-needle-add-entity-module-import - JHipster will add entity modules imports here */
var LimsEntityModule = (function () {
    function LimsEntityModule() {
    }
    return LimsEntityModule;
}());
LimsEntityModule = __decorate([
    core_1.NgModule({
        imports: [
            tbc_cliente_module_1.LimsTbc_clienteModule,
            tbc_instituicao_module_1.LimsTbc_instituicaoModule,
            tbc_sub_grupo_module_1.LimsTbc_sub_grupoModule,
            tbc_grupo_analise_module_1.LimsTbc_grupo_analiseModule,
            tbc_frases_module_1.LimsTbc_frasesModule,
            tbc_frases_opcoes_module_1.LimsTbc_frases_opcoesModule,
            tbc_formulario_module_1.LimsTbc_formularioModule,
            tbc_tipo_cadastro_module_1.LimsTbc_tipo_cadastroModule,
            tbc_relatorio_ensaio_module_1.LimsTbc_relatorio_ensaioModule,
            tbc_analises_module_1.LimsTbc_analisesModule,
            tbc_lab_tercerizado_module_1.LimsTbc_lab_tercerizadoModule,
            tbc_report_module_1.LimsTbc_reportModule,
            tbc_tipo_campo_module_1.LimsTbc_tipo_campoModule,
            tbc_analises_componente_module_1.LimsTbc_analises_componenteModule,
            tbc_grupo_cliente_module_1.LimsTbc_grupo_clienteModule,
            tbc_plano_teste_module_1.LimsTbc_plano_testeModule,
            tbc_plano_teste_analise_module_1.LimsTbc_plano_teste_analiseModule,
        ],
        declarations: [],
        entryComponents: [],
        providers: [],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsEntityModule);
exports.LimsEntityModule = LimsEntityModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_analises_componente.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_analises_componente.delete.question\" translateValues=\"{id: '{{tbc_analises_componente.id}}'}\">Are you sure you want to delete this Tbc Analises Componente?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_componente_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-popup.service.ts");
var tbc_analises_componente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.service.ts");
var Tbc_analises_componenteDeleteDialogComponent = (function () {
    function Tbc_analises_componenteDeleteDialogComponent(jhiLanguageService, tbc_analises_componenteService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_analises_componenteService = tbc_analises_componenteService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_analises_componente']);
    }
    Tbc_analises_componenteDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_analises_componenteDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_analises_componenteService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_analises_componenteListModification',
                content: 'Deleted an tbc_analises_componente'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_analises_componenteDeleteDialogComponent;
}());
Tbc_analises_componenteDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-componente-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_analises_componente_service_1.Tbc_analises_componenteService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_analises_componenteDeleteDialogComponent);
exports.Tbc_analises_componenteDeleteDialogComponent = Tbc_analises_componenteDeleteDialogComponent;
var Tbc_analises_componenteDeletePopupComponent = (function () {
    function Tbc_analises_componenteDeletePopupComponent(route, tbc_analises_componentePopupService) {
        this.route = route;
        this.tbc_analises_componentePopupService = tbc_analises_componentePopupService;
    }
    Tbc_analises_componenteDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_analises_componentePopupService
                .open(Tbc_analises_componenteDeleteDialogComponent, params['id']);
        });
    };
    Tbc_analises_componenteDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_analises_componenteDeletePopupComponent;
}());
Tbc_analises_componenteDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-componente-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_analises_componente_popup_service_1.Tbc_analises_componentePopupService])
], Tbc_analises_componenteDeletePopupComponent);
exports.Tbc_analises_componenteDeletePopupComponent = Tbc_analises_componenteDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_analises_componente\">\n    <h2><span jhiTranslate=\"limsApp.tbc_analises_componente.detail.title\">Tbc Analises Componente</span> {{tbc_analises_componente.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_analises_componente.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_analises_componente.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises_componente.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_analises_componente.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises_componente.linha\">Linha</span></dt>\n        <dd>\n            <span>{{tbc_analises_componente.linha}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises_componente.unidade_medida\">Unidade Medida</span></dt>\n        <dd>\n            <span>{{tbc_analises_componente.unidade_medida}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises_componente.valor_padrao\">Valor Padrao</span></dt>\n        <dd>\n            <span>{{tbc_analises_componente.valor_padrao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises_componente.configuracao\">Configuracao</span></dt>\n        <dd>\n            <span>{{tbc_analises_componente.configuracao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises_componente.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_analises_componente.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_analises_componente.tbc_instituicao?.id]\">{{tbc_analises_componente.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises_componente.tbc_tipo_campo\">Tbc Tipo Campo</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_analises_componente.tbc_tipo_campo\">\n                <a [routerLink]=\"['/tbc-tipo-campo', tbc_analises_componente.tbc_tipo_campo?.id]\">{{tbc_analises_componente.tbc_tipo_campo?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises_componente.tbc_analises\">Tbc Analises</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_analises_componente.tbc_analises\">\n                <a [routerLink]=\"['/tbc-analises', tbc_analises_componente.tbc_analises?.id]\">{{tbc_analises_componente.tbc_analises?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-analises-componente/'+ tbc_analises_componente.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_componente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.service.ts");
var Tbc_analises_componenteDetailComponent = (function () {
    function Tbc_analises_componenteDetailComponent(jhiLanguageService, dataUtils, tbc_analises_componenteService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.tbc_analises_componenteService = tbc_analises_componenteService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_analises_componente']);
    }
    Tbc_analises_componenteDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_analises_componenteDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_analises_componenteService.find(id).subscribe(function (tbc_analises_componente) {
            _this.tbc_analises_componente = tbc_analises_componente;
        });
    };
    Tbc_analises_componenteDetailComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_analises_componenteDetailComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_analises_componenteDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_analises_componenteDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_analises_componenteDetailComponent;
}());
Tbc_analises_componenteDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-componente-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        tbc_analises_componente_service_1.Tbc_analises_componenteService,
        router_1.ActivatedRoute])
], Tbc_analises_componenteDetailComponent);
exports.Tbc_analises_componenteDetailComponent = Tbc_analises_componenteDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_analises_componenteLabel\" jhiTranslate=\"limsApp.tbc_analises_componente.home.createOrEditLabel\">Create or edit a Tbc Analises Componente</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_analises_componente.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_analises_componente.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises_componente.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_analises_componente.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises_componente.descricao\" for=\"field_descricao\">Descricao</label>\n            <textarea class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_analises_componente.descricao\"  ></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises_componente.linha\" for=\"field_linha\">Linha</label>\n            <input type=\"number\" class=\"form-control\" name=\"linha\" id=\"field_linha\"\n                [(ngModel)]=\"tbc_analises_componente.linha\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises_componente.unidade_medida\" for=\"field_unidade_medida\">Unidade Medida</label>\n            <input type=\"text\" class=\"form-control\" name=\"unidade_medida\" id=\"field_unidade_medida\"\n                [(ngModel)]=\"tbc_analises_componente.unidade_medida\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises_componente.valor_padrao\" for=\"field_valor_padrao\">Valor Padrao</label>\n            <textarea class=\"form-control\" name=\"valor_padrao\" id=\"field_valor_padrao\"\n                [(ngModel)]=\"tbc_analises_componente.valor_padrao\"  ></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises_componente.configuracao\" for=\"field_configuracao\">Configuracao</label>\n            <textarea class=\"form-control\" name=\"configuracao\" id=\"field_configuracao\"\n                [(ngModel)]=\"tbc_analises_componente.configuracao\"  ></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_analises_componente.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_analises_componente.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_analises_componente.tbc_instituicao?.id ? tbc_analises_componente.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_analises_componente.tbc_tipo_campo\" for=\"field_tbc_tipo_campo\">Tbc Tipo Campo</label>\n            <select class=\"form-control\" id=\"field_tbc_tipo_campo\" name=\"tbc_tipo_campo\" [(ngModel)]=\"tbc_analises_componente.tbc_tipo_campo\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_tipo_campoOption.id === tbc_analises_componente.tbc_tipo_campo?.id ? tbc_analises_componente.tbc_tipo_campo : tbc_tipo_campoOption\" *ngFor=\"let tbc_tipo_campoOption of tbc_tipo_campos; trackBy: trackTbc_tipo_campoById\">{{tbc_tipo_campoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_tipo_campo?.dirty && editForm.controls.tbc_tipo_campo?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_tipo_campo?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_analises_componente.tbc_analises\" for=\"field_tbc_analises\">Tbc Analises</label>\n            <select class=\"form-control\" id=\"field_tbc_analises\" name=\"tbc_analises\" [(ngModel)]=\"tbc_analises_componente.tbc_analises\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_analisesOption.id === tbc_analises_componente.tbc_analises?.id ? tbc_analises_componente.tbc_analises : tbc_analisesOption\" *ngFor=\"let tbc_analisesOption of tbc_analises; trackBy: trackTbc_analisesById\">{{tbc_analisesOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_analises?.dirty && editForm.controls.tbc_analises?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_analises?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_componente_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-popup.service.ts");
var tbc_analises_componente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var tbc_tipo_campo_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/index.ts");
var tbc_analises_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/index.ts");
var Tbc_analises_componenteDialogComponent = (function () {
    function Tbc_analises_componenteDialogComponent(activeModal, jhiLanguageService, dataUtils, alertService, tbc_analises_componenteService, tbc_instituicaoService, tbc_tipo_campoService, tbc_analisesService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.alertService = alertService;
        this.tbc_analises_componenteService = tbc_analises_componenteService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.tbc_tipo_campoService = tbc_tipo_campoService;
        this.tbc_analisesService = tbc_analisesService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_analises_componente']);
    }
    Tbc_analises_componenteDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_tipo_campoService.query().subscribe(function (res) { _this.tbc_tipo_campos = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_analisesService.query().subscribe(function (res) { _this.tbc_analises = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_analises_componenteDialogComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_analises_componenteDialogComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_analises_componenteDialogComponent.prototype.setFileData = function ($event, tbc_analises_componente, field, isImage) {
        if ($event.target.files && $event.target.files[0]) {
            var $file_1 = $event.target.files[0];
            if (isImage && !/^image\//.test($file_1.type)) {
                return;
            }
            this.dataUtils.toBase64($file_1, function (base64Data) {
                tbc_analises_componente[field] = base64Data;
                tbc_analises_componente[field + "ContentType"] = $file_1.type;
            });
        }
    };
    Tbc_analises_componenteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_analises_componenteDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_analises_componente.id !== undefined) {
            this.tbc_analises_componenteService.update(this.tbc_analises_componente)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_analises_componenteService.create(this.tbc_analises_componente)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_analises_componenteDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_analises_componenteListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_analises_componenteDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_analises_componenteDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_analises_componenteDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    Tbc_analises_componenteDialogComponent.prototype.trackTbc_tipo_campoById = function (index, item) {
        return item.id;
    };
    Tbc_analises_componenteDialogComponent.prototype.trackTbc_analisesById = function (index, item) {
        return item.id;
    };
    return Tbc_analises_componenteDialogComponent;
}());
Tbc_analises_componenteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-componente-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        ng_jhipster_1.AlertService,
        tbc_analises_componente_service_1.Tbc_analises_componenteService,
        tbc_instituicao_1.Tbc_instituicaoService,
        tbc_tipo_campo_1.Tbc_tipo_campoService,
        tbc_analises_1.Tbc_analisesService,
        ng_jhipster_1.EventManager])
], Tbc_analises_componenteDialogComponent);
exports.Tbc_analises_componenteDialogComponent = Tbc_analises_componenteDialogComponent;
var Tbc_analises_componentePopupComponent = (function () {
    function Tbc_analises_componentePopupComponent(route, tbc_analises_componentePopupService) {
        this.route = route;
        this.tbc_analises_componentePopupService = tbc_analises_componentePopupService;
    }
    Tbc_analises_componentePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_analises_componentePopupService
                    .open(Tbc_analises_componenteDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_analises_componentePopupService
                    .open(Tbc_analises_componenteDialogComponent);
            }
        });
    };
    Tbc_analises_componentePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_analises_componentePopupComponent;
}());
Tbc_analises_componentePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-componente-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_analises_componente_popup_service_1.Tbc_analises_componentePopupService])
], Tbc_analises_componentePopupComponent);
exports.Tbc_analises_componentePopupComponent = Tbc_analises_componentePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_analises_componente_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.model.ts");
var tbc_analises_componente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.service.ts");
var Tbc_analises_componentePopupService = (function () {
    function Tbc_analises_componentePopupService(modalService, router, tbc_analises_componenteService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_analises_componenteService = tbc_analises_componenteService;
        this.isOpen = false;
    }
    Tbc_analises_componentePopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_analises_componenteService.find(id).subscribe(function (tbc_analises_componente) {
                _this.tbc_analises_componenteModalRef(component, tbc_analises_componente);
            });
        }
        else {
            return this.tbc_analises_componenteModalRef(component, new tbc_analises_componente_model_1.Tbc_analises_componente());
        }
    };
    Tbc_analises_componentePopupService.prototype.tbc_analises_componenteModalRef = function (component, tbc_analises_componente) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_analises_componente = tbc_analises_componente;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_analises_componentePopupService;
}());
Tbc_analises_componentePopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_analises_componente_service_1.Tbc_analises_componenteService])
], Tbc_analises_componentePopupService);
exports.Tbc_analises_componentePopupService = Tbc_analises_componentePopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_analises_componente.home.title\">Tbc Analises Componentes</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-analises-componente\" [routerLink]=\"['/', { outlets: { popup: ['tbc-analises-componente-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_analises_componente.home.createLabel\">\n            Create new Tbc Analises Componente\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_analises_componente.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_analises_componentes\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_analises_componente.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_analises_componente.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"linha\"><span jhiTranslate=\"limsApp.tbc_analises_componente.linha\">Linha</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"unidade_medida\"><span jhiTranslate=\"limsApp.tbc_analises_componente.unidade_medida\">Unidade Medida</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"valor_padrao\"><span jhiTranslate=\"limsApp.tbc_analises_componente.valor_padrao\">Valor Padrao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"configuracao\"><span jhiTranslate=\"limsApp.tbc_analises_componente.configuracao\">Configuracao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_analises_componente.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_tipo_campo.id\"><span jhiTranslate=\"limsApp.tbc_analises_componente.tbc_tipo_campo\">Tbc Tipo Campo</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_analises.id\"><span jhiTranslate=\"limsApp.tbc_analises_componente.tbc_analises\">Tbc Analises</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_analises_componente of tbc_analises_componentes ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-analises-componente', tbc_analises_componente.id ]\">{{tbc_analises_componente.id}}</a></td>\n                <td>{{tbc_analises_componente.nome}}</td>\n                <td>{{tbc_analises_componente.descricao}}</td>\n                <td>{{tbc_analises_componente.linha}}</td>\n                <td>{{tbc_analises_componente.unidade_medida}}</td>\n                <td>{{tbc_analises_componente.valor_padrao}}</td>\n                <td>{{tbc_analises_componente.configuracao}}</td>\n                <td>\n                    <div *ngIf=\"tbc_analises_componente.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_analises_componente.tbc_instituicao?.id ]\" >{{tbc_analises_componente.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_analises_componente.tbc_tipo_campo\">\n                        <a [routerLink]=\"['../tbc-tipo-campo', tbc_analises_componente.tbc_tipo_campo?.id ]\" >{{tbc_analises_componente.tbc_tipo_campo?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_analises_componente.tbc_analises\">\n                        <a [routerLink]=\"['../tbc-analises', tbc_analises_componente.tbc_analises?.id ]\" >{{tbc_analises_componente.tbc_analises?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-analises-componente', tbc_analises_componente.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-analises-componente/'+ tbc_analises_componente.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-analises-componente/'+ tbc_analises_componente.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_analises_componentes && tbc_analises_componentes.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_componente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_analises_componenteComponent = (function () {
    function Tbc_analises_componenteComponent(jhiLanguageService, tbc_analises_componenteService, parseLinks, alertService, principal, activatedRoute, dataUtils, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_analises_componenteService = tbc_analises_componenteService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.dataUtils = dataUtils;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_analises_componente']);
    }
    Tbc_analises_componenteComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_analises_componenteService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_analises_componenteService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_analises_componenteComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_analises_componenteComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-analises-componente'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_analises_componenteComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-analises-componente', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_analises_componenteComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-analises-componente', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_analises_componenteComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_analises_componentes();
    };
    Tbc_analises_componenteComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_analises_componenteComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_analises_componenteComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_analises_componenteComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_analises_componenteComponent.prototype.registerChangeInTbc_analises_componentes = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_analises_componenteListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_analises_componenteComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_analises_componenteComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_analises_componentes = data;
    };
    Tbc_analises_componenteComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_analises_componenteComponent;
}());
Tbc_analises_componenteComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-componente',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_analises_componente_service_1.Tbc_analises_componenteService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        ng_jhipster_1.DataUtils,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_analises_componenteComponent);
exports.Tbc_analises_componenteComponent = Tbc_analises_componenteComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_analises_componente = (function () {
    function Tbc_analises_componente(id, nome, descricao, linha, unidade_medida, valor_padrao, configuracao, tbc_instituicao, tbc_tipo_campo, tbc_analises) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.linha = linha;
        this.unidade_medida = unidade_medida;
        this.valor_padrao = valor_padrao;
        this.configuracao = configuracao;
        this.tbc_instituicao = tbc_instituicao;
        this.tbc_tipo_campo = tbc_tipo_campo;
        this.tbc_analises = tbc_analises;
    }
    return Tbc_analises_componente;
}());
exports.Tbc_analises_componente = Tbc_analises_componente;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/index.ts");
var ENTITY_STATES = _1.tbc_analises_componenteRoute.concat(_1.tbc_analises_componentePopupRoute);
var LimsTbc_analises_componenteModule = (function () {
    function LimsTbc_analises_componenteModule() {
    }
    return LimsTbc_analises_componenteModule;
}());
LimsTbc_analises_componenteModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_analises_componenteComponent,
            _1.Tbc_analises_componenteDetailComponent,
            _1.Tbc_analises_componenteDialogComponent,
            _1.Tbc_analises_componenteDeleteDialogComponent,
            _1.Tbc_analises_componentePopupComponent,
            _1.Tbc_analises_componenteDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_analises_componenteComponent,
            _1.Tbc_analises_componenteDialogComponent,
            _1.Tbc_analises_componentePopupComponent,
            _1.Tbc_analises_componenteDeleteDialogComponent,
            _1.Tbc_analises_componenteDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_analises_componenteService,
            _1.Tbc_analises_componentePopupService,
            _1.Tbc_analises_componenteResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_analises_componenteModule);
exports.LimsTbc_analises_componenteModule = LimsTbc_analises_componenteModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_componente_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.component.ts");
var tbc_analises_componente_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-detail.component.ts");
var tbc_analises_componente_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-dialog.component.ts");
var tbc_analises_componente_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente-delete-dialog.component.ts");
var Tbc_analises_componenteResolvePagingParams = (function () {
    function Tbc_analises_componenteResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_analises_componenteResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_analises_componenteResolvePagingParams;
}());
Tbc_analises_componenteResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_analises_componenteResolvePagingParams);
exports.Tbc_analises_componenteResolvePagingParams = Tbc_analises_componenteResolvePagingParams;
exports.tbc_analises_componenteRoute = [
    {
        path: 'tbc-analises-componente',
        component: tbc_analises_componente_component_1.Tbc_analises_componenteComponent,
        resolve: {
            'pagingParams': Tbc_analises_componenteResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises_componente.home.title'
        }
    }, {
        path: 'tbc-analises-componente/:id',
        component: tbc_analises_componente_detail_component_1.Tbc_analises_componenteDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises_componente.home.title'
        }
    }
];
exports.tbc_analises_componentePopupRoute = [
    {
        path: 'tbc-analises-componente-new',
        component: tbc_analises_componente_dialog_component_1.Tbc_analises_componentePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises_componente.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-analises-componente/:id/edit',
        component: tbc_analises_componente_dialog_component_1.Tbc_analises_componentePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises_componente.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-analises-componente/:id/delete',
        component: tbc_analises_componente_delete_dialog_component_1.Tbc_analises_componenteDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises_componente.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises-componente/tbc-analises-componente.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_analises_componenteService = (function () {
    function Tbc_analises_componenteService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-analises-componentes';
        this.resourceSearchUrl = 'api/_search/tbc-analises-componentes';
    }
    Tbc_analises_componenteService.prototype.create = function (tbc_analises_componente) {
        var copy = Object.assign({}, tbc_analises_componente);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_analises_componenteService.prototype.update = function (tbc_analises_componente) {
        var copy = Object.assign({}, tbc_analises_componente);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_analises_componenteService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_analises_componenteService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_analises_componenteService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_analises_componenteService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_analises_componenteService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_analises_componenteService;
}());
Tbc_analises_componenteService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_analises_componenteService);
exports.Tbc_analises_componenteService = Tbc_analises_componenteService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_analises.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_analises.delete.question\" translateValues=\"{id: '{{tbc_analises.id}}'}\">Are you sure you want to delete this Tbc Analises?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-popup.service.ts");
var tbc_analises_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.service.ts");
var Tbc_analisesDeleteDialogComponent = (function () {
    function Tbc_analisesDeleteDialogComponent(jhiLanguageService, tbc_analisesService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_analisesService = tbc_analisesService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_analises']);
    }
    Tbc_analisesDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_analisesDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_analisesService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_analisesListModification',
                content: 'Deleted an tbc_analises'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_analisesDeleteDialogComponent;
}());
Tbc_analisesDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_analises_service_1.Tbc_analisesService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_analisesDeleteDialogComponent);
exports.Tbc_analisesDeleteDialogComponent = Tbc_analisesDeleteDialogComponent;
var Tbc_analisesDeletePopupComponent = (function () {
    function Tbc_analisesDeletePopupComponent(route, tbc_analisesPopupService) {
        this.route = route;
        this.tbc_analisesPopupService = tbc_analisesPopupService;
    }
    Tbc_analisesDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_analisesPopupService
                .open(Tbc_analisesDeleteDialogComponent, params['id']);
        });
    };
    Tbc_analisesDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_analisesDeletePopupComponent;
}());
Tbc_analisesDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_analises_popup_service_1.Tbc_analisesPopupService])
], Tbc_analisesDeletePopupComponent);
exports.Tbc_analisesDeletePopupComponent = Tbc_analisesDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_analises\">\n    <h2><span jhiTranslate=\"limsApp.tbc_analises.detail.title\">Tbc Analises</span> {{tbc_analises.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_analises.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_analises.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.numerodias\">Numerodias</span></dt>\n        <dd>\n            <span>{{tbc_analises.numerodias}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.metpop\">Metpop</span></dt>\n        <dd>\n            <span>{{tbc_analises.metpop}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_analises.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.tercerizado\">Tercerizado</span></dt>\n        <dd>\n            <span>{{tbc_analises.tercerizado}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.directiva_data_atu\">Directiva Data Atu</span></dt>\n        <dd>\n            <span>{{tbc_analises.directiva_data_atu | date:'medium'}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.tbc_sub_grupo\">Tbc Sub Grupo</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_analises.tbc_sub_grupo\">\n                <a [routerLink]=\"['/tbc-sub-grupo', tbc_analises.tbc_sub_grupo?.id]\">{{tbc_analises.tbc_sub_grupo?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.tbc_grupo_analise\">Tbc Grupo Analise</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_analises.tbc_grupo_analise\">\n                <a [routerLink]=\"['/tbc-grupo-analise', tbc_analises.tbc_grupo_analise?.id]\">{{tbc_analises.tbc_grupo_analise?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.tbc_tipo_cadastro\">Tbc Tipo Cadastro</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_analises.tbc_tipo_cadastro\">\n                <a [routerLink]=\"['/tbc-tipo-cadastro', tbc_analises.tbc_tipo_cadastro?.id]\">{{tbc_analises.tbc_tipo_cadastro?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_analises.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_analises.tbc_instituicao?.id]\">{{tbc_analises.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_analises.tbc_report\">Tbc Report</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_analises.tbc_report\">\n                <a [routerLink]=\"['/tbc-report', tbc_analises.tbc_report?.id]\">{{tbc_analises.tbc_report?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-analises/'+ tbc_analises.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.service.ts");
var Tbc_analisesDetailComponent = (function () {
    function Tbc_analisesDetailComponent(jhiLanguageService, dataUtils, tbc_analisesService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.tbc_analisesService = tbc_analisesService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_analises']);
    }
    Tbc_analisesDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_analisesDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_analisesService.find(id).subscribe(function (tbc_analises) {
            _this.tbc_analises = tbc_analises;
        });
    };
    Tbc_analisesDetailComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_analisesDetailComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_analisesDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_analisesDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_analisesDetailComponent;
}());
Tbc_analisesDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        tbc_analises_service_1.Tbc_analisesService,
        router_1.ActivatedRoute])
], Tbc_analisesDetailComponent);
exports.Tbc_analisesDetailComponent = Tbc_analisesDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_analisesLabel\" jhiTranslate=\"limsApp.tbc_analises.home.createOrEditLabel\">Create or edit a Tbc Analises</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_analises.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_analises.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_analises.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises.descricao\" for=\"field_descricao\">Descricao</label>\n            <textarea class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_analises.descricao\"  ></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises.numerodias\" for=\"field_numerodias\">Numerodias</label>\n            <input type=\"number\" class=\"form-control\" name=\"numerodias\" id=\"field_numerodias\"\n                [(ngModel)]=\"tbc_analises.numerodias\"\n            required />\n            <div [hidden]=\"!(editForm.controls.numerodias?.dirty && editForm.controls.numerodias?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.numerodias?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n                <small class=\"form-text text-danger\"\n                    [hidden]=\"!editForm.controls.numerodias?.errors?.number\" jhiTranslate=\"entity.validation.number\">\n                    This field should be a number.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises.metpop\" for=\"field_metpop\">Metpop</label>\n            <input type=\"text\" class=\"form-control\" name=\"metpop\" id=\"field_metpop\"\n                [(ngModel)]=\"tbc_analises.metpop\"\n            required />\n            <div [hidden]=\"!(editForm.controls.metpop?.dirty && editForm.controls.metpop?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.metpop?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_analises.removido\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises.tercerizado\" for=\"field_tercerizado\">Tercerizado</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"tercerizado\" id=\"field_tercerizado\"\n                [(ngModel)]=\"tbc_analises.tercerizado\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_analises.directiva_data_atu\" for=\"field_directiva_data_atu\">Directiva Data Atu</label>\n            <div class=\"input-group\">\n                <input id=\"field_directiva_data_atu\" type=\"datetime-local\" class=\"form-control\" name=\"directiva_data_atu\" [(ngModel)]=\"tbc_analises.directiva_data_atu\"\n                  />\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_analises.tbc_sub_grupo\" for=\"field_tbc_sub_grupo\">Tbc Sub Grupo</label>\n            <select class=\"form-control\" id=\"field_tbc_sub_grupo\" name=\"tbc_sub_grupo\" [(ngModel)]=\"tbc_analises.tbc_sub_grupo\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_sub_grupoOption.id === tbc_analises.tbc_sub_grupo?.id ? tbc_analises.tbc_sub_grupo : tbc_sub_grupoOption\" *ngFor=\"let tbc_sub_grupoOption of tbc_sub_grupos; trackBy: trackTbc_sub_grupoById\">{{tbc_sub_grupoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_sub_grupo?.dirty && editForm.controls.tbc_sub_grupo?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_sub_grupo?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_analises.tbc_grupo_analise\" for=\"field_tbc_grupo_analise\">Tbc Grupo Analise</label>\n            <select class=\"form-control\" id=\"field_tbc_grupo_analise\" name=\"tbc_grupo_analise\" [(ngModel)]=\"tbc_analises.tbc_grupo_analise\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_grupo_analiseOption.id === tbc_analises.tbc_grupo_analise?.id ? tbc_analises.tbc_grupo_analise : tbc_grupo_analiseOption\" *ngFor=\"let tbc_grupo_analiseOption of tbc_grupo_analises; trackBy: trackTbc_grupo_analiseById\">{{tbc_grupo_analiseOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_grupo_analise?.dirty && editForm.controls.tbc_grupo_analise?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_grupo_analise?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_analises.tbc_tipo_cadastro\" for=\"field_tbc_tipo_cadastro\">Tbc Tipo Cadastro</label>\n            <select class=\"form-control\" id=\"field_tbc_tipo_cadastro\" name=\"tbc_tipo_cadastro\" [(ngModel)]=\"tbc_analises.tbc_tipo_cadastro\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_tipo_cadastroOption.id === tbc_analises.tbc_tipo_cadastro?.id ? tbc_analises.tbc_tipo_cadastro : tbc_tipo_cadastroOption\" *ngFor=\"let tbc_tipo_cadastroOption of tbc_tipo_cadastros; trackBy: trackTbc_tipo_cadastroById\">{{tbc_tipo_cadastroOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_tipo_cadastro?.dirty && editForm.controls.tbc_tipo_cadastro?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_tipo_cadastro?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_analises.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_analises.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_analises.tbc_instituicao?.id ? tbc_analises.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_analises.tbc_report\" for=\"field_tbc_report\">Tbc Report</label>\n            <select class=\"form-control\" id=\"field_tbc_report\" name=\"tbc_report\" [(ngModel)]=\"tbc_analises.tbc_report\" >\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_reportOption.id === tbc_analises.tbc_report?.id ? tbc_analises.tbc_report : tbc_reportOption\" *ngFor=\"let tbc_reportOption of tbc_reports; trackBy: trackTbc_reportById\">{{tbc_reportOption.id}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-popup.service.ts");
var tbc_analises_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.service.ts");
var tbc_sub_grupo_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/index.ts");
var tbc_grupo_analise_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/index.ts");
var tbc_tipo_cadastro_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/index.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var tbc_report_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/index.ts");
var Tbc_analisesDialogComponent = (function () {
    function Tbc_analisesDialogComponent(activeModal, jhiLanguageService, dataUtils, alertService, tbc_analisesService, tbc_sub_grupoService, tbc_grupo_analiseService, tbc_tipo_cadastroService, tbc_instituicaoService, tbc_reportService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.alertService = alertService;
        this.tbc_analisesService = tbc_analisesService;
        this.tbc_sub_grupoService = tbc_sub_grupoService;
        this.tbc_grupo_analiseService = tbc_grupo_analiseService;
        this.tbc_tipo_cadastroService = tbc_tipo_cadastroService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.tbc_reportService = tbc_reportService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_analises']);
    }
    Tbc_analisesDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_sub_grupoService.query().subscribe(function (res) { _this.tbc_sub_grupos = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_grupo_analiseService.query().subscribe(function (res) { _this.tbc_grupo_analises = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_tipo_cadastroService.query().subscribe(function (res) { _this.tbc_tipo_cadastros = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_reportService.query().subscribe(function (res) { _this.tbc_reports = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_analisesDialogComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_analisesDialogComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_analisesDialogComponent.prototype.setFileData = function ($event, tbc_analises, field, isImage) {
        if ($event.target.files && $event.target.files[0]) {
            var $file_1 = $event.target.files[0];
            if (isImage && !/^image\//.test($file_1.type)) {
                return;
            }
            this.dataUtils.toBase64($file_1, function (base64Data) {
                tbc_analises[field] = base64Data;
                tbc_analises[field + "ContentType"] = $file_1.type;
            });
        }
    };
    Tbc_analisesDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_analisesDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_analises.id !== undefined) {
            this.tbc_analisesService.update(this.tbc_analises)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_analisesService.create(this.tbc_analises)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_analisesDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_analisesListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_analisesDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_analisesDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_analisesDialogComponent.prototype.trackTbc_sub_grupoById = function (index, item) {
        return item.id;
    };
    Tbc_analisesDialogComponent.prototype.trackTbc_grupo_analiseById = function (index, item) {
        return item.id;
    };
    Tbc_analisesDialogComponent.prototype.trackTbc_tipo_cadastroById = function (index, item) {
        return item.id;
    };
    Tbc_analisesDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    Tbc_analisesDialogComponent.prototype.trackTbc_reportById = function (index, item) {
        return item.id;
    };
    return Tbc_analisesDialogComponent;
}());
Tbc_analisesDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        ng_jhipster_1.AlertService,
        tbc_analises_service_1.Tbc_analisesService,
        tbc_sub_grupo_1.Tbc_sub_grupoService,
        tbc_grupo_analise_1.Tbc_grupo_analiseService,
        tbc_tipo_cadastro_1.Tbc_tipo_cadastroService,
        tbc_instituicao_1.Tbc_instituicaoService,
        tbc_report_1.Tbc_reportService,
        ng_jhipster_1.EventManager])
], Tbc_analisesDialogComponent);
exports.Tbc_analisesDialogComponent = Tbc_analisesDialogComponent;
var Tbc_analisesPopupComponent = (function () {
    function Tbc_analisesPopupComponent(route, tbc_analisesPopupService) {
        this.route = route;
        this.tbc_analisesPopupService = tbc_analisesPopupService;
    }
    Tbc_analisesPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_analisesPopupService
                    .open(Tbc_analisesDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_analisesPopupService
                    .open(Tbc_analisesDialogComponent);
            }
        });
    };
    Tbc_analisesPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_analisesPopupComponent;
}());
Tbc_analisesPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_analises_popup_service_1.Tbc_analisesPopupService])
], Tbc_analisesPopupComponent);
exports.Tbc_analisesPopupComponent = Tbc_analisesPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var common_1 = __webpack_require__(6);
var tbc_analises_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.model.ts");
var tbc_analises_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.service.ts");
var Tbc_analisesPopupService = (function () {
    function Tbc_analisesPopupService(datePipe, modalService, router, tbc_analisesService) {
        this.datePipe = datePipe;
        this.modalService = modalService;
        this.router = router;
        this.tbc_analisesService = tbc_analisesService;
        this.isOpen = false;
    }
    Tbc_analisesPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_analisesService.find(id).subscribe(function (tbc_analises) {
                tbc_analises.directiva_data_atu = _this.datePipe.transform(tbc_analises.directiva_data_atu, 'yyyy-MM-ddThh:mm');
                _this.tbc_analisesModalRef(component, tbc_analises);
            });
        }
        else {
            return this.tbc_analisesModalRef(component, new tbc_analises_model_1.Tbc_analises());
        }
    };
    Tbc_analisesPopupService.prototype.tbc_analisesModalRef = function (component, tbc_analises) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_analises = tbc_analises;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_analisesPopupService;
}());
Tbc_analisesPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [common_1.DatePipe,
        ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_analises_service_1.Tbc_analisesService])
], Tbc_analisesPopupService);
exports.Tbc_analisesPopupService = Tbc_analisesPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_analises.home.title\">Tbc Analises</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-analises\" [routerLink]=\"['/', { outlets: { popup: ['tbc-analises-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_analises.home.createLabel\">\n            Create new Tbc Analises\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_analises.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_analises\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_analises.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_analises.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"numerodias\"><span jhiTranslate=\"limsApp.tbc_analises.numerodias\">Numerodias</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"metpop\"><span jhiTranslate=\"limsApp.tbc_analises.metpop\">Metpop</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_analises.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tercerizado\"><span jhiTranslate=\"limsApp.tbc_analises.tercerizado\">Tercerizado</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"directiva_data_atu\"><span jhiTranslate=\"limsApp.tbc_analises.directiva_data_atu\">Directiva Data Atu</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_sub_grupo.id\"><span jhiTranslate=\"limsApp.tbc_analises.tbc_sub_grupo\">Tbc Sub Grupo</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_grupo_analise.id\"><span jhiTranslate=\"limsApp.tbc_analises.tbc_grupo_analise\">Tbc Grupo Analise</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_tipo_cadastro.id\"><span jhiTranslate=\"limsApp.tbc_analises.tbc_tipo_cadastro\">Tbc Tipo Cadastro</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_analises.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_report.id\"><span jhiTranslate=\"limsApp.tbc_analises.tbc_report\">Tbc Report</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_analises of tbc_analises ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-analises', tbc_analises.id ]\">{{tbc_analises.id}}</a></td>\n                <td>{{tbc_analises.nome}}</td>\n                <td>{{tbc_analises.descricao}}</td>\n                <td>{{tbc_analises.numerodias}}</td>\n                <td>{{tbc_analises.metpop}}</td>\n                <td>{{tbc_analises.removido}}</td>\n                <td>{{tbc_analises.tercerizado}}</td>\n                <td>{{tbc_analises.directiva_data_atu | date:'medium'}}</td>\n                <td>\n                    <div *ngIf=\"tbc_analises.tbc_sub_grupo\">\n                        <a [routerLink]=\"['../tbc-sub-grupo', tbc_analises.tbc_sub_grupo?.id ]\" >{{tbc_analises.tbc_sub_grupo?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_analises.tbc_grupo_analise\">\n                        <a [routerLink]=\"['../tbc-grupo-analise', tbc_analises.tbc_grupo_analise?.id ]\" >{{tbc_analises.tbc_grupo_analise?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_analises.tbc_tipo_cadastro\">\n                        <a [routerLink]=\"['../tbc-tipo-cadastro', tbc_analises.tbc_tipo_cadastro?.id ]\" >{{tbc_analises.tbc_tipo_cadastro?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_analises.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_analises.tbc_instituicao?.id ]\" >{{tbc_analises.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_analises.tbc_report\">\n                        <a [routerLink]=\"['../tbc-report', tbc_analises.tbc_report?.id ]\" >{{tbc_analises.tbc_report?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-analises', tbc_analises.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-analises/'+ tbc_analises.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-analises/'+ tbc_analises.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_analises && tbc_analises.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_analisesComponent = (function () {
    function Tbc_analisesComponent(jhiLanguageService, tbc_analisesService, parseLinks, alertService, principal, activatedRoute, dataUtils, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_analisesService = tbc_analisesService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.dataUtils = dataUtils;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_analises']);
    }
    Tbc_analisesComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_analisesService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_analisesService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_analisesComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_analisesComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-analises'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_analisesComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-analises', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_analisesComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-analises', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_analisesComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_analises();
    };
    Tbc_analisesComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_analisesComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_analisesComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_analisesComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_analisesComponent.prototype.registerChangeInTbc_analises = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_analisesListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_analisesComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_analisesComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_analises = data;
    };
    Tbc_analisesComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_analisesComponent;
}());
Tbc_analisesComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-analises',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_analises_service_1.Tbc_analisesService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        ng_jhipster_1.DataUtils,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_analisesComponent);
exports.Tbc_analisesComponent = Tbc_analisesComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_analises = (function () {
    function Tbc_analises(id, nome, descricao, numerodias, metpop, removido, tercerizado, directiva_data_atu, tbc_sub_grupo, tbc_grupo_analise, tbc_tipo_cadastro, tbc_instituicao, tbc_report) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.numerodias = numerodias;
        this.metpop = metpop;
        this.removido = removido;
        this.tercerizado = tercerizado;
        this.directiva_data_atu = directiva_data_atu;
        this.tbc_sub_grupo = tbc_sub_grupo;
        this.tbc_grupo_analise = tbc_grupo_analise;
        this.tbc_tipo_cadastro = tbc_tipo_cadastro;
        this.tbc_instituicao = tbc_instituicao;
        this.tbc_report = tbc_report;
    }
    return Tbc_analises;
}());
exports.Tbc_analises = Tbc_analises;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/index.ts");
var ENTITY_STATES = _1.tbc_analisesRoute.concat(_1.tbc_analisesPopupRoute);
var LimsTbc_analisesModule = (function () {
    function LimsTbc_analisesModule() {
    }
    return LimsTbc_analisesModule;
}());
LimsTbc_analisesModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_analisesComponent,
            _1.Tbc_analisesDetailComponent,
            _1.Tbc_analisesDialogComponent,
            _1.Tbc_analisesDeleteDialogComponent,
            _1.Tbc_analisesPopupComponent,
            _1.Tbc_analisesDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_analisesComponent,
            _1.Tbc_analisesDialogComponent,
            _1.Tbc_analisesPopupComponent,
            _1.Tbc_analisesDeleteDialogComponent,
            _1.Tbc_analisesDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_analisesService,
            _1.Tbc_analisesPopupService,
            _1.Tbc_analisesResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_analisesModule);
exports.LimsTbc_analisesModule = LimsTbc_analisesModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_analises_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises.component.ts");
var tbc_analises_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-detail.component.ts");
var tbc_analises_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-dialog.component.ts");
var tbc_analises_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/tbc-analises-delete-dialog.component.ts");
var Tbc_analisesResolvePagingParams = (function () {
    function Tbc_analisesResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_analisesResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_analisesResolvePagingParams;
}());
Tbc_analisesResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_analisesResolvePagingParams);
exports.Tbc_analisesResolvePagingParams = Tbc_analisesResolvePagingParams;
exports.tbc_analisesRoute = [
    {
        path: 'tbc-analises',
        component: tbc_analises_component_1.Tbc_analisesComponent,
        resolve: {
            'pagingParams': Tbc_analisesResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises.home.title'
        }
    }, {
        path: 'tbc-analises/:id',
        component: tbc_analises_detail_component_1.Tbc_analisesDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises.home.title'
        }
    }
];
exports.tbc_analisesPopupRoute = [
    {
        path: 'tbc-analises-new',
        component: tbc_analises_dialog_component_1.Tbc_analisesPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-analises/:id/edit',
        component: tbc_analises_dialog_component_1.Tbc_analisesPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-analises/:id/delete',
        component: tbc_analises_delete_dialog_component_1.Tbc_analisesDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_analises.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-analises/tbc-analises.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var ng_jhipster_1 = __webpack_require__(2);
var Tbc_analisesService = (function () {
    function Tbc_analisesService(http, dateUtils) {
        this.http = http;
        this.dateUtils = dateUtils;
        this.resourceUrl = 'api/tbc-analises';
        this.resourceSearchUrl = 'api/_search/tbc-analises';
    }
    Tbc_analisesService.prototype.create = function (tbc_analises) {
        var copy = Object.assign({}, tbc_analises);
        copy.directiva_data_atu = this.dateUtils.toDate(tbc_analises.directiva_data_atu);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_analisesService.prototype.update = function (tbc_analises) {
        var copy = Object.assign({}, tbc_analises);
        copy.directiva_data_atu = this.dateUtils.toDate(tbc_analises.directiva_data_atu);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_analisesService.prototype.find = function (id) {
        var _this = this;
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            var jsonResponse = res.json();
            jsonResponse.directiva_data_atu = _this.dateUtils
                .convertDateTimeFromServer(jsonResponse.directiva_data_atu);
            return jsonResponse;
        });
    };
    Tbc_analisesService.prototype.query = function (req) {
        var _this = this;
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options)
            .map(function (res) { return _this.convertResponse(res); });
    };
    Tbc_analisesService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_analisesService.prototype.search = function (req) {
        var _this = this;
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options)
            .map(function (res) { return _this.convertResponse(res); });
    };
    Tbc_analisesService.prototype.convertResponse = function (res) {
        var jsonResponse = res.json();
        for (var i = 0; i < jsonResponse.length; i++) {
            jsonResponse[i].directiva_data_atu = this.dateUtils
                .convertDateTimeFromServer(jsonResponse[i].directiva_data_atu);
        }
        res._body = jsonResponse;
        return res;
    };
    Tbc_analisesService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_analisesService;
}());
Tbc_analisesService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http, ng_jhipster_1.DateUtils])
], Tbc_analisesService);
exports.Tbc_analisesService = Tbc_analisesService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_cliente.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_cliente.delete.question\" translateValues=\"{id: '{{tbc_cliente.id}}'}\">Are you sure you want to delete this Tbc Cliente?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_cliente_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-popup.service.ts");
var tbc_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.service.ts");
var Tbc_clienteDeleteDialogComponent = (function () {
    function Tbc_clienteDeleteDialogComponent(jhiLanguageService, tbc_clienteService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_clienteService = tbc_clienteService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_cliente']);
    }
    Tbc_clienteDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_clienteDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_clienteService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_clienteListModification',
                content: 'Deleted an tbc_cliente'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_clienteDeleteDialogComponent;
}());
Tbc_clienteDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-cliente-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_cliente_service_1.Tbc_clienteService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_clienteDeleteDialogComponent);
exports.Tbc_clienteDeleteDialogComponent = Tbc_clienteDeleteDialogComponent;
var Tbc_clienteDeletePopupComponent = (function () {
    function Tbc_clienteDeletePopupComponent(route, tbc_clientePopupService) {
        this.route = route;
        this.tbc_clientePopupService = tbc_clientePopupService;
    }
    Tbc_clienteDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_clientePopupService
                .open(Tbc_clienteDeleteDialogComponent, params['id']);
        });
    };
    Tbc_clienteDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_clienteDeletePopupComponent;
}());
Tbc_clienteDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-cliente-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_cliente_popup_service_1.Tbc_clientePopupService])
], Tbc_clienteDeletePopupComponent);
exports.Tbc_clienteDeletePopupComponent = Tbc_clienteDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_cliente\">\n    <h2><span jhiTranslate=\"limsApp.tbc_cliente.detail.title\">Tbc Cliente</span> {{tbc_cliente.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_cliente.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.cep\">Cep</span></dt>\n        <dd>\n            <span>{{tbc_cliente.cep}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.endereco\">Endereco</span></dt>\n        <dd>\n            <span>{{tbc_cliente.endereco}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.email\">Email</span></dt>\n        <dd>\n            <span>{{tbc_cliente.email}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.imprimir\">Imprimir</span></dt>\n        <dd>\n            <span>{{tbc_cliente.imprimir}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.enviar_email\">Enviar Email</span></dt>\n        <dd>\n            <span>{{tbc_cliente.enviar_email}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.directiva_data_atu\">Directiva Data Atu</span></dt>\n        <dd>\n            <span>{{tbc_cliente.directiva_data_atu | date:'medium'}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.cpf_cnpj\">Cpf Cnpj</span></dt>\n        <dd>\n            <span>{{tbc_cliente.cpf_cnpj}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.codigo_cliente\">Codigo Cliente</span></dt>\n        <dd>\n            <span>{{tbc_cliente.codigo_cliente}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_cliente.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.bairro\">Bairro</span></dt>\n        <dd>\n            <span>{{tbc_cliente.bairro}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.bloquear\">Bloquear</span></dt>\n        <dd>\n            <span>{{tbc_cliente.bloquear}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_cliente.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_cliente.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_cliente.tbc_instituicao?.id]\">{{tbc_cliente.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_cliente.tbc_grupo_cliente\">Tbc Grupo Cliente</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_cliente.tbc_grupo_cliente\">\n                <a [routerLink]=\"['/tbc-grupo-cliente', tbc_cliente.tbc_grupo_cliente?.id]\">{{tbc_cliente.tbc_grupo_cliente?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-cliente/'+ tbc_cliente.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.service.ts");
var Tbc_clienteDetailComponent = (function () {
    function Tbc_clienteDetailComponent(jhiLanguageService, dataUtils, tbc_clienteService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.tbc_clienteService = tbc_clienteService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_cliente']);
    }
    Tbc_clienteDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_clienteDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_clienteService.find(id).subscribe(function (tbc_cliente) {
            _this.tbc_cliente = tbc_cliente;
        });
    };
    Tbc_clienteDetailComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_clienteDetailComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_clienteDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_clienteDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_clienteDetailComponent;
}());
Tbc_clienteDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-cliente-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        tbc_cliente_service_1.Tbc_clienteService,
        router_1.ActivatedRoute])
], Tbc_clienteDetailComponent);
exports.Tbc_clienteDetailComponent = Tbc_clienteDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_clienteLabel\" jhiTranslate=\"limsApp.tbc_cliente.home.createOrEditLabel\">Create or edit a Tbc Cliente</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_cliente.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_cliente.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_cliente.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.cep\" for=\"field_cep\">Cep</label>\n            <input type=\"text\" class=\"form-control\" name=\"cep\" id=\"field_cep\"\n                [(ngModel)]=\"tbc_cliente.cep\"\n            required />\n            <div [hidden]=\"!(editForm.controls.cep?.dirty && editForm.controls.cep?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.cep?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.endereco\" for=\"field_endereco\">Endereco</label>\n            <textarea class=\"form-control\" name=\"endereco\" id=\"field_endereco\"\n                [(ngModel)]=\"tbc_cliente.endereco\" required ></textarea>\n            <div [hidden]=\"!(editForm.controls.endereco?.dirty && editForm.controls.endereco?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.endereco?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.email\" for=\"field_email\">Email</label>\n            <textarea class=\"form-control\" name=\"email\" id=\"field_email\"\n                [(ngModel)]=\"tbc_cliente.email\"  ></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.imprimir\" for=\"field_imprimir\">Imprimir</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"imprimir\" id=\"field_imprimir\"\n                [(ngModel)]=\"tbc_cliente.imprimir\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.enviar_email\" for=\"field_enviar_email\">Enviar Email</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"enviar_email\" id=\"field_enviar_email\"\n                [(ngModel)]=\"tbc_cliente.enviar_email\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.directiva_data_atu\" for=\"field_directiva_data_atu\">Directiva Data Atu</label>\n            <div class=\"input-group\">\n                <input id=\"field_directiva_data_atu\" type=\"datetime-local\" class=\"form-control\" name=\"directiva_data_atu\" [(ngModel)]=\"tbc_cliente.directiva_data_atu\"\n                  />\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.cpf_cnpj\" for=\"field_cpf_cnpj\">Cpf Cnpj</label>\n            <input type=\"text\" class=\"form-control\" name=\"cpf_cnpj\" id=\"field_cpf_cnpj\"\n                [(ngModel)]=\"tbc_cliente.cpf_cnpj\"\n            required />\n            <div [hidden]=\"!(editForm.controls.cpf_cnpj?.dirty && editForm.controls.cpf_cnpj?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.cpf_cnpj?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.codigo_cliente\" for=\"field_codigo_cliente\">Codigo Cliente</label>\n            <input type=\"text\" class=\"form-control\" name=\"codigo_cliente\" id=\"field_codigo_cliente\"\n                [(ngModel)]=\"tbc_cliente.codigo_cliente\"\n            required />\n            <div [hidden]=\"!(editForm.controls.codigo_cliente?.dirty && editForm.controls.codigo_cliente?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.codigo_cliente?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_cliente.removido\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.bairro\" for=\"field_bairro\">Bairro</label>\n            <input type=\"text\" class=\"form-control\" name=\"bairro\" id=\"field_bairro\"\n                [(ngModel)]=\"tbc_cliente.bairro\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.bloquear\" for=\"field_bloquear\">Bloquear</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"bloquear\" id=\"field_bloquear\"\n                [(ngModel)]=\"tbc_cliente.bloquear\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_cliente.descricao\" for=\"field_descricao\">Descricao</label>\n            <textarea class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_cliente.descricao\"  ></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_cliente.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_cliente.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_cliente.tbc_instituicao?.id ? tbc_cliente.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_cliente.tbc_grupo_cliente\" for=\"field_tbc_grupo_cliente\">Tbc Grupo Cliente</label>\n            <select class=\"form-control\" id=\"field_tbc_grupo_cliente\" name=\"tbc_grupo_cliente\" [(ngModel)]=\"tbc_cliente.tbc_grupo_cliente\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_grupo_clienteOption.id === tbc_cliente.tbc_grupo_cliente?.id ? tbc_cliente.tbc_grupo_cliente : tbc_grupo_clienteOption\" *ngFor=\"let tbc_grupo_clienteOption of tbc_grupo_clientes; trackBy: trackTbc_grupo_clienteById\">{{tbc_grupo_clienteOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_grupo_cliente?.dirty && editForm.controls.tbc_grupo_cliente?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_grupo_cliente?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_cliente_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-popup.service.ts");
var tbc_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var tbc_grupo_cliente_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/index.ts");
var Tbc_clienteDialogComponent = (function () {
    function Tbc_clienteDialogComponent(activeModal, jhiLanguageService, dataUtils, alertService, tbc_clienteService, tbc_instituicaoService, tbc_grupo_clienteService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.alertService = alertService;
        this.tbc_clienteService = tbc_clienteService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.tbc_grupo_clienteService = tbc_grupo_clienteService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_cliente']);
    }
    Tbc_clienteDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_grupo_clienteService.query().subscribe(function (res) { _this.tbc_grupo_clientes = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_clienteDialogComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_clienteDialogComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_clienteDialogComponent.prototype.setFileData = function ($event, tbc_cliente, field, isImage) {
        if ($event.target.files && $event.target.files[0]) {
            var $file_1 = $event.target.files[0];
            if (isImage && !/^image\//.test($file_1.type)) {
                return;
            }
            this.dataUtils.toBase64($file_1, function (base64Data) {
                tbc_cliente[field] = base64Data;
                tbc_cliente[field + "ContentType"] = $file_1.type;
            });
        }
    };
    Tbc_clienteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_clienteDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_cliente.id !== undefined) {
            this.tbc_clienteService.update(this.tbc_cliente)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_clienteService.create(this.tbc_cliente)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_clienteDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_clienteListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_clienteDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_clienteDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_clienteDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    Tbc_clienteDialogComponent.prototype.trackTbc_grupo_clienteById = function (index, item) {
        return item.id;
    };
    return Tbc_clienteDialogComponent;
}());
Tbc_clienteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-cliente-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        ng_jhipster_1.AlertService,
        tbc_cliente_service_1.Tbc_clienteService,
        tbc_instituicao_1.Tbc_instituicaoService,
        tbc_grupo_cliente_1.Tbc_grupo_clienteService,
        ng_jhipster_1.EventManager])
], Tbc_clienteDialogComponent);
exports.Tbc_clienteDialogComponent = Tbc_clienteDialogComponent;
var Tbc_clientePopupComponent = (function () {
    function Tbc_clientePopupComponent(route, tbc_clientePopupService) {
        this.route = route;
        this.tbc_clientePopupService = tbc_clientePopupService;
    }
    Tbc_clientePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_clientePopupService
                    .open(Tbc_clienteDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_clientePopupService
                    .open(Tbc_clienteDialogComponent);
            }
        });
    };
    Tbc_clientePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_clientePopupComponent;
}());
Tbc_clientePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-cliente-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_cliente_popup_service_1.Tbc_clientePopupService])
], Tbc_clientePopupComponent);
exports.Tbc_clientePopupComponent = Tbc_clientePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var common_1 = __webpack_require__(6);
var tbc_cliente_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.model.ts");
var tbc_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.service.ts");
var Tbc_clientePopupService = (function () {
    function Tbc_clientePopupService(datePipe, modalService, router, tbc_clienteService) {
        this.datePipe = datePipe;
        this.modalService = modalService;
        this.router = router;
        this.tbc_clienteService = tbc_clienteService;
        this.isOpen = false;
    }
    Tbc_clientePopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_clienteService.find(id).subscribe(function (tbc_cliente) {
                tbc_cliente.directiva_data_atu = _this.datePipe.transform(tbc_cliente.directiva_data_atu, 'yyyy-MM-ddThh:mm');
                _this.tbc_clienteModalRef(component, tbc_cliente);
            });
        }
        else {
            return this.tbc_clienteModalRef(component, new tbc_cliente_model_1.Tbc_cliente());
        }
    };
    Tbc_clientePopupService.prototype.tbc_clienteModalRef = function (component, tbc_cliente) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_cliente = tbc_cliente;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_clientePopupService;
}());
Tbc_clientePopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [common_1.DatePipe,
        ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_cliente_service_1.Tbc_clienteService])
], Tbc_clientePopupService);
exports.Tbc_clientePopupService = Tbc_clientePopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_cliente.home.title\">Tbc Clientes</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-cliente\" [routerLink]=\"['/', { outlets: { popup: ['tbc-cliente-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_cliente.home.createLabel\">\n            Create new Tbc Cliente\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_cliente.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_clientes\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_cliente.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"cep\"><span jhiTranslate=\"limsApp.tbc_cliente.cep\">Cep</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"endereco\"><span jhiTranslate=\"limsApp.tbc_cliente.endereco\">Endereco</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"email\"><span jhiTranslate=\"limsApp.tbc_cliente.email\">Email</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"imprimir\"><span jhiTranslate=\"limsApp.tbc_cliente.imprimir\">Imprimir</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"enviar_email\"><span jhiTranslate=\"limsApp.tbc_cliente.enviar_email\">Enviar Email</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"directiva_data_atu\"><span jhiTranslate=\"limsApp.tbc_cliente.directiva_data_atu\">Directiva Data Atu</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"cpf_cnpj\"><span jhiTranslate=\"limsApp.tbc_cliente.cpf_cnpj\">Cpf Cnpj</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"codigo_cliente\"><span jhiTranslate=\"limsApp.tbc_cliente.codigo_cliente\">Codigo Cliente</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_cliente.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"bairro\"><span jhiTranslate=\"limsApp.tbc_cliente.bairro\">Bairro</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"bloquear\"><span jhiTranslate=\"limsApp.tbc_cliente.bloquear\">Bloquear</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_cliente.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_cliente.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_grupo_cliente.id\"><span jhiTranslate=\"limsApp.tbc_cliente.tbc_grupo_cliente\">Tbc Grupo Cliente</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_cliente of tbc_clientes ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-cliente', tbc_cliente.id ]\">{{tbc_cliente.id}}</a></td>\n                <td>{{tbc_cliente.nome}}</td>\n                <td>{{tbc_cliente.cep}}</td>\n                <td>{{tbc_cliente.endereco}}</td>\n                <td>{{tbc_cliente.email}}</td>\n                <td>{{tbc_cliente.imprimir}}</td>\n                <td>{{tbc_cliente.enviar_email}}</td>\n                <td>{{tbc_cliente.directiva_data_atu | date:'medium'}}</td>\n                <td>{{tbc_cliente.cpf_cnpj}}</td>\n                <td>{{tbc_cliente.codigo_cliente}}</td>\n                <td>{{tbc_cliente.removido}}</td>\n                <td>{{tbc_cliente.bairro}}</td>\n                <td>{{tbc_cliente.bloquear}}</td>\n                <td>{{tbc_cliente.descricao}}</td>\n                <td>\n                    <div *ngIf=\"tbc_cliente.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_cliente.tbc_instituicao?.id ]\" >{{tbc_cliente.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_cliente.tbc_grupo_cliente\">\n                        <a [routerLink]=\"['../tbc-grupo-cliente', tbc_cliente.tbc_grupo_cliente?.id ]\" >{{tbc_cliente.tbc_grupo_cliente?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-cliente', tbc_cliente.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-cliente/'+ tbc_cliente.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-cliente/'+ tbc_cliente.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_clientes && tbc_clientes.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_clienteComponent = (function () {
    function Tbc_clienteComponent(jhiLanguageService, tbc_clienteService, parseLinks, alertService, principal, activatedRoute, dataUtils, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_clienteService = tbc_clienteService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.dataUtils = dataUtils;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_cliente']);
    }
    Tbc_clienteComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_clienteService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_clienteService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_clienteComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_clienteComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-cliente'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_clienteComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-cliente', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_clienteComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-cliente', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_clienteComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_clientes();
    };
    Tbc_clienteComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_clienteComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_clienteComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_clienteComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_clienteComponent.prototype.registerChangeInTbc_clientes = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_clienteListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_clienteComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_clienteComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_clientes = data;
    };
    Tbc_clienteComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_clienteComponent;
}());
Tbc_clienteComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-cliente',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_cliente_service_1.Tbc_clienteService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        ng_jhipster_1.DataUtils,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_clienteComponent);
exports.Tbc_clienteComponent = Tbc_clienteComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_cliente = (function () {
    function Tbc_cliente(id, nome, cep, endereco, email, imprimir, enviar_email, directiva_data_atu, cpf_cnpj, codigo_cliente, removido, bairro, bloquear, descricao, tbc_instituicao, tbc_grupo_cliente) {
        this.id = id;
        this.nome = nome;
        this.cep = cep;
        this.endereco = endereco;
        this.email = email;
        this.imprimir = imprimir;
        this.enviar_email = enviar_email;
        this.directiva_data_atu = directiva_data_atu;
        this.cpf_cnpj = cpf_cnpj;
        this.codigo_cliente = codigo_cliente;
        this.removido = removido;
        this.bairro = bairro;
        this.bloquear = bloquear;
        this.descricao = descricao;
        this.tbc_instituicao = tbc_instituicao;
        this.tbc_grupo_cliente = tbc_grupo_cliente;
    }
    return Tbc_cliente;
}());
exports.Tbc_cliente = Tbc_cliente;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/index.ts");
var ENTITY_STATES = _1.tbc_clienteRoute.concat(_1.tbc_clientePopupRoute);
var LimsTbc_clienteModule = (function () {
    function LimsTbc_clienteModule() {
    }
    return LimsTbc_clienteModule;
}());
LimsTbc_clienteModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_clienteComponent,
            _1.Tbc_clienteDetailComponent,
            _1.Tbc_clienteDialogComponent,
            _1.Tbc_clienteDeleteDialogComponent,
            _1.Tbc_clientePopupComponent,
            _1.Tbc_clienteDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_clienteComponent,
            _1.Tbc_clienteDialogComponent,
            _1.Tbc_clientePopupComponent,
            _1.Tbc_clienteDeleteDialogComponent,
            _1.Tbc_clienteDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_clienteService,
            _1.Tbc_clientePopupService,
            _1.Tbc_clienteResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_clienteModule);
exports.LimsTbc_clienteModule = LimsTbc_clienteModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_cliente_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.component.ts");
var tbc_cliente_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-detail.component.ts");
var tbc_cliente_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-dialog.component.ts");
var tbc_cliente_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-cliente/tbc-cliente-delete-dialog.component.ts");
var Tbc_clienteResolvePagingParams = (function () {
    function Tbc_clienteResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_clienteResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_clienteResolvePagingParams;
}());
Tbc_clienteResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_clienteResolvePagingParams);
exports.Tbc_clienteResolvePagingParams = Tbc_clienteResolvePagingParams;
exports.tbc_clienteRoute = [
    {
        path: 'tbc-cliente',
        component: tbc_cliente_component_1.Tbc_clienteComponent,
        resolve: {
            'pagingParams': Tbc_clienteResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_cliente.home.title'
        }
    }, {
        path: 'tbc-cliente/:id',
        component: tbc_cliente_detail_component_1.Tbc_clienteDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_cliente.home.title'
        }
    }
];
exports.tbc_clientePopupRoute = [
    {
        path: 'tbc-cliente-new',
        component: tbc_cliente_dialog_component_1.Tbc_clientePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_cliente.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-cliente/:id/edit',
        component: tbc_cliente_dialog_component_1.Tbc_clientePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_cliente.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-cliente/:id/delete',
        component: tbc_cliente_delete_dialog_component_1.Tbc_clienteDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_cliente.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-cliente/tbc-cliente.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var ng_jhipster_1 = __webpack_require__(2);
var Tbc_clienteService = (function () {
    function Tbc_clienteService(http, dateUtils) {
        this.http = http;
        this.dateUtils = dateUtils;
        this.resourceUrl = 'api/tbc-clientes';
        this.resourceSearchUrl = 'api/_search/tbc-clientes';
    }
    Tbc_clienteService.prototype.create = function (tbc_cliente) {
        var copy = Object.assign({}, tbc_cliente);
        copy.directiva_data_atu = this.dateUtils.toDate(tbc_cliente.directiva_data_atu);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_clienteService.prototype.update = function (tbc_cliente) {
        var copy = Object.assign({}, tbc_cliente);
        copy.directiva_data_atu = this.dateUtils.toDate(tbc_cliente.directiva_data_atu);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_clienteService.prototype.find = function (id) {
        var _this = this;
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            var jsonResponse = res.json();
            jsonResponse.directiva_data_atu = _this.dateUtils
                .convertDateTimeFromServer(jsonResponse.directiva_data_atu);
            return jsonResponse;
        });
    };
    Tbc_clienteService.prototype.query = function (req) {
        var _this = this;
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options)
            .map(function (res) { return _this.convertResponse(res); });
    };
    Tbc_clienteService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_clienteService.prototype.search = function (req) {
        var _this = this;
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options)
            .map(function (res) { return _this.convertResponse(res); });
    };
    Tbc_clienteService.prototype.convertResponse = function (res) {
        var jsonResponse = res.json();
        for (var i = 0; i < jsonResponse.length; i++) {
            jsonResponse[i].directiva_data_atu = this.dateUtils
                .convertDateTimeFromServer(jsonResponse[i].directiva_data_atu);
        }
        res._body = jsonResponse;
        return res;
    };
    Tbc_clienteService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_clienteService;
}());
Tbc_clienteService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http, ng_jhipster_1.DateUtils])
], Tbc_clienteService);
exports.Tbc_clienteService = Tbc_clienteService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_formulario.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_formulario.delete.question\" translateValues=\"{id: '{{tbc_formulario.id}}'}\">Are you sure you want to delete this Tbc Formulario?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_formulario_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-popup.service.ts");
var tbc_formulario_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.service.ts");
var Tbc_formularioDeleteDialogComponent = (function () {
    function Tbc_formularioDeleteDialogComponent(jhiLanguageService, tbc_formularioService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_formularioService = tbc_formularioService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_formulario']);
    }
    Tbc_formularioDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_formularioDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_formularioService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_formularioListModification',
                content: 'Deleted an tbc_formulario'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_formularioDeleteDialogComponent;
}());
Tbc_formularioDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-formulario-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_formulario_service_1.Tbc_formularioService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_formularioDeleteDialogComponent);
exports.Tbc_formularioDeleteDialogComponent = Tbc_formularioDeleteDialogComponent;
var Tbc_formularioDeletePopupComponent = (function () {
    function Tbc_formularioDeletePopupComponent(route, tbc_formularioPopupService) {
        this.route = route;
        this.tbc_formularioPopupService = tbc_formularioPopupService;
    }
    Tbc_formularioDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_formularioPopupService
                .open(Tbc_formularioDeleteDialogComponent, params['id']);
        });
    };
    Tbc_formularioDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_formularioDeletePopupComponent;
}());
Tbc_formularioDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-formulario-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_formulario_popup_service_1.Tbc_formularioPopupService])
], Tbc_formularioDeletePopupComponent);
exports.Tbc_formularioDeletePopupComponent = Tbc_formularioDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_formulario\">\n    <h2><span jhiTranslate=\"limsApp.tbc_formulario.detail.title\">Tbc Formulario</span> {{tbc_formulario.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_formulario.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_formulario.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_formulario.metodo\">Metodo</span></dt>\n        <dd>\n            <span>{{tbc_formulario.metodo}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_formulario.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_formulario.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_formulario.diasliberacao\">Diasliberacao</span></dt>\n        <dd>\n            <span>{{tbc_formulario.diasliberacao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_formulario.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_formulario.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_formulario.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_formulario.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_formulario.tbc_instituicao?.id]\">{{tbc_formulario.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_formulario.tbc_sub_grupo\">Tbc Sub Grupo</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_formulario.tbc_sub_grupo\">\n                <a [routerLink]=\"['/tbc-sub-grupo', tbc_formulario.tbc_sub_grupo?.id]\">{{tbc_formulario.tbc_sub_grupo?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_formulario.tbc_grupo_analise\">Tbc Grupo Analise</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_formulario.tbc_grupo_analise\">\n                <a [routerLink]=\"['/tbc-grupo-analise', tbc_formulario.tbc_grupo_analise?.id]\">{{tbc_formulario.tbc_grupo_analise?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_formulario.tbc_tipo_cadastro\">Tbc Tipo Cadastro</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_formulario.tbc_tipo_cadastro\">\n                <a [routerLink]=\"['/tbc-tipo-cadastro', tbc_formulario.tbc_tipo_cadastro?.id]\">{{tbc_formulario.tbc_tipo_cadastro?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-formulario/'+ tbc_formulario.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_formulario_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.service.ts");
var Tbc_formularioDetailComponent = (function () {
    function Tbc_formularioDetailComponent(jhiLanguageService, tbc_formularioService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_formularioService = tbc_formularioService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_formulario']);
    }
    Tbc_formularioDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_formularioDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_formularioService.find(id).subscribe(function (tbc_formulario) {
            _this.tbc_formulario = tbc_formulario;
        });
    };
    Tbc_formularioDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_formularioDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_formularioDetailComponent;
}());
Tbc_formularioDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-formulario-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_formulario_service_1.Tbc_formularioService,
        router_1.ActivatedRoute])
], Tbc_formularioDetailComponent);
exports.Tbc_formularioDetailComponent = Tbc_formularioDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_formularioLabel\" jhiTranslate=\"limsApp.tbc_formulario.home.createOrEditLabel\">Create or edit a Tbc Formulario</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_formulario.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_formulario.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_formulario.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_formulario.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_formulario.metodo\" for=\"field_metodo\">Metodo</label>\n            <input type=\"text\" class=\"form-control\" name=\"metodo\" id=\"field_metodo\"\n                [(ngModel)]=\"tbc_formulario.metodo\"\n            required />\n            <div [hidden]=\"!(editForm.controls.metodo?.dirty && editForm.controls.metodo?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.metodo?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_formulario.descricao\" for=\"field_descricao\">Descricao</label>\n            <input type=\"text\" class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_formulario.descricao\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_formulario.diasliberacao\" for=\"field_diasliberacao\">Diasliberacao</label>\n            <input type=\"number\" class=\"form-control\" name=\"diasliberacao\" id=\"field_diasliberacao\"\n                [(ngModel)]=\"tbc_formulario.diasliberacao\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_formulario.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_formulario.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_formulario.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_formulario.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_formulario.tbc_instituicao?.id ? tbc_formulario.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_formulario.tbc_sub_grupo\" for=\"field_tbc_sub_grupo\">Tbc Sub Grupo</label>\n            <select class=\"form-control\" id=\"field_tbc_sub_grupo\" name=\"tbc_sub_grupo\" [(ngModel)]=\"tbc_formulario.tbc_sub_grupo\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_sub_grupoOption.id === tbc_formulario.tbc_sub_grupo?.id ? tbc_formulario.tbc_sub_grupo : tbc_sub_grupoOption\" *ngFor=\"let tbc_sub_grupoOption of tbc_sub_grupos; trackBy: trackTbc_sub_grupoById\">{{tbc_sub_grupoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_sub_grupo?.dirty && editForm.controls.tbc_sub_grupo?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_sub_grupo?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_formulario.tbc_grupo_analise\" for=\"field_tbc_grupo_analise\">Tbc Grupo Analise</label>\n            <select class=\"form-control\" id=\"field_tbc_grupo_analise\" name=\"tbc_grupo_analise\" [(ngModel)]=\"tbc_formulario.tbc_grupo_analise\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_grupo_analiseOption.id === tbc_formulario.tbc_grupo_analise?.id ? tbc_formulario.tbc_grupo_analise : tbc_grupo_analiseOption\" *ngFor=\"let tbc_grupo_analiseOption of tbc_grupo_analises; trackBy: trackTbc_grupo_analiseById\">{{tbc_grupo_analiseOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_grupo_analise?.dirty && editForm.controls.tbc_grupo_analise?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_grupo_analise?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_formulario.tbc_tipo_cadastro\" for=\"field_tbc_tipo_cadastro\">Tbc Tipo Cadastro</label>\n            <select class=\"form-control\" id=\"field_tbc_tipo_cadastro\" name=\"tbc_tipo_cadastro\" [(ngModel)]=\"tbc_formulario.tbc_tipo_cadastro\" >\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_tipo_cadastroOption.id === tbc_formulario.tbc_tipo_cadastro?.id ? tbc_formulario.tbc_tipo_cadastro : tbc_tipo_cadastroOption\" *ngFor=\"let tbc_tipo_cadastroOption of tbc_tipo_cadastros; trackBy: trackTbc_tipo_cadastroById\">{{tbc_tipo_cadastroOption.id}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_formulario_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-popup.service.ts");
var tbc_formulario_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var tbc_sub_grupo_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/index.ts");
var tbc_grupo_analise_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/index.ts");
var tbc_tipo_cadastro_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/index.ts");
var Tbc_formularioDialogComponent = (function () {
    function Tbc_formularioDialogComponent(activeModal, jhiLanguageService, alertService, tbc_formularioService, tbc_instituicaoService, tbc_sub_grupoService, tbc_grupo_analiseService, tbc_tipo_cadastroService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.alertService = alertService;
        this.tbc_formularioService = tbc_formularioService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.tbc_sub_grupoService = tbc_sub_grupoService;
        this.tbc_grupo_analiseService = tbc_grupo_analiseService;
        this.tbc_tipo_cadastroService = tbc_tipo_cadastroService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_formulario']);
    }
    Tbc_formularioDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_sub_grupoService.query().subscribe(function (res) { _this.tbc_sub_grupos = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_grupo_analiseService.query().subscribe(function (res) { _this.tbc_grupo_analises = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_tipo_cadastroService.query().subscribe(function (res) { _this.tbc_tipo_cadastros = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_formularioDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_formularioDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_formulario.id !== undefined) {
            this.tbc_formularioService.update(this.tbc_formulario)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_formularioService.create(this.tbc_formulario)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_formularioDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_formularioListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_formularioDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_formularioDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_formularioDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    Tbc_formularioDialogComponent.prototype.trackTbc_sub_grupoById = function (index, item) {
        return item.id;
    };
    Tbc_formularioDialogComponent.prototype.trackTbc_grupo_analiseById = function (index, item) {
        return item.id;
    };
    Tbc_formularioDialogComponent.prototype.trackTbc_tipo_cadastroById = function (index, item) {
        return item.id;
    };
    return Tbc_formularioDialogComponent;
}());
Tbc_formularioDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-formulario-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.AlertService,
        tbc_formulario_service_1.Tbc_formularioService,
        tbc_instituicao_1.Tbc_instituicaoService,
        tbc_sub_grupo_1.Tbc_sub_grupoService,
        tbc_grupo_analise_1.Tbc_grupo_analiseService,
        tbc_tipo_cadastro_1.Tbc_tipo_cadastroService,
        ng_jhipster_1.EventManager])
], Tbc_formularioDialogComponent);
exports.Tbc_formularioDialogComponent = Tbc_formularioDialogComponent;
var Tbc_formularioPopupComponent = (function () {
    function Tbc_formularioPopupComponent(route, tbc_formularioPopupService) {
        this.route = route;
        this.tbc_formularioPopupService = tbc_formularioPopupService;
    }
    Tbc_formularioPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_formularioPopupService
                    .open(Tbc_formularioDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_formularioPopupService
                    .open(Tbc_formularioDialogComponent);
            }
        });
    };
    Tbc_formularioPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_formularioPopupComponent;
}());
Tbc_formularioPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-formulario-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_formulario_popup_service_1.Tbc_formularioPopupService])
], Tbc_formularioPopupComponent);
exports.Tbc_formularioPopupComponent = Tbc_formularioPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_formulario_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.model.ts");
var tbc_formulario_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.service.ts");
var Tbc_formularioPopupService = (function () {
    function Tbc_formularioPopupService(modalService, router, tbc_formularioService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_formularioService = tbc_formularioService;
        this.isOpen = false;
    }
    Tbc_formularioPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_formularioService.find(id).subscribe(function (tbc_formulario) {
                _this.tbc_formularioModalRef(component, tbc_formulario);
            });
        }
        else {
            return this.tbc_formularioModalRef(component, new tbc_formulario_model_1.Tbc_formulario());
        }
    };
    Tbc_formularioPopupService.prototype.tbc_formularioModalRef = function (component, tbc_formulario) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_formulario = tbc_formulario;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_formularioPopupService;
}());
Tbc_formularioPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_formulario_service_1.Tbc_formularioService])
], Tbc_formularioPopupService);
exports.Tbc_formularioPopupService = Tbc_formularioPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_formulario.home.title\">Tbc Formularios</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-formulario\" [routerLink]=\"['/', { outlets: { popup: ['tbc-formulario-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_formulario.home.createLabel\">\n            Create new Tbc Formulario\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_formulario.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_formularios\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_formulario.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"metodo\"><span jhiTranslate=\"limsApp.tbc_formulario.metodo\">Metodo</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_formulario.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"diasliberacao\"><span jhiTranslate=\"limsApp.tbc_formulario.diasliberacao\">Diasliberacao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_formulario.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_formulario.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_sub_grupo.id\"><span jhiTranslate=\"limsApp.tbc_formulario.tbc_sub_grupo\">Tbc Sub Grupo</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_grupo_analise.id\"><span jhiTranslate=\"limsApp.tbc_formulario.tbc_grupo_analise\">Tbc Grupo Analise</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_tipo_cadastro.id\"><span jhiTranslate=\"limsApp.tbc_formulario.tbc_tipo_cadastro\">Tbc Tipo Cadastro</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_formulario of tbc_formularios ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-formulario', tbc_formulario.id ]\">{{tbc_formulario.id}}</a></td>\n                <td>{{tbc_formulario.nome}}</td>\n                <td>{{tbc_formulario.metodo}}</td>\n                <td>{{tbc_formulario.descricao}}</td>\n                <td>{{tbc_formulario.diasliberacao}}</td>\n                <td>{{tbc_formulario.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_formulario.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_formulario.tbc_instituicao?.id ]\" >{{tbc_formulario.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_formulario.tbc_sub_grupo\">\n                        <a [routerLink]=\"['../tbc-sub-grupo', tbc_formulario.tbc_sub_grupo?.id ]\" >{{tbc_formulario.tbc_sub_grupo?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_formulario.tbc_grupo_analise\">\n                        <a [routerLink]=\"['../tbc-grupo-analise', tbc_formulario.tbc_grupo_analise?.id ]\" >{{tbc_formulario.tbc_grupo_analise?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_formulario.tbc_tipo_cadastro\">\n                        <a [routerLink]=\"['../tbc-tipo-cadastro', tbc_formulario.tbc_tipo_cadastro?.id ]\" >{{tbc_formulario.tbc_tipo_cadastro?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-formulario', tbc_formulario.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-formulario/'+ tbc_formulario.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-formulario/'+ tbc_formulario.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_formularios && tbc_formularios.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_formulario_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_formularioComponent = (function () {
    function Tbc_formularioComponent(jhiLanguageService, tbc_formularioService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_formularioService = tbc_formularioService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_formulario']);
    }
    Tbc_formularioComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_formularioService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_formularioService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_formularioComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_formularioComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-formulario'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_formularioComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-formulario', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_formularioComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-formulario', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_formularioComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_formularios();
    };
    Tbc_formularioComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_formularioComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_formularioComponent.prototype.registerChangeInTbc_formularios = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_formularioListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_formularioComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_formularioComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_formularios = data;
    };
    Tbc_formularioComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_formularioComponent;
}());
Tbc_formularioComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-formulario',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_formulario_service_1.Tbc_formularioService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_formularioComponent);
exports.Tbc_formularioComponent = Tbc_formularioComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_formulario = (function () {
    function Tbc_formulario(id, nome, metodo, descricao, diasliberacao, removido, tbc_instituicao, tbc_sub_grupo, tbc_grupo_analise, tbc_tipo_cadastro) {
        this.id = id;
        this.nome = nome;
        this.metodo = metodo;
        this.descricao = descricao;
        this.diasliberacao = diasliberacao;
        this.removido = removido;
        this.tbc_instituicao = tbc_instituicao;
        this.tbc_sub_grupo = tbc_sub_grupo;
        this.tbc_grupo_analise = tbc_grupo_analise;
        this.tbc_tipo_cadastro = tbc_tipo_cadastro;
    }
    return Tbc_formulario;
}());
exports.Tbc_formulario = Tbc_formulario;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/index.ts");
var ENTITY_STATES = _1.tbc_formularioRoute.concat(_1.tbc_formularioPopupRoute);
var LimsTbc_formularioModule = (function () {
    function LimsTbc_formularioModule() {
    }
    return LimsTbc_formularioModule;
}());
LimsTbc_formularioModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_formularioComponent,
            _1.Tbc_formularioDetailComponent,
            _1.Tbc_formularioDialogComponent,
            _1.Tbc_formularioDeleteDialogComponent,
            _1.Tbc_formularioPopupComponent,
            _1.Tbc_formularioDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_formularioComponent,
            _1.Tbc_formularioDialogComponent,
            _1.Tbc_formularioPopupComponent,
            _1.Tbc_formularioDeleteDialogComponent,
            _1.Tbc_formularioDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_formularioService,
            _1.Tbc_formularioPopupService,
            _1.Tbc_formularioResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_formularioModule);
exports.LimsTbc_formularioModule = LimsTbc_formularioModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_formulario_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.component.ts");
var tbc_formulario_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-detail.component.ts");
var tbc_formulario_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-dialog.component.ts");
var tbc_formulario_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-formulario/tbc-formulario-delete-dialog.component.ts");
var Tbc_formularioResolvePagingParams = (function () {
    function Tbc_formularioResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_formularioResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_formularioResolvePagingParams;
}());
Tbc_formularioResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_formularioResolvePagingParams);
exports.Tbc_formularioResolvePagingParams = Tbc_formularioResolvePagingParams;
exports.tbc_formularioRoute = [
    {
        path: 'tbc-formulario',
        component: tbc_formulario_component_1.Tbc_formularioComponent,
        resolve: {
            'pagingParams': Tbc_formularioResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_formulario.home.title'
        }
    }, {
        path: 'tbc-formulario/:id',
        component: tbc_formulario_detail_component_1.Tbc_formularioDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_formulario.home.title'
        }
    }
];
exports.tbc_formularioPopupRoute = [
    {
        path: 'tbc-formulario-new',
        component: tbc_formulario_dialog_component_1.Tbc_formularioPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_formulario.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-formulario/:id/edit',
        component: tbc_formulario_dialog_component_1.Tbc_formularioPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_formulario.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-formulario/:id/delete',
        component: tbc_formulario_delete_dialog_component_1.Tbc_formularioDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_formulario.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-formulario/tbc-formulario.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_formularioService = (function () {
    function Tbc_formularioService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-formularios';
        this.resourceSearchUrl = 'api/_search/tbc-formularios';
    }
    Tbc_formularioService.prototype.create = function (tbc_formulario) {
        var copy = Object.assign({}, tbc_formulario);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_formularioService.prototype.update = function (tbc_formulario) {
        var copy = Object.assign({}, tbc_formulario);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_formularioService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_formularioService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_formularioService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_formularioService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_formularioService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_formularioService;
}());
Tbc_formularioService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_formularioService);
exports.Tbc_formularioService = Tbc_formularioService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_frases_opcoes.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_frases_opcoes.delete.question\" translateValues=\"{id: '{{tbc_frases_opcoes.id}}'}\">Are you sure you want to delete this Tbc Frases Opcoes?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_opcoes_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-popup.service.ts");
var tbc_frases_opcoes_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.service.ts");
var Tbc_frases_opcoesDeleteDialogComponent = (function () {
    function Tbc_frases_opcoesDeleteDialogComponent(jhiLanguageService, tbc_frases_opcoesService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_frases_opcoesService = tbc_frases_opcoesService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_frases_opcoes']);
    }
    Tbc_frases_opcoesDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_frases_opcoesDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_frases_opcoesService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_frases_opcoesListModification',
                content: 'Deleted an tbc_frases_opcoes'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_frases_opcoesDeleteDialogComponent;
}());
Tbc_frases_opcoesDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-opcoes-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_frases_opcoes_service_1.Tbc_frases_opcoesService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_frases_opcoesDeleteDialogComponent);
exports.Tbc_frases_opcoesDeleteDialogComponent = Tbc_frases_opcoesDeleteDialogComponent;
var Tbc_frases_opcoesDeletePopupComponent = (function () {
    function Tbc_frases_opcoesDeletePopupComponent(route, tbc_frases_opcoesPopupService) {
        this.route = route;
        this.tbc_frases_opcoesPopupService = tbc_frases_opcoesPopupService;
    }
    Tbc_frases_opcoesDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_frases_opcoesPopupService
                .open(Tbc_frases_opcoesDeleteDialogComponent, params['id']);
        });
    };
    Tbc_frases_opcoesDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_frases_opcoesDeletePopupComponent;
}());
Tbc_frases_opcoesDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-opcoes-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_frases_opcoes_popup_service_1.Tbc_frases_opcoesPopupService])
], Tbc_frases_opcoesDeletePopupComponent);
exports.Tbc_frases_opcoesDeletePopupComponent = Tbc_frases_opcoesDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_frases_opcoes\">\n    <h2><span jhiTranslate=\"limsApp.tbc_frases_opcoes.detail.title\">Tbc Frases Opcoes</span> {{tbc_frases_opcoes.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_frases_opcoes.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_frases_opcoes.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_frases_opcoes.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_frases_opcoes.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_frases_opcoes.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_frases_opcoes.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_frases_opcoes.tbc_frases\">Tbc Frases</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_frases_opcoes.tbc_frases\">\n                <a [routerLink]=\"['/tbc-frases', tbc_frases_opcoes.tbc_frases?.id]\">{{tbc_frases_opcoes.tbc_frases?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-frases-opcoes/'+ tbc_frases_opcoes.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_opcoes_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.service.ts");
var Tbc_frases_opcoesDetailComponent = (function () {
    function Tbc_frases_opcoesDetailComponent(jhiLanguageService, tbc_frases_opcoesService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_frases_opcoesService = tbc_frases_opcoesService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_frases_opcoes']);
    }
    Tbc_frases_opcoesDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_frases_opcoesDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_frases_opcoesService.find(id).subscribe(function (tbc_frases_opcoes) {
            _this.tbc_frases_opcoes = tbc_frases_opcoes;
        });
    };
    Tbc_frases_opcoesDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_frases_opcoesDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_frases_opcoesDetailComponent;
}());
Tbc_frases_opcoesDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-opcoes-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_frases_opcoes_service_1.Tbc_frases_opcoesService,
        router_1.ActivatedRoute])
], Tbc_frases_opcoesDetailComponent);
exports.Tbc_frases_opcoesDetailComponent = Tbc_frases_opcoesDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_frases_opcoesLabel\" jhiTranslate=\"limsApp.tbc_frases_opcoes.home.createOrEditLabel\">Create or edit a Tbc Frases Opcoes</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_frases_opcoes.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_frases_opcoes.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_frases_opcoes.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_frases_opcoes.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_frases_opcoes.descricao\" for=\"field_descricao\">Descricao</label>\n            <input type=\"text\" class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_frases_opcoes.descricao\"\n            required />\n            <div [hidden]=\"!(editForm.controls.descricao?.dirty && editForm.controls.descricao?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.descricao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_frases_opcoes.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_frases_opcoes.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_frases_opcoes.tbc_frases\" for=\"field_tbc_frases\">Tbc Frases</label>\n            <select class=\"form-control\" id=\"field_tbc_frases\" name=\"tbc_frases\" [(ngModel)]=\"tbc_frases_opcoes.tbc_frases\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_frasesOption.id === tbc_frases_opcoes.tbc_frases?.id ? tbc_frases_opcoes.tbc_frases : tbc_frasesOption\" *ngFor=\"let tbc_frasesOption of tbc_frases; trackBy: trackTbc_frasesById\">{{tbc_frasesOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_frases?.dirty && editForm.controls.tbc_frases?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_frases?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_opcoes_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-popup.service.ts");
var tbc_frases_opcoes_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.service.ts");
var tbc_frases_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/index.ts");
var Tbc_frases_opcoesDialogComponent = (function () {
    function Tbc_frases_opcoesDialogComponent(activeModal, jhiLanguageService, alertService, tbc_frases_opcoesService, tbc_frasesService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.alertService = alertService;
        this.tbc_frases_opcoesService = tbc_frases_opcoesService;
        this.tbc_frasesService = tbc_frasesService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_frases_opcoes']);
    }
    Tbc_frases_opcoesDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_frasesService.query().subscribe(function (res) { _this.tbc_frases = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_frases_opcoesDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_frases_opcoesDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_frases_opcoes.id !== undefined) {
            this.tbc_frases_opcoesService.update(this.tbc_frases_opcoes)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_frases_opcoesService.create(this.tbc_frases_opcoes)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_frases_opcoesDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_frases_opcoesListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_frases_opcoesDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_frases_opcoesDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_frases_opcoesDialogComponent.prototype.trackTbc_frasesById = function (index, item) {
        return item.id;
    };
    return Tbc_frases_opcoesDialogComponent;
}());
Tbc_frases_opcoesDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-opcoes-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.AlertService,
        tbc_frases_opcoes_service_1.Tbc_frases_opcoesService,
        tbc_frases_1.Tbc_frasesService,
        ng_jhipster_1.EventManager])
], Tbc_frases_opcoesDialogComponent);
exports.Tbc_frases_opcoesDialogComponent = Tbc_frases_opcoesDialogComponent;
var Tbc_frases_opcoesPopupComponent = (function () {
    function Tbc_frases_opcoesPopupComponent(route, tbc_frases_opcoesPopupService) {
        this.route = route;
        this.tbc_frases_opcoesPopupService = tbc_frases_opcoesPopupService;
    }
    Tbc_frases_opcoesPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_frases_opcoesPopupService
                    .open(Tbc_frases_opcoesDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_frases_opcoesPopupService
                    .open(Tbc_frases_opcoesDialogComponent);
            }
        });
    };
    Tbc_frases_opcoesPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_frases_opcoesPopupComponent;
}());
Tbc_frases_opcoesPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-opcoes-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_frases_opcoes_popup_service_1.Tbc_frases_opcoesPopupService])
], Tbc_frases_opcoesPopupComponent);
exports.Tbc_frases_opcoesPopupComponent = Tbc_frases_opcoesPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_frases_opcoes_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.model.ts");
var tbc_frases_opcoes_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.service.ts");
var Tbc_frases_opcoesPopupService = (function () {
    function Tbc_frases_opcoesPopupService(modalService, router, tbc_frases_opcoesService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_frases_opcoesService = tbc_frases_opcoesService;
        this.isOpen = false;
    }
    Tbc_frases_opcoesPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_frases_opcoesService.find(id).subscribe(function (tbc_frases_opcoes) {
                _this.tbc_frases_opcoesModalRef(component, tbc_frases_opcoes);
            });
        }
        else {
            return this.tbc_frases_opcoesModalRef(component, new tbc_frases_opcoes_model_1.Tbc_frases_opcoes());
        }
    };
    Tbc_frases_opcoesPopupService.prototype.tbc_frases_opcoesModalRef = function (component, tbc_frases_opcoes) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_frases_opcoes = tbc_frases_opcoes;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_frases_opcoesPopupService;
}());
Tbc_frases_opcoesPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_frases_opcoes_service_1.Tbc_frases_opcoesService])
], Tbc_frases_opcoesPopupService);
exports.Tbc_frases_opcoesPopupService = Tbc_frases_opcoesPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_frases_opcoes.home.title\">Tbc Frases Opcoes</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-frases-opcoes\" [routerLink]=\"['/', { outlets: { popup: ['tbc-frases-opcoes-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_frases_opcoes.home.createLabel\">\n            Create new Tbc Frases Opcoes\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_frases_opcoes.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_frases_opcoes\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_frases_opcoes.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_frases_opcoes.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_frases_opcoes.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_frases.id\"><span jhiTranslate=\"limsApp.tbc_frases_opcoes.tbc_frases\">Tbc Frases</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_frases_opcoes of tbc_frases_opcoes ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-frases-opcoes', tbc_frases_opcoes.id ]\">{{tbc_frases_opcoes.id}}</a></td>\n                <td>{{tbc_frases_opcoes.nome}}</td>\n                <td>{{tbc_frases_opcoes.descricao}}</td>\n                <td>{{tbc_frases_opcoes.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_frases_opcoes.tbc_frases\">\n                        <a [routerLink]=\"['../tbc-frases', tbc_frases_opcoes.tbc_frases?.id ]\" >{{tbc_frases_opcoes.tbc_frases?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-frases-opcoes', tbc_frases_opcoes.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-frases-opcoes/'+ tbc_frases_opcoes.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-frases-opcoes/'+ tbc_frases_opcoes.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_frases_opcoes && tbc_frases_opcoes.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_opcoes_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_frases_opcoesComponent = (function () {
    function Tbc_frases_opcoesComponent(jhiLanguageService, tbc_frases_opcoesService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_frases_opcoesService = tbc_frases_opcoesService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_frases_opcoes']);
    }
    Tbc_frases_opcoesComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_frases_opcoesService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_frases_opcoesService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_frases_opcoesComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_frases_opcoesComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-frases-opcoes'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_frases_opcoesComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-frases-opcoes', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_frases_opcoesComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-frases-opcoes', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_frases_opcoesComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_frases_opcoes();
    };
    Tbc_frases_opcoesComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_frases_opcoesComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_frases_opcoesComponent.prototype.registerChangeInTbc_frases_opcoes = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_frases_opcoesListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_frases_opcoesComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_frases_opcoesComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_frases_opcoes = data;
    };
    Tbc_frases_opcoesComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_frases_opcoesComponent;
}());
Tbc_frases_opcoesComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-opcoes',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_frases_opcoes_service_1.Tbc_frases_opcoesService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_frases_opcoesComponent);
exports.Tbc_frases_opcoesComponent = Tbc_frases_opcoesComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_frases_opcoes = (function () {
    function Tbc_frases_opcoes(id, nome, descricao, removido, tbc_frases) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.removido = removido;
        this.tbc_frases = tbc_frases;
    }
    return Tbc_frases_opcoes;
}());
exports.Tbc_frases_opcoes = Tbc_frases_opcoes;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/index.ts");
var ENTITY_STATES = _1.tbc_frases_opcoesRoute.concat(_1.tbc_frases_opcoesPopupRoute);
var LimsTbc_frases_opcoesModule = (function () {
    function LimsTbc_frases_opcoesModule() {
    }
    return LimsTbc_frases_opcoesModule;
}());
LimsTbc_frases_opcoesModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_frases_opcoesComponent,
            _1.Tbc_frases_opcoesDetailComponent,
            _1.Tbc_frases_opcoesDialogComponent,
            _1.Tbc_frases_opcoesDeleteDialogComponent,
            _1.Tbc_frases_opcoesPopupComponent,
            _1.Tbc_frases_opcoesDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_frases_opcoesComponent,
            _1.Tbc_frases_opcoesDialogComponent,
            _1.Tbc_frases_opcoesPopupComponent,
            _1.Tbc_frases_opcoesDeleteDialogComponent,
            _1.Tbc_frases_opcoesDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_frases_opcoesService,
            _1.Tbc_frases_opcoesPopupService,
            _1.Tbc_frases_opcoesResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_frases_opcoesModule);
exports.LimsTbc_frases_opcoesModule = LimsTbc_frases_opcoesModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_opcoes_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.component.ts");
var tbc_frases_opcoes_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-detail.component.ts");
var tbc_frases_opcoes_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-dialog.component.ts");
var tbc_frases_opcoes_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes-delete-dialog.component.ts");
var Tbc_frases_opcoesResolvePagingParams = (function () {
    function Tbc_frases_opcoesResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_frases_opcoesResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_frases_opcoesResolvePagingParams;
}());
Tbc_frases_opcoesResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_frases_opcoesResolvePagingParams);
exports.Tbc_frases_opcoesResolvePagingParams = Tbc_frases_opcoesResolvePagingParams;
exports.tbc_frases_opcoesRoute = [
    {
        path: 'tbc-frases-opcoes',
        component: tbc_frases_opcoes_component_1.Tbc_frases_opcoesComponent,
        resolve: {
            'pagingParams': Tbc_frases_opcoesResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases_opcoes.home.title'
        }
    }, {
        path: 'tbc-frases-opcoes/:id',
        component: tbc_frases_opcoes_detail_component_1.Tbc_frases_opcoesDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases_opcoes.home.title'
        }
    }
];
exports.tbc_frases_opcoesPopupRoute = [
    {
        path: 'tbc-frases-opcoes-new',
        component: tbc_frases_opcoes_dialog_component_1.Tbc_frases_opcoesPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases_opcoes.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-frases-opcoes/:id/edit',
        component: tbc_frases_opcoes_dialog_component_1.Tbc_frases_opcoesPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases_opcoes.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-frases-opcoes/:id/delete',
        component: tbc_frases_opcoes_delete_dialog_component_1.Tbc_frases_opcoesDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases_opcoes.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases-opcoes/tbc-frases-opcoes.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_frases_opcoesService = (function () {
    function Tbc_frases_opcoesService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-frases-opcoes';
        this.resourceSearchUrl = 'api/_search/tbc-frases-opcoes';
    }
    Tbc_frases_opcoesService.prototype.create = function (tbc_frases_opcoes) {
        var copy = Object.assign({}, tbc_frases_opcoes);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_frases_opcoesService.prototype.update = function (tbc_frases_opcoes) {
        var copy = Object.assign({}, tbc_frases_opcoes);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_frases_opcoesService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_frases_opcoesService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_frases_opcoesService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_frases_opcoesService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_frases_opcoesService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_frases_opcoesService;
}());
Tbc_frases_opcoesService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_frases_opcoesService);
exports.Tbc_frases_opcoesService = Tbc_frases_opcoesService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_frases.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_frases.delete.question\" translateValues=\"{id: '{{tbc_frases.id}}'}\">Are you sure you want to delete this Tbc Frases?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-popup.service.ts");
var tbc_frases_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.service.ts");
var Tbc_frasesDeleteDialogComponent = (function () {
    function Tbc_frasesDeleteDialogComponent(jhiLanguageService, tbc_frasesService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_frasesService = tbc_frasesService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_frases']);
    }
    Tbc_frasesDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_frasesDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_frasesService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_frasesListModification',
                content: 'Deleted an tbc_frases'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_frasesDeleteDialogComponent;
}());
Tbc_frasesDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_frases_service_1.Tbc_frasesService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_frasesDeleteDialogComponent);
exports.Tbc_frasesDeleteDialogComponent = Tbc_frasesDeleteDialogComponent;
var Tbc_frasesDeletePopupComponent = (function () {
    function Tbc_frasesDeletePopupComponent(route, tbc_frasesPopupService) {
        this.route = route;
        this.tbc_frasesPopupService = tbc_frasesPopupService;
    }
    Tbc_frasesDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_frasesPopupService
                .open(Tbc_frasesDeleteDialogComponent, params['id']);
        });
    };
    Tbc_frasesDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_frasesDeletePopupComponent;
}());
Tbc_frasesDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_frases_popup_service_1.Tbc_frasesPopupService])
], Tbc_frasesDeletePopupComponent);
exports.Tbc_frasesDeletePopupComponent = Tbc_frasesDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_frases\">\n    <h2><span jhiTranslate=\"limsApp.tbc_frases.detail.title\">Tbc Frases</span> {{tbc_frases.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_frases.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_frases.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_frases.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_frases.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_frases.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_frases.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_frases.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_frases.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_frases.tbc_instituicao?.id]\">{{tbc_frases.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_frases.tbc_sub_grupo\">Tbc Sub Grupo</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_frases.tbc_sub_grupo\">\n                <a [routerLink]=\"['/tbc-sub-grupo', tbc_frases.tbc_sub_grupo?.id]\">{{tbc_frases.tbc_sub_grupo?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-frases/'+ tbc_frases.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.service.ts");
var Tbc_frasesDetailComponent = (function () {
    function Tbc_frasesDetailComponent(jhiLanguageService, tbc_frasesService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_frasesService = tbc_frasesService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_frases']);
    }
    Tbc_frasesDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_frasesDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_frasesService.find(id).subscribe(function (tbc_frases) {
            _this.tbc_frases = tbc_frases;
        });
    };
    Tbc_frasesDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_frasesDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_frasesDetailComponent;
}());
Tbc_frasesDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_frases_service_1.Tbc_frasesService,
        router_1.ActivatedRoute])
], Tbc_frasesDetailComponent);
exports.Tbc_frasesDetailComponent = Tbc_frasesDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_frasesLabel\" jhiTranslate=\"limsApp.tbc_frases.home.createOrEditLabel\">Create or edit a Tbc Frases</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_frases.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_frases.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_frases.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_frases.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_frases.descricao\" for=\"field_descricao\">Descricao</label>\n            <input type=\"text\" class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_frases.descricao\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_frases.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_frases.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_frases.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_frases.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_frases.tbc_instituicao?.id ? tbc_frases.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_frases.tbc_sub_grupo\" for=\"field_tbc_sub_grupo\">Tbc Sub Grupo</label>\n            <select class=\"form-control\" id=\"field_tbc_sub_grupo\" name=\"tbc_sub_grupo\" [(ngModel)]=\"tbc_frases.tbc_sub_grupo\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_sub_grupoOption.id === tbc_frases.tbc_sub_grupo?.id ? tbc_frases.tbc_sub_grupo : tbc_sub_grupoOption\" *ngFor=\"let tbc_sub_grupoOption of tbc_sub_grupos; trackBy: trackTbc_sub_grupoById\">{{tbc_sub_grupoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_sub_grupo?.dirty && editForm.controls.tbc_sub_grupo?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_sub_grupo?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-popup.service.ts");
var tbc_frases_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var tbc_sub_grupo_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/index.ts");
var Tbc_frasesDialogComponent = (function () {
    function Tbc_frasesDialogComponent(activeModal, jhiLanguageService, alertService, tbc_frasesService, tbc_instituicaoService, tbc_sub_grupoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.alertService = alertService;
        this.tbc_frasesService = tbc_frasesService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.tbc_sub_grupoService = tbc_sub_grupoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_frases']);
    }
    Tbc_frasesDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_sub_grupoService.query().subscribe(function (res) { _this.tbc_sub_grupos = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_frasesDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_frasesDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_frases.id !== undefined) {
            this.tbc_frasesService.update(this.tbc_frases)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_frasesService.create(this.tbc_frases)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_frasesDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_frasesListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_frasesDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_frasesDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_frasesDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    Tbc_frasesDialogComponent.prototype.trackTbc_sub_grupoById = function (index, item) {
        return item.id;
    };
    return Tbc_frasesDialogComponent;
}());
Tbc_frasesDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.AlertService,
        tbc_frases_service_1.Tbc_frasesService,
        tbc_instituicao_1.Tbc_instituicaoService,
        tbc_sub_grupo_1.Tbc_sub_grupoService,
        ng_jhipster_1.EventManager])
], Tbc_frasesDialogComponent);
exports.Tbc_frasesDialogComponent = Tbc_frasesDialogComponent;
var Tbc_frasesPopupComponent = (function () {
    function Tbc_frasesPopupComponent(route, tbc_frasesPopupService) {
        this.route = route;
        this.tbc_frasesPopupService = tbc_frasesPopupService;
    }
    Tbc_frasesPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_frasesPopupService
                    .open(Tbc_frasesDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_frasesPopupService
                    .open(Tbc_frasesDialogComponent);
            }
        });
    };
    Tbc_frasesPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_frasesPopupComponent;
}());
Tbc_frasesPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_frases_popup_service_1.Tbc_frasesPopupService])
], Tbc_frasesPopupComponent);
exports.Tbc_frasesPopupComponent = Tbc_frasesPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_frases_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.model.ts");
var tbc_frases_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.service.ts");
var Tbc_frasesPopupService = (function () {
    function Tbc_frasesPopupService(modalService, router, tbc_frasesService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_frasesService = tbc_frasesService;
        this.isOpen = false;
    }
    Tbc_frasesPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_frasesService.find(id).subscribe(function (tbc_frases) {
                _this.tbc_frasesModalRef(component, tbc_frases);
            });
        }
        else {
            return this.tbc_frasesModalRef(component, new tbc_frases_model_1.Tbc_frases());
        }
    };
    Tbc_frasesPopupService.prototype.tbc_frasesModalRef = function (component, tbc_frases) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_frases = tbc_frases;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_frasesPopupService;
}());
Tbc_frasesPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_frases_service_1.Tbc_frasesService])
], Tbc_frasesPopupService);
exports.Tbc_frasesPopupService = Tbc_frasesPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_frases.home.title\">Tbc Frases</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-frases\" [routerLink]=\"['/', { outlets: { popup: ['tbc-frases-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_frases.home.createLabel\">\n            Create new Tbc Frases\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_frases.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_frases\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_frases.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_frases.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_frases.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_frases.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_sub_grupo.id\"><span jhiTranslate=\"limsApp.tbc_frases.tbc_sub_grupo\">Tbc Sub Grupo</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_frases of tbc_frases ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-frases', tbc_frases.id ]\">{{tbc_frases.id}}</a></td>\n                <td>{{tbc_frases.nome}}</td>\n                <td>{{tbc_frases.descricao}}</td>\n                <td>{{tbc_frases.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_frases.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_frases.tbc_instituicao?.id ]\" >{{tbc_frases.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_frases.tbc_sub_grupo\">\n                        <a [routerLink]=\"['../tbc-sub-grupo', tbc_frases.tbc_sub_grupo?.id ]\" >{{tbc_frases.tbc_sub_grupo?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-frases', tbc_frases.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-frases/'+ tbc_frases.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-frases/'+ tbc_frases.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_frases && tbc_frases.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_frasesComponent = (function () {
    function Tbc_frasesComponent(jhiLanguageService, tbc_frasesService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_frasesService = tbc_frasesService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_frases']);
    }
    Tbc_frasesComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_frasesService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_frasesService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_frasesComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_frasesComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-frases'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_frasesComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-frases', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_frasesComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-frases', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_frasesComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_frases();
    };
    Tbc_frasesComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_frasesComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_frasesComponent.prototype.registerChangeInTbc_frases = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_frasesListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_frasesComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_frasesComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_frases = data;
    };
    Tbc_frasesComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_frasesComponent;
}());
Tbc_frasesComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-frases',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_frases_service_1.Tbc_frasesService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_frasesComponent);
exports.Tbc_frasesComponent = Tbc_frasesComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_frases = (function () {
    function Tbc_frases(id, nome, descricao, removido, tbc_instituicao, tbc_sub_grupo) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.removido = removido;
        this.tbc_instituicao = tbc_instituicao;
        this.tbc_sub_grupo = tbc_sub_grupo;
    }
    return Tbc_frases;
}());
exports.Tbc_frases = Tbc_frases;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/index.ts");
var ENTITY_STATES = _1.tbc_frasesRoute.concat(_1.tbc_frasesPopupRoute);
var LimsTbc_frasesModule = (function () {
    function LimsTbc_frasesModule() {
    }
    return LimsTbc_frasesModule;
}());
LimsTbc_frasesModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_frasesComponent,
            _1.Tbc_frasesDetailComponent,
            _1.Tbc_frasesDialogComponent,
            _1.Tbc_frasesDeleteDialogComponent,
            _1.Tbc_frasesPopupComponent,
            _1.Tbc_frasesDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_frasesComponent,
            _1.Tbc_frasesDialogComponent,
            _1.Tbc_frasesPopupComponent,
            _1.Tbc_frasesDeleteDialogComponent,
            _1.Tbc_frasesDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_frasesService,
            _1.Tbc_frasesPopupService,
            _1.Tbc_frasesResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_frasesModule);
exports.LimsTbc_frasesModule = LimsTbc_frasesModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_frases_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases.component.ts");
var tbc_frases_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-detail.component.ts");
var tbc_frases_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-dialog.component.ts");
var tbc_frases_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-frases/tbc-frases-delete-dialog.component.ts");
var Tbc_frasesResolvePagingParams = (function () {
    function Tbc_frasesResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_frasesResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_frasesResolvePagingParams;
}());
Tbc_frasesResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_frasesResolvePagingParams);
exports.Tbc_frasesResolvePagingParams = Tbc_frasesResolvePagingParams;
exports.tbc_frasesRoute = [
    {
        path: 'tbc-frases',
        component: tbc_frases_component_1.Tbc_frasesComponent,
        resolve: {
            'pagingParams': Tbc_frasesResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases.home.title'
        }
    }, {
        path: 'tbc-frases/:id',
        component: tbc_frases_detail_component_1.Tbc_frasesDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases.home.title'
        }
    }
];
exports.tbc_frasesPopupRoute = [
    {
        path: 'tbc-frases-new',
        component: tbc_frases_dialog_component_1.Tbc_frasesPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-frases/:id/edit',
        component: tbc_frases_dialog_component_1.Tbc_frasesPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-frases/:id/delete',
        component: tbc_frases_delete_dialog_component_1.Tbc_frasesDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_frases.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-frases/tbc-frases.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_frasesService = (function () {
    function Tbc_frasesService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-frases';
        this.resourceSearchUrl = 'api/_search/tbc-frases';
    }
    Tbc_frasesService.prototype.create = function (tbc_frases) {
        var copy = Object.assign({}, tbc_frases);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_frasesService.prototype.update = function (tbc_frases) {
        var copy = Object.assign({}, tbc_frases);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_frasesService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_frasesService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_frasesService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_frasesService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_frasesService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_frasesService;
}());
Tbc_frasesService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_frasesService);
exports.Tbc_frasesService = Tbc_frasesService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_grupo_analise.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_grupo_analise.delete.question\" translateValues=\"{id: '{{tbc_grupo_analise.id}}'}\">Are you sure you want to delete this Tbc Grupo Analise?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_analise_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-popup.service.ts");
var tbc_grupo_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.service.ts");
var Tbc_grupo_analiseDeleteDialogComponent = (function () {
    function Tbc_grupo_analiseDeleteDialogComponent(jhiLanguageService, tbc_grupo_analiseService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_grupo_analiseService = tbc_grupo_analiseService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_grupo_analise']);
    }
    Tbc_grupo_analiseDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_grupo_analiseDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_grupo_analiseService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_grupo_analiseListModification',
                content: 'Deleted an tbc_grupo_analise'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_grupo_analiseDeleteDialogComponent;
}());
Tbc_grupo_analiseDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-analise-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_grupo_analise_service_1.Tbc_grupo_analiseService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_grupo_analiseDeleteDialogComponent);
exports.Tbc_grupo_analiseDeleteDialogComponent = Tbc_grupo_analiseDeleteDialogComponent;
var Tbc_grupo_analiseDeletePopupComponent = (function () {
    function Tbc_grupo_analiseDeletePopupComponent(route, tbc_grupo_analisePopupService) {
        this.route = route;
        this.tbc_grupo_analisePopupService = tbc_grupo_analisePopupService;
    }
    Tbc_grupo_analiseDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_grupo_analisePopupService
                .open(Tbc_grupo_analiseDeleteDialogComponent, params['id']);
        });
    };
    Tbc_grupo_analiseDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_grupo_analiseDeletePopupComponent;
}());
Tbc_grupo_analiseDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-analise-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_grupo_analise_popup_service_1.Tbc_grupo_analisePopupService])
], Tbc_grupo_analiseDeletePopupComponent);
exports.Tbc_grupo_analiseDeletePopupComponent = Tbc_grupo_analiseDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_grupo_analise\">\n    <h2><span jhiTranslate=\"limsApp.tbc_grupo_analise.detail.title\">Tbc Grupo Analise</span> {{tbc_grupo_analise.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_grupo_analise.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_grupo_analise.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_grupo_analise.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_grupo_analise.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_grupo_analise.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_grupo_analise.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_grupo_analise.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_grupo_analise.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_grupo_analise.tbc_instituicao?.id]\">{{tbc_grupo_analise.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-grupo-analise/'+ tbc_grupo_analise.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.service.ts");
var Tbc_grupo_analiseDetailComponent = (function () {
    function Tbc_grupo_analiseDetailComponent(jhiLanguageService, tbc_grupo_analiseService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_grupo_analiseService = tbc_grupo_analiseService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_grupo_analise']);
    }
    Tbc_grupo_analiseDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_grupo_analiseDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_grupo_analiseService.find(id).subscribe(function (tbc_grupo_analise) {
            _this.tbc_grupo_analise = tbc_grupo_analise;
        });
    };
    Tbc_grupo_analiseDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_grupo_analiseDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_grupo_analiseDetailComponent;
}());
Tbc_grupo_analiseDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-analise-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_grupo_analise_service_1.Tbc_grupo_analiseService,
        router_1.ActivatedRoute])
], Tbc_grupo_analiseDetailComponent);
exports.Tbc_grupo_analiseDetailComponent = Tbc_grupo_analiseDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_grupo_analiseLabel\" jhiTranslate=\"limsApp.tbc_grupo_analise.home.createOrEditLabel\">Create or edit a Tbc Grupo Analise</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_grupo_analise.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_grupo_analise.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_grupo_analise.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_grupo_analise.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_grupo_analise.descricao\" for=\"field_descricao\">Descricao</label>\n            <input type=\"text\" class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_grupo_analise.descricao\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_grupo_analise.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_grupo_analise.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_grupo_analise.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_grupo_analise.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_grupo_analise.tbc_instituicao?.id ? tbc_grupo_analise.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_analise_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-popup.service.ts");
var tbc_grupo_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var Tbc_grupo_analiseDialogComponent = (function () {
    function Tbc_grupo_analiseDialogComponent(activeModal, jhiLanguageService, alertService, tbc_grupo_analiseService, tbc_instituicaoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.alertService = alertService;
        this.tbc_grupo_analiseService = tbc_grupo_analiseService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_grupo_analise']);
    }
    Tbc_grupo_analiseDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_grupo_analiseDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_grupo_analiseDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_grupo_analise.id !== undefined) {
            this.tbc_grupo_analiseService.update(this.tbc_grupo_analise)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_grupo_analiseService.create(this.tbc_grupo_analise)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_grupo_analiseDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_grupo_analiseListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_grupo_analiseDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_grupo_analiseDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_grupo_analiseDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    return Tbc_grupo_analiseDialogComponent;
}());
Tbc_grupo_analiseDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-analise-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.AlertService,
        tbc_grupo_analise_service_1.Tbc_grupo_analiseService,
        tbc_instituicao_1.Tbc_instituicaoService,
        ng_jhipster_1.EventManager])
], Tbc_grupo_analiseDialogComponent);
exports.Tbc_grupo_analiseDialogComponent = Tbc_grupo_analiseDialogComponent;
var Tbc_grupo_analisePopupComponent = (function () {
    function Tbc_grupo_analisePopupComponent(route, tbc_grupo_analisePopupService) {
        this.route = route;
        this.tbc_grupo_analisePopupService = tbc_grupo_analisePopupService;
    }
    Tbc_grupo_analisePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_grupo_analisePopupService
                    .open(Tbc_grupo_analiseDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_grupo_analisePopupService
                    .open(Tbc_grupo_analiseDialogComponent);
            }
        });
    };
    Tbc_grupo_analisePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_grupo_analisePopupComponent;
}());
Tbc_grupo_analisePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-analise-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_grupo_analise_popup_service_1.Tbc_grupo_analisePopupService])
], Tbc_grupo_analisePopupComponent);
exports.Tbc_grupo_analisePopupComponent = Tbc_grupo_analisePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_grupo_analise_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.model.ts");
var tbc_grupo_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.service.ts");
var Tbc_grupo_analisePopupService = (function () {
    function Tbc_grupo_analisePopupService(modalService, router, tbc_grupo_analiseService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_grupo_analiseService = tbc_grupo_analiseService;
        this.isOpen = false;
    }
    Tbc_grupo_analisePopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_grupo_analiseService.find(id).subscribe(function (tbc_grupo_analise) {
                _this.tbc_grupo_analiseModalRef(component, tbc_grupo_analise);
            });
        }
        else {
            return this.tbc_grupo_analiseModalRef(component, new tbc_grupo_analise_model_1.Tbc_grupo_analise());
        }
    };
    Tbc_grupo_analisePopupService.prototype.tbc_grupo_analiseModalRef = function (component, tbc_grupo_analise) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_grupo_analise = tbc_grupo_analise;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_grupo_analisePopupService;
}());
Tbc_grupo_analisePopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_grupo_analise_service_1.Tbc_grupo_analiseService])
], Tbc_grupo_analisePopupService);
exports.Tbc_grupo_analisePopupService = Tbc_grupo_analisePopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_grupo_analise.home.title\">Tbc Grupo Analises</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-grupo-analise\" [routerLink]=\"['/', { outlets: { popup: ['tbc-grupo-analise-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_grupo_analise.home.createLabel\">\n            Create new Tbc Grupo Analise\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_grupo_analise.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_grupo_analises\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_grupo_analise.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_grupo_analise.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_grupo_analise.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_grupo_analise.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_grupo_analise of tbc_grupo_analises ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-grupo-analise', tbc_grupo_analise.id ]\">{{tbc_grupo_analise.id}}</a></td>\n                <td>{{tbc_grupo_analise.nome}}</td>\n                <td>{{tbc_grupo_analise.descricao}}</td>\n                <td>{{tbc_grupo_analise.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_grupo_analise.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_grupo_analise.tbc_instituicao?.id ]\" >{{tbc_grupo_analise.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-grupo-analise', tbc_grupo_analise.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-grupo-analise/'+ tbc_grupo_analise.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-grupo-analise/'+ tbc_grupo_analise.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_grupo_analises && tbc_grupo_analises.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_grupo_analiseComponent = (function () {
    function Tbc_grupo_analiseComponent(jhiLanguageService, tbc_grupo_analiseService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_grupo_analiseService = tbc_grupo_analiseService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_grupo_analise']);
    }
    Tbc_grupo_analiseComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_grupo_analiseService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_grupo_analiseService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_grupo_analiseComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_grupo_analiseComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-grupo-analise'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_grupo_analiseComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-grupo-analise', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_grupo_analiseComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-grupo-analise', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_grupo_analiseComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_grupo_analises();
    };
    Tbc_grupo_analiseComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_grupo_analiseComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_grupo_analiseComponent.prototype.registerChangeInTbc_grupo_analises = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_grupo_analiseListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_grupo_analiseComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_grupo_analiseComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_grupo_analises = data;
    };
    Tbc_grupo_analiseComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_grupo_analiseComponent;
}());
Tbc_grupo_analiseComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-analise',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_grupo_analise_service_1.Tbc_grupo_analiseService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_grupo_analiseComponent);
exports.Tbc_grupo_analiseComponent = Tbc_grupo_analiseComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_grupo_analise = (function () {
    function Tbc_grupo_analise(id, nome, descricao, removido, tbc_instituicao) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.removido = removido;
        this.tbc_instituicao = tbc_instituicao;
    }
    return Tbc_grupo_analise;
}());
exports.Tbc_grupo_analise = Tbc_grupo_analise;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/index.ts");
var ENTITY_STATES = _1.tbc_grupo_analiseRoute.concat(_1.tbc_grupo_analisePopupRoute);
var LimsTbc_grupo_analiseModule = (function () {
    function LimsTbc_grupo_analiseModule() {
    }
    return LimsTbc_grupo_analiseModule;
}());
LimsTbc_grupo_analiseModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_grupo_analiseComponent,
            _1.Tbc_grupo_analiseDetailComponent,
            _1.Tbc_grupo_analiseDialogComponent,
            _1.Tbc_grupo_analiseDeleteDialogComponent,
            _1.Tbc_grupo_analisePopupComponent,
            _1.Tbc_grupo_analiseDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_grupo_analiseComponent,
            _1.Tbc_grupo_analiseDialogComponent,
            _1.Tbc_grupo_analisePopupComponent,
            _1.Tbc_grupo_analiseDeleteDialogComponent,
            _1.Tbc_grupo_analiseDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_grupo_analiseService,
            _1.Tbc_grupo_analisePopupService,
            _1.Tbc_grupo_analiseResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_grupo_analiseModule);
exports.LimsTbc_grupo_analiseModule = LimsTbc_grupo_analiseModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_analise_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.component.ts");
var tbc_grupo_analise_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-detail.component.ts");
var tbc_grupo_analise_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-dialog.component.ts");
var tbc_grupo_analise_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise-delete-dialog.component.ts");
var Tbc_grupo_analiseResolvePagingParams = (function () {
    function Tbc_grupo_analiseResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_grupo_analiseResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_grupo_analiseResolvePagingParams;
}());
Tbc_grupo_analiseResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_grupo_analiseResolvePagingParams);
exports.Tbc_grupo_analiseResolvePagingParams = Tbc_grupo_analiseResolvePagingParams;
exports.tbc_grupo_analiseRoute = [
    {
        path: 'tbc-grupo-analise',
        component: tbc_grupo_analise_component_1.Tbc_grupo_analiseComponent,
        resolve: {
            'pagingParams': Tbc_grupo_analiseResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_analise.home.title'
        }
    }, {
        path: 'tbc-grupo-analise/:id',
        component: tbc_grupo_analise_detail_component_1.Tbc_grupo_analiseDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_analise.home.title'
        }
    }
];
exports.tbc_grupo_analisePopupRoute = [
    {
        path: 'tbc-grupo-analise-new',
        component: tbc_grupo_analise_dialog_component_1.Tbc_grupo_analisePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_analise.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-grupo-analise/:id/edit',
        component: tbc_grupo_analise_dialog_component_1.Tbc_grupo_analisePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_analise.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-grupo-analise/:id/delete',
        component: tbc_grupo_analise_delete_dialog_component_1.Tbc_grupo_analiseDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_analise.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-analise/tbc-grupo-analise.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_grupo_analiseService = (function () {
    function Tbc_grupo_analiseService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-grupo-analises';
        this.resourceSearchUrl = 'api/_search/tbc-grupo-analises';
    }
    Tbc_grupo_analiseService.prototype.create = function (tbc_grupo_analise) {
        var copy = Object.assign({}, tbc_grupo_analise);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_grupo_analiseService.prototype.update = function (tbc_grupo_analise) {
        var copy = Object.assign({}, tbc_grupo_analise);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_grupo_analiseService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_grupo_analiseService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_grupo_analiseService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_grupo_analiseService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_grupo_analiseService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_grupo_analiseService;
}());
Tbc_grupo_analiseService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_grupo_analiseService);
exports.Tbc_grupo_analiseService = Tbc_grupo_analiseService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_grupo_cliente.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_grupo_cliente.delete.question\" translateValues=\"{id: '{{tbc_grupo_cliente.id}}'}\">Are you sure you want to delete this Tbc Grupo Cliente?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_cliente_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-popup.service.ts");
var tbc_grupo_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.service.ts");
var Tbc_grupo_clienteDeleteDialogComponent = (function () {
    function Tbc_grupo_clienteDeleteDialogComponent(jhiLanguageService, tbc_grupo_clienteService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_grupo_clienteService = tbc_grupo_clienteService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_grupo_cliente']);
    }
    Tbc_grupo_clienteDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_grupo_clienteDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_grupo_clienteService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_grupo_clienteListModification',
                content: 'Deleted an tbc_grupo_cliente'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_grupo_clienteDeleteDialogComponent;
}());
Tbc_grupo_clienteDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-cliente-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_grupo_cliente_service_1.Tbc_grupo_clienteService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_grupo_clienteDeleteDialogComponent);
exports.Tbc_grupo_clienteDeleteDialogComponent = Tbc_grupo_clienteDeleteDialogComponent;
var Tbc_grupo_clienteDeletePopupComponent = (function () {
    function Tbc_grupo_clienteDeletePopupComponent(route, tbc_grupo_clientePopupService) {
        this.route = route;
        this.tbc_grupo_clientePopupService = tbc_grupo_clientePopupService;
    }
    Tbc_grupo_clienteDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_grupo_clientePopupService
                .open(Tbc_grupo_clienteDeleteDialogComponent, params['id']);
        });
    };
    Tbc_grupo_clienteDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_grupo_clienteDeletePopupComponent;
}());
Tbc_grupo_clienteDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-cliente-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_grupo_cliente_popup_service_1.Tbc_grupo_clientePopupService])
], Tbc_grupo_clienteDeletePopupComponent);
exports.Tbc_grupo_clienteDeletePopupComponent = Tbc_grupo_clienteDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_grupo_cliente\">\n    <h2><span jhiTranslate=\"limsApp.tbc_grupo_cliente.detail.title\">Tbc Grupo Cliente</span> {{tbc_grupo_cliente.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_grupo_cliente.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_grupo_cliente.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_grupo_cliente.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_grupo_cliente.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_grupo_cliente.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_grupo_cliente.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_grupo_cliente.responsavel\">Responsavel</span></dt>\n        <dd>\n            <span>{{tbc_grupo_cliente.responsavel}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_grupo_cliente.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_grupo_cliente.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_grupo_cliente.tbc_instituicao?.id]\">{{tbc_grupo_cliente.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-grupo-cliente/'+ tbc_grupo_cliente.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.service.ts");
var Tbc_grupo_clienteDetailComponent = (function () {
    function Tbc_grupo_clienteDetailComponent(jhiLanguageService, dataUtils, tbc_grupo_clienteService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.tbc_grupo_clienteService = tbc_grupo_clienteService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_grupo_cliente']);
    }
    Tbc_grupo_clienteDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_grupo_clienteDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_grupo_clienteService.find(id).subscribe(function (tbc_grupo_cliente) {
            _this.tbc_grupo_cliente = tbc_grupo_cliente;
        });
    };
    Tbc_grupo_clienteDetailComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_grupo_clienteDetailComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_grupo_clienteDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_grupo_clienteDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_grupo_clienteDetailComponent;
}());
Tbc_grupo_clienteDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-cliente-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        tbc_grupo_cliente_service_1.Tbc_grupo_clienteService,
        router_1.ActivatedRoute])
], Tbc_grupo_clienteDetailComponent);
exports.Tbc_grupo_clienteDetailComponent = Tbc_grupo_clienteDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_grupo_clienteLabel\" jhiTranslate=\"limsApp.tbc_grupo_cliente.home.createOrEditLabel\">Create or edit a Tbc Grupo Cliente</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_grupo_cliente.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_grupo_cliente.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_grupo_cliente.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_grupo_cliente.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_grupo_cliente.descricao\" for=\"field_descricao\">Descricao</label>\n            <textarea class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_grupo_cliente.descricao\"  ></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_grupo_cliente.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_grupo_cliente.removido\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_grupo_cliente.responsavel\" for=\"field_responsavel\">Responsavel</label>\n            <textarea class=\"form-control\" name=\"responsavel\" id=\"field_responsavel\"\n                [(ngModel)]=\"tbc_grupo_cliente.responsavel\" required ></textarea>\n            <div [hidden]=\"!(editForm.controls.responsavel?.dirty && editForm.controls.responsavel?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.responsavel?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_grupo_cliente.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_grupo_cliente.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_grupo_cliente.tbc_instituicao?.id ? tbc_grupo_cliente.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_cliente_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-popup.service.ts");
var tbc_grupo_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var Tbc_grupo_clienteDialogComponent = (function () {
    function Tbc_grupo_clienteDialogComponent(activeModal, jhiLanguageService, dataUtils, alertService, tbc_grupo_clienteService, tbc_instituicaoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.alertService = alertService;
        this.tbc_grupo_clienteService = tbc_grupo_clienteService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_grupo_cliente']);
    }
    Tbc_grupo_clienteDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_grupo_clienteDialogComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_grupo_clienteDialogComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_grupo_clienteDialogComponent.prototype.setFileData = function ($event, tbc_grupo_cliente, field, isImage) {
        if ($event.target.files && $event.target.files[0]) {
            var $file_1 = $event.target.files[0];
            if (isImage && !/^image\//.test($file_1.type)) {
                return;
            }
            this.dataUtils.toBase64($file_1, function (base64Data) {
                tbc_grupo_cliente[field] = base64Data;
                tbc_grupo_cliente[field + "ContentType"] = $file_1.type;
            });
        }
    };
    Tbc_grupo_clienteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_grupo_clienteDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_grupo_cliente.id !== undefined) {
            this.tbc_grupo_clienteService.update(this.tbc_grupo_cliente)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_grupo_clienteService.create(this.tbc_grupo_cliente)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_grupo_clienteDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_grupo_clienteListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_grupo_clienteDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_grupo_clienteDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_grupo_clienteDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    return Tbc_grupo_clienteDialogComponent;
}());
Tbc_grupo_clienteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-cliente-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        ng_jhipster_1.AlertService,
        tbc_grupo_cliente_service_1.Tbc_grupo_clienteService,
        tbc_instituicao_1.Tbc_instituicaoService,
        ng_jhipster_1.EventManager])
], Tbc_grupo_clienteDialogComponent);
exports.Tbc_grupo_clienteDialogComponent = Tbc_grupo_clienteDialogComponent;
var Tbc_grupo_clientePopupComponent = (function () {
    function Tbc_grupo_clientePopupComponent(route, tbc_grupo_clientePopupService) {
        this.route = route;
        this.tbc_grupo_clientePopupService = tbc_grupo_clientePopupService;
    }
    Tbc_grupo_clientePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_grupo_clientePopupService
                    .open(Tbc_grupo_clienteDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_grupo_clientePopupService
                    .open(Tbc_grupo_clienteDialogComponent);
            }
        });
    };
    Tbc_grupo_clientePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_grupo_clientePopupComponent;
}());
Tbc_grupo_clientePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-cliente-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_grupo_cliente_popup_service_1.Tbc_grupo_clientePopupService])
], Tbc_grupo_clientePopupComponent);
exports.Tbc_grupo_clientePopupComponent = Tbc_grupo_clientePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_grupo_cliente_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.model.ts");
var tbc_grupo_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.service.ts");
var Tbc_grupo_clientePopupService = (function () {
    function Tbc_grupo_clientePopupService(modalService, router, tbc_grupo_clienteService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_grupo_clienteService = tbc_grupo_clienteService;
        this.isOpen = false;
    }
    Tbc_grupo_clientePopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_grupo_clienteService.find(id).subscribe(function (tbc_grupo_cliente) {
                _this.tbc_grupo_clienteModalRef(component, tbc_grupo_cliente);
            });
        }
        else {
            return this.tbc_grupo_clienteModalRef(component, new tbc_grupo_cliente_model_1.Tbc_grupo_cliente());
        }
    };
    Tbc_grupo_clientePopupService.prototype.tbc_grupo_clienteModalRef = function (component, tbc_grupo_cliente) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_grupo_cliente = tbc_grupo_cliente;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_grupo_clientePopupService;
}());
Tbc_grupo_clientePopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_grupo_cliente_service_1.Tbc_grupo_clienteService])
], Tbc_grupo_clientePopupService);
exports.Tbc_grupo_clientePopupService = Tbc_grupo_clientePopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_grupo_cliente.home.title\">Tbc Grupo Clientes</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-grupo-cliente\" [routerLink]=\"['/', { outlets: { popup: ['tbc-grupo-cliente-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_grupo_cliente.home.createLabel\">\n            Create new Tbc Grupo Cliente\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_grupo_cliente.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_grupo_clientes\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_grupo_cliente.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_grupo_cliente.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_grupo_cliente.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"responsavel\"><span jhiTranslate=\"limsApp.tbc_grupo_cliente.responsavel\">Responsavel</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_grupo_cliente.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_grupo_cliente of tbc_grupo_clientes ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-grupo-cliente', tbc_grupo_cliente.id ]\">{{tbc_grupo_cliente.id}}</a></td>\n                <td>{{tbc_grupo_cliente.nome}}</td>\n                <td>{{tbc_grupo_cliente.descricao}}</td>\n                <td>{{tbc_grupo_cliente.removido}}</td>\n                <td>{{tbc_grupo_cliente.responsavel}}</td>\n                <td>\n                    <div *ngIf=\"tbc_grupo_cliente.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_grupo_cliente.tbc_instituicao?.id ]\" >{{tbc_grupo_cliente.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-grupo-cliente', tbc_grupo_cliente.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-grupo-cliente/'+ tbc_grupo_cliente.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-grupo-cliente/'+ tbc_grupo_cliente.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_grupo_clientes && tbc_grupo_clientes.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_cliente_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_grupo_clienteComponent = (function () {
    function Tbc_grupo_clienteComponent(jhiLanguageService, tbc_grupo_clienteService, parseLinks, alertService, principal, activatedRoute, dataUtils, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_grupo_clienteService = tbc_grupo_clienteService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.dataUtils = dataUtils;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_grupo_cliente']);
    }
    Tbc_grupo_clienteComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_grupo_clienteService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_grupo_clienteService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_grupo_clienteComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_grupo_clienteComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-grupo-cliente'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_grupo_clienteComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-grupo-cliente', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_grupo_clienteComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-grupo-cliente', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_grupo_clienteComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_grupo_clientes();
    };
    Tbc_grupo_clienteComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_grupo_clienteComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_grupo_clienteComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_grupo_clienteComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_grupo_clienteComponent.prototype.registerChangeInTbc_grupo_clientes = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_grupo_clienteListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_grupo_clienteComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_grupo_clienteComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_grupo_clientes = data;
    };
    Tbc_grupo_clienteComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_grupo_clienteComponent;
}());
Tbc_grupo_clienteComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-grupo-cliente',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_grupo_cliente_service_1.Tbc_grupo_clienteService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        ng_jhipster_1.DataUtils,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_grupo_clienteComponent);
exports.Tbc_grupo_clienteComponent = Tbc_grupo_clienteComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_grupo_cliente = (function () {
    function Tbc_grupo_cliente(id, nome, descricao, removido, responsavel, tbc_instituicao) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.removido = removido;
        this.responsavel = responsavel;
        this.tbc_instituicao = tbc_instituicao;
    }
    return Tbc_grupo_cliente;
}());
exports.Tbc_grupo_cliente = Tbc_grupo_cliente;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/index.ts");
var ENTITY_STATES = _1.tbc_grupo_clienteRoute.concat(_1.tbc_grupo_clientePopupRoute);
var LimsTbc_grupo_clienteModule = (function () {
    function LimsTbc_grupo_clienteModule() {
    }
    return LimsTbc_grupo_clienteModule;
}());
LimsTbc_grupo_clienteModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_grupo_clienteComponent,
            _1.Tbc_grupo_clienteDetailComponent,
            _1.Tbc_grupo_clienteDialogComponent,
            _1.Tbc_grupo_clienteDeleteDialogComponent,
            _1.Tbc_grupo_clientePopupComponent,
            _1.Tbc_grupo_clienteDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_grupo_clienteComponent,
            _1.Tbc_grupo_clienteDialogComponent,
            _1.Tbc_grupo_clientePopupComponent,
            _1.Tbc_grupo_clienteDeleteDialogComponent,
            _1.Tbc_grupo_clienteDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_grupo_clienteService,
            _1.Tbc_grupo_clientePopupService,
            _1.Tbc_grupo_clienteResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_grupo_clienteModule);
exports.LimsTbc_grupo_clienteModule = LimsTbc_grupo_clienteModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_grupo_cliente_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.component.ts");
var tbc_grupo_cliente_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-detail.component.ts");
var tbc_grupo_cliente_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-dialog.component.ts");
var tbc_grupo_cliente_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente-delete-dialog.component.ts");
var Tbc_grupo_clienteResolvePagingParams = (function () {
    function Tbc_grupo_clienteResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_grupo_clienteResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_grupo_clienteResolvePagingParams;
}());
Tbc_grupo_clienteResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_grupo_clienteResolvePagingParams);
exports.Tbc_grupo_clienteResolvePagingParams = Tbc_grupo_clienteResolvePagingParams;
exports.tbc_grupo_clienteRoute = [
    {
        path: 'tbc-grupo-cliente',
        component: tbc_grupo_cliente_component_1.Tbc_grupo_clienteComponent,
        resolve: {
            'pagingParams': Tbc_grupo_clienteResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_cliente.home.title'
        }
    }, {
        path: 'tbc-grupo-cliente/:id',
        component: tbc_grupo_cliente_detail_component_1.Tbc_grupo_clienteDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_cliente.home.title'
        }
    }
];
exports.tbc_grupo_clientePopupRoute = [
    {
        path: 'tbc-grupo-cliente-new',
        component: tbc_grupo_cliente_dialog_component_1.Tbc_grupo_clientePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_cliente.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-grupo-cliente/:id/edit',
        component: tbc_grupo_cliente_dialog_component_1.Tbc_grupo_clientePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_cliente.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-grupo-cliente/:id/delete',
        component: tbc_grupo_cliente_delete_dialog_component_1.Tbc_grupo_clienteDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_grupo_cliente.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-grupo-cliente/tbc-grupo-cliente.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_grupo_clienteService = (function () {
    function Tbc_grupo_clienteService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-grupo-clientes';
        this.resourceSearchUrl = 'api/_search/tbc-grupo-clientes';
    }
    Tbc_grupo_clienteService.prototype.create = function (tbc_grupo_cliente) {
        var copy = Object.assign({}, tbc_grupo_cliente);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_grupo_clienteService.prototype.update = function (tbc_grupo_cliente) {
        var copy = Object.assign({}, tbc_grupo_cliente);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_grupo_clienteService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_grupo_clienteService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_grupo_clienteService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_grupo_clienteService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_grupo_clienteService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_grupo_clienteService;
}());
Tbc_grupo_clienteService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_grupo_clienteService);
exports.Tbc_grupo_clienteService = Tbc_grupo_clienteService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_instituicao.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_instituicao.delete.question\" translateValues=\"{id: '{{tbc_instituicao.id}}'}\">Are you sure you want to delete this Tbc Instituicao?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_instituicao_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-popup.service.ts");
var tbc_instituicao_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.service.ts");
var Tbc_instituicaoDeleteDialogComponent = (function () {
    function Tbc_instituicaoDeleteDialogComponent(jhiLanguageService, tbc_instituicaoService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_instituicao']);
    }
    Tbc_instituicaoDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_instituicaoDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_instituicaoService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_instituicaoListModification',
                content: 'Deleted an tbc_instituicao'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_instituicaoDeleteDialogComponent;
}());
Tbc_instituicaoDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-instituicao-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_instituicao_service_1.Tbc_instituicaoService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_instituicaoDeleteDialogComponent);
exports.Tbc_instituicaoDeleteDialogComponent = Tbc_instituicaoDeleteDialogComponent;
var Tbc_instituicaoDeletePopupComponent = (function () {
    function Tbc_instituicaoDeletePopupComponent(route, tbc_instituicaoPopupService) {
        this.route = route;
        this.tbc_instituicaoPopupService = tbc_instituicaoPopupService;
    }
    Tbc_instituicaoDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_instituicaoPopupService
                .open(Tbc_instituicaoDeleteDialogComponent, params['id']);
        });
    };
    Tbc_instituicaoDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_instituicaoDeletePopupComponent;
}());
Tbc_instituicaoDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-instituicao-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_instituicao_popup_service_1.Tbc_instituicaoPopupService])
], Tbc_instituicaoDeletePopupComponent);
exports.Tbc_instituicaoDeletePopupComponent = Tbc_instituicaoDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_instituicao\">\n    <h2><span jhiTranslate=\"limsApp.tbc_instituicao.detail.title\">Tbc Instituicao</span> {{tbc_instituicao.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_instituicao.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_instituicao.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_instituicao.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_instituicao.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_instituicao.sigla\">Sigla</span></dt>\n        <dd>\n            <span>{{tbc_instituicao.sigla}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_instituicao.uf\">Uf</span></dt>\n        <dd>\n            <span>{{tbc_instituicao.uf}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_instituicao.endereco\">Endereco</span></dt>\n        <dd>\n            <span>{{tbc_instituicao.endereco}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_instituicao.telefone\">Telefone</span></dt>\n        <dd>\n            <span>{{tbc_instituicao.telefone}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_instituicao.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_instituicao.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_instituicao.email\">Email</span></dt>\n        <dd>\n            <span>{{tbc_instituicao.email}}</span>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-instituicao/'+ tbc_instituicao.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_instituicao_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.service.ts");
var Tbc_instituicaoDetailComponent = (function () {
    function Tbc_instituicaoDetailComponent(jhiLanguageService, tbc_instituicaoService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_instituicao']);
    }
    Tbc_instituicaoDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_instituicaoDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_instituicaoService.find(id).subscribe(function (tbc_instituicao) {
            _this.tbc_instituicao = tbc_instituicao;
        });
    };
    Tbc_instituicaoDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_instituicaoDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_instituicaoDetailComponent;
}());
Tbc_instituicaoDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-instituicao-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_instituicao_service_1.Tbc_instituicaoService,
        router_1.ActivatedRoute])
], Tbc_instituicaoDetailComponent);
exports.Tbc_instituicaoDetailComponent = Tbc_instituicaoDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_instituicaoLabel\" jhiTranslate=\"limsApp.tbc_instituicao.home.createOrEditLabel\">Create or edit a Tbc Instituicao</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_instituicao.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_instituicao.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_instituicao.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_instituicao.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_instituicao.descricao\" for=\"field_descricao\">Descricao</label>\n            <input type=\"text\" class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_instituicao.descricao\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_instituicao.sigla\" for=\"field_sigla\">Sigla</label>\n            <input type=\"text\" class=\"form-control\" name=\"sigla\" id=\"field_sigla\"\n                [(ngModel)]=\"tbc_instituicao.sigla\"\n            required />\n            <div [hidden]=\"!(editForm.controls.sigla?.dirty && editForm.controls.sigla?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.sigla?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_instituicao.uf\" for=\"field_uf\">Uf</label>\n            <input type=\"text\" class=\"form-control\" name=\"uf\" id=\"field_uf\"\n                [(ngModel)]=\"tbc_instituicao.uf\"\n            required minlength=\"2\" maxlength=\"2\" />\n            <div [hidden]=\"!(editForm.controls.uf?.dirty && editForm.controls.uf?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.uf?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.uf?.errors?.minlength\" jhiTranslate=\"entity.validation.minlength\" translateValues=\"{ min: 2 }\">\n                   This field is required to be at least 2 characters.\n                </small>\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.uf?.errors?.maxlength\" jhiTranslate=\"entity.validation.maxlength\" translateValues=\"{ max: 2 }\">\n                   This field cannot be longer than 2 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_instituicao.endereco\" for=\"field_endereco\">Endereco</label>\n            <input type=\"text\" class=\"form-control\" name=\"endereco\" id=\"field_endereco\"\n                [(ngModel)]=\"tbc_instituicao.endereco\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_instituicao.telefone\" for=\"field_telefone\">Telefone</label>\n            <input type=\"text\" class=\"form-control\" name=\"telefone\" id=\"field_telefone\"\n                [(ngModel)]=\"tbc_instituicao.telefone\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_instituicao.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_instituicao.removido\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_instituicao.email\" for=\"field_email\">Email</label>\n            <input type=\"text\" class=\"form-control\" name=\"email\" id=\"field_email\"\n                [(ngModel)]=\"tbc_instituicao.email\"\n            required />\n            <div [hidden]=\"!(editForm.controls.email?.dirty && editForm.controls.email?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.email?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_instituicao_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-popup.service.ts");
var tbc_instituicao_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.service.ts");
var Tbc_instituicaoDialogComponent = (function () {
    function Tbc_instituicaoDialogComponent(activeModal, jhiLanguageService, alertService, tbc_instituicaoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.alertService = alertService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_instituicao']);
    }
    Tbc_instituicaoDialogComponent.prototype.ngOnInit = function () {
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
    };
    Tbc_instituicaoDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_instituicaoDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_instituicao.id !== undefined) {
            this.tbc_instituicaoService.update(this.tbc_instituicao)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_instituicaoService.create(this.tbc_instituicao)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_instituicaoDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_instituicaoListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_instituicaoDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_instituicaoDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_instituicaoDialogComponent;
}());
Tbc_instituicaoDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-instituicao-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.AlertService,
        tbc_instituicao_service_1.Tbc_instituicaoService,
        ng_jhipster_1.EventManager])
], Tbc_instituicaoDialogComponent);
exports.Tbc_instituicaoDialogComponent = Tbc_instituicaoDialogComponent;
var Tbc_instituicaoPopupComponent = (function () {
    function Tbc_instituicaoPopupComponent(route, tbc_instituicaoPopupService) {
        this.route = route;
        this.tbc_instituicaoPopupService = tbc_instituicaoPopupService;
    }
    Tbc_instituicaoPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_instituicaoPopupService
                    .open(Tbc_instituicaoDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_instituicaoPopupService
                    .open(Tbc_instituicaoDialogComponent);
            }
        });
    };
    Tbc_instituicaoPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_instituicaoPopupComponent;
}());
Tbc_instituicaoPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-instituicao-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_instituicao_popup_service_1.Tbc_instituicaoPopupService])
], Tbc_instituicaoPopupComponent);
exports.Tbc_instituicaoPopupComponent = Tbc_instituicaoPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_instituicao_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.model.ts");
var tbc_instituicao_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.service.ts");
var Tbc_instituicaoPopupService = (function () {
    function Tbc_instituicaoPopupService(modalService, router, tbc_instituicaoService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.isOpen = false;
    }
    Tbc_instituicaoPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_instituicaoService.find(id).subscribe(function (tbc_instituicao) {
                _this.tbc_instituicaoModalRef(component, tbc_instituicao);
            });
        }
        else {
            return this.tbc_instituicaoModalRef(component, new tbc_instituicao_model_1.Tbc_instituicao());
        }
    };
    Tbc_instituicaoPopupService.prototype.tbc_instituicaoModalRef = function (component, tbc_instituicao) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_instituicao = tbc_instituicao;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_instituicaoPopupService;
}());
Tbc_instituicaoPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_instituicao_service_1.Tbc_instituicaoService])
], Tbc_instituicaoPopupService);
exports.Tbc_instituicaoPopupService = Tbc_instituicaoPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_instituicao.home.title\">Tbc Instituicaos</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-instituicao\" [routerLink]=\"['/', { outlets: { popup: ['tbc-instituicao-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_instituicao.home.createLabel\">\n            Create new Tbc Instituicao\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_instituicao.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_instituicaos\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_instituicao.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_instituicao.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"sigla\"><span jhiTranslate=\"limsApp.tbc_instituicao.sigla\">Sigla</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"uf\"><span jhiTranslate=\"limsApp.tbc_instituicao.uf\">Uf</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"endereco\"><span jhiTranslate=\"limsApp.tbc_instituicao.endereco\">Endereco</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"telefone\"><span jhiTranslate=\"limsApp.tbc_instituicao.telefone\">Telefone</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_instituicao.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"email\"><span jhiTranslate=\"limsApp.tbc_instituicao.email\">Email</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_instituicao of tbc_instituicaos ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-instituicao', tbc_instituicao.id ]\">{{tbc_instituicao.id}}</a></td>\n                <td>{{tbc_instituicao.nome}}</td>\n                <td>{{tbc_instituicao.descricao}}</td>\n                <td>{{tbc_instituicao.sigla}}</td>\n                <td>{{tbc_instituicao.uf}}</td>\n                <td>{{tbc_instituicao.endereco}}</td>\n                <td>{{tbc_instituicao.telefone}}</td>\n                <td>{{tbc_instituicao.removido}}</td>\n                <td>{{tbc_instituicao.email}}</td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-instituicao', tbc_instituicao.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-instituicao/'+ tbc_instituicao.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-instituicao/'+ tbc_instituicao.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_instituicaos && tbc_instituicaos.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_instituicao_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_instituicaoComponent = (function () {
    function Tbc_instituicaoComponent(jhiLanguageService, tbc_instituicaoService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_instituicao']);
    }
    Tbc_instituicaoComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_instituicaoService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_instituicaoService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_instituicaoComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_instituicaoComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-instituicao'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_instituicaoComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-instituicao', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_instituicaoComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-instituicao', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_instituicaoComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_instituicaos();
    };
    Tbc_instituicaoComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_instituicaoComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_instituicaoComponent.prototype.registerChangeInTbc_instituicaos = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_instituicaoListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_instituicaoComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_instituicaoComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_instituicaos = data;
    };
    Tbc_instituicaoComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_instituicaoComponent;
}());
Tbc_instituicaoComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-instituicao',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_instituicao_service_1.Tbc_instituicaoService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_instituicaoComponent);
exports.Tbc_instituicaoComponent = Tbc_instituicaoComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_instituicao = (function () {
    function Tbc_instituicao(id, nome, descricao, sigla, uf, endereco, telefone, removido, email) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.sigla = sigla;
        this.uf = uf;
        this.endereco = endereco;
        this.telefone = telefone;
        this.removido = removido;
        this.email = email;
    }
    return Tbc_instituicao;
}());
exports.Tbc_instituicao = Tbc_instituicao;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var ENTITY_STATES = _1.tbc_instituicaoRoute.concat(_1.tbc_instituicaoPopupRoute);
var LimsTbc_instituicaoModule = (function () {
    function LimsTbc_instituicaoModule() {
    }
    return LimsTbc_instituicaoModule;
}());
LimsTbc_instituicaoModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_instituicaoComponent,
            _1.Tbc_instituicaoDetailComponent,
            _1.Tbc_instituicaoDialogComponent,
            _1.Tbc_instituicaoDeleteDialogComponent,
            _1.Tbc_instituicaoPopupComponent,
            _1.Tbc_instituicaoDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_instituicaoComponent,
            _1.Tbc_instituicaoDialogComponent,
            _1.Tbc_instituicaoPopupComponent,
            _1.Tbc_instituicaoDeleteDialogComponent,
            _1.Tbc_instituicaoDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_instituicaoService,
            _1.Tbc_instituicaoPopupService,
            _1.Tbc_instituicaoResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_instituicaoModule);
exports.LimsTbc_instituicaoModule = LimsTbc_instituicaoModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_instituicao_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.component.ts");
var tbc_instituicao_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-detail.component.ts");
var tbc_instituicao_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-dialog.component.ts");
var tbc_instituicao_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao-delete-dialog.component.ts");
var Tbc_instituicaoResolvePagingParams = (function () {
    function Tbc_instituicaoResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_instituicaoResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_instituicaoResolvePagingParams;
}());
Tbc_instituicaoResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_instituicaoResolvePagingParams);
exports.Tbc_instituicaoResolvePagingParams = Tbc_instituicaoResolvePagingParams;
exports.tbc_instituicaoRoute = [
    {
        path: 'tbc-instituicao',
        component: tbc_instituicao_component_1.Tbc_instituicaoComponent,
        resolve: {
            'pagingParams': Tbc_instituicaoResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_instituicao.home.title'
        }
    }, {
        path: 'tbc-instituicao/:id',
        component: tbc_instituicao_detail_component_1.Tbc_instituicaoDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_instituicao.home.title'
        }
    }
];
exports.tbc_instituicaoPopupRoute = [
    {
        path: 'tbc-instituicao-new',
        component: tbc_instituicao_dialog_component_1.Tbc_instituicaoPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_instituicao.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-instituicao/:id/edit',
        component: tbc_instituicao_dialog_component_1.Tbc_instituicaoPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_instituicao.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-instituicao/:id/delete',
        component: tbc_instituicao_delete_dialog_component_1.Tbc_instituicaoDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_instituicao.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-instituicao/tbc-instituicao.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_instituicaoService = (function () {
    function Tbc_instituicaoService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-instituicaos';
        this.resourceSearchUrl = 'api/_search/tbc-instituicaos';
    }
    Tbc_instituicaoService.prototype.create = function (tbc_instituicao) {
        var copy = Object.assign({}, tbc_instituicao);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_instituicaoService.prototype.update = function (tbc_instituicao) {
        var copy = Object.assign({}, tbc_instituicao);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_instituicaoService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_instituicaoService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_instituicaoService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_instituicaoService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_instituicaoService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_instituicaoService;
}());
Tbc_instituicaoService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_instituicaoService);
exports.Tbc_instituicaoService = Tbc_instituicaoService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_lab_tercerizado.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_lab_tercerizado.delete.question\" translateValues=\"{id: '{{tbc_lab_tercerizado.id}}'}\">Are you sure you want to delete this Tbc Lab Tercerizado?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_lab_tercerizado_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-popup.service.ts");
var tbc_lab_tercerizado_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.service.ts");
var Tbc_lab_tercerizadoDeleteDialogComponent = (function () {
    function Tbc_lab_tercerizadoDeleteDialogComponent(jhiLanguageService, tbc_lab_tercerizadoService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_lab_tercerizadoService = tbc_lab_tercerizadoService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_lab_tercerizado']);
    }
    Tbc_lab_tercerizadoDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_lab_tercerizadoDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_lab_tercerizadoService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_lab_tercerizadoListModification',
                content: 'Deleted an tbc_lab_tercerizado'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_lab_tercerizadoDeleteDialogComponent;
}());
Tbc_lab_tercerizadoDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-lab-tercerizado-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_lab_tercerizado_service_1.Tbc_lab_tercerizadoService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_lab_tercerizadoDeleteDialogComponent);
exports.Tbc_lab_tercerizadoDeleteDialogComponent = Tbc_lab_tercerizadoDeleteDialogComponent;
var Tbc_lab_tercerizadoDeletePopupComponent = (function () {
    function Tbc_lab_tercerizadoDeletePopupComponent(route, tbc_lab_tercerizadoPopupService) {
        this.route = route;
        this.tbc_lab_tercerizadoPopupService = tbc_lab_tercerizadoPopupService;
    }
    Tbc_lab_tercerizadoDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_lab_tercerizadoPopupService
                .open(Tbc_lab_tercerizadoDeleteDialogComponent, params['id']);
        });
    };
    Tbc_lab_tercerizadoDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_lab_tercerizadoDeletePopupComponent;
}());
Tbc_lab_tercerizadoDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-lab-tercerizado-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_lab_tercerizado_popup_service_1.Tbc_lab_tercerizadoPopupService])
], Tbc_lab_tercerizadoDeletePopupComponent);
exports.Tbc_lab_tercerizadoDeletePopupComponent = Tbc_lab_tercerizadoDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_lab_tercerizado\">\n    <h2><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.detail.title\">Tbc Lab Tercerizado</span> {{tbc_lab_tercerizado.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_lab_tercerizado.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_lab_tercerizado.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_lab_tercerizado.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_lab_tercerizado.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_lab_tercerizado.tbc_instituicao?.id]\">{{tbc_lab_tercerizado.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-lab-tercerizado/'+ tbc_lab_tercerizado.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_lab_tercerizado_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.service.ts");
var Tbc_lab_tercerizadoDetailComponent = (function () {
    function Tbc_lab_tercerizadoDetailComponent(jhiLanguageService, dataUtils, tbc_lab_tercerizadoService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.tbc_lab_tercerizadoService = tbc_lab_tercerizadoService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_lab_tercerizado']);
    }
    Tbc_lab_tercerizadoDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_lab_tercerizadoDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_lab_tercerizadoService.find(id).subscribe(function (tbc_lab_tercerizado) {
            _this.tbc_lab_tercerizado = tbc_lab_tercerizado;
        });
    };
    Tbc_lab_tercerizadoDetailComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_lab_tercerizadoDetailComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_lab_tercerizadoDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_lab_tercerizadoDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_lab_tercerizadoDetailComponent;
}());
Tbc_lab_tercerizadoDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-lab-tercerizado-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        tbc_lab_tercerizado_service_1.Tbc_lab_tercerizadoService,
        router_1.ActivatedRoute])
], Tbc_lab_tercerizadoDetailComponent);
exports.Tbc_lab_tercerizadoDetailComponent = Tbc_lab_tercerizadoDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_lab_tercerizadoLabel\" jhiTranslate=\"limsApp.tbc_lab_tercerizado.home.createOrEditLabel\">Create or edit a Tbc Lab Tercerizado</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_lab_tercerizado.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_lab_tercerizado.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_lab_tercerizado.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_lab_tercerizado.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_lab_tercerizado.descricao\" for=\"field_descricao\">Descricao</label>\n            <textarea class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_lab_tercerizado.descricao\"  ></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_lab_tercerizado.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_lab_tercerizado.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_lab_tercerizado.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_lab_tercerizado.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_lab_tercerizado.tbc_instituicao?.id ? tbc_lab_tercerizado.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_lab_tercerizado_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-popup.service.ts");
var tbc_lab_tercerizado_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var Tbc_lab_tercerizadoDialogComponent = (function () {
    function Tbc_lab_tercerizadoDialogComponent(activeModal, jhiLanguageService, dataUtils, alertService, tbc_lab_tercerizadoService, tbc_instituicaoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.alertService = alertService;
        this.tbc_lab_tercerizadoService = tbc_lab_tercerizadoService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_lab_tercerizado']);
    }
    Tbc_lab_tercerizadoDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_lab_tercerizadoDialogComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_lab_tercerizadoDialogComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_lab_tercerizadoDialogComponent.prototype.setFileData = function ($event, tbc_lab_tercerizado, field, isImage) {
        if ($event.target.files && $event.target.files[0]) {
            var $file_1 = $event.target.files[0];
            if (isImage && !/^image\//.test($file_1.type)) {
                return;
            }
            this.dataUtils.toBase64($file_1, function (base64Data) {
                tbc_lab_tercerizado[field] = base64Data;
                tbc_lab_tercerizado[field + "ContentType"] = $file_1.type;
            });
        }
    };
    Tbc_lab_tercerizadoDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_lab_tercerizadoDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_lab_tercerizado.id !== undefined) {
            this.tbc_lab_tercerizadoService.update(this.tbc_lab_tercerizado)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_lab_tercerizadoService.create(this.tbc_lab_tercerizado)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_lab_tercerizadoDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_lab_tercerizadoListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_lab_tercerizadoDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_lab_tercerizadoDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_lab_tercerizadoDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    return Tbc_lab_tercerizadoDialogComponent;
}());
Tbc_lab_tercerizadoDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-lab-tercerizado-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        ng_jhipster_1.AlertService,
        tbc_lab_tercerizado_service_1.Tbc_lab_tercerizadoService,
        tbc_instituicao_1.Tbc_instituicaoService,
        ng_jhipster_1.EventManager])
], Tbc_lab_tercerizadoDialogComponent);
exports.Tbc_lab_tercerizadoDialogComponent = Tbc_lab_tercerizadoDialogComponent;
var Tbc_lab_tercerizadoPopupComponent = (function () {
    function Tbc_lab_tercerizadoPopupComponent(route, tbc_lab_tercerizadoPopupService) {
        this.route = route;
        this.tbc_lab_tercerizadoPopupService = tbc_lab_tercerizadoPopupService;
    }
    Tbc_lab_tercerizadoPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_lab_tercerizadoPopupService
                    .open(Tbc_lab_tercerizadoDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_lab_tercerizadoPopupService
                    .open(Tbc_lab_tercerizadoDialogComponent);
            }
        });
    };
    Tbc_lab_tercerizadoPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_lab_tercerizadoPopupComponent;
}());
Tbc_lab_tercerizadoPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-lab-tercerizado-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_lab_tercerizado_popup_service_1.Tbc_lab_tercerizadoPopupService])
], Tbc_lab_tercerizadoPopupComponent);
exports.Tbc_lab_tercerizadoPopupComponent = Tbc_lab_tercerizadoPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_lab_tercerizado_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.model.ts");
var tbc_lab_tercerizado_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.service.ts");
var Tbc_lab_tercerizadoPopupService = (function () {
    function Tbc_lab_tercerizadoPopupService(modalService, router, tbc_lab_tercerizadoService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_lab_tercerizadoService = tbc_lab_tercerizadoService;
        this.isOpen = false;
    }
    Tbc_lab_tercerizadoPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_lab_tercerizadoService.find(id).subscribe(function (tbc_lab_tercerizado) {
                _this.tbc_lab_tercerizadoModalRef(component, tbc_lab_tercerizado);
            });
        }
        else {
            return this.tbc_lab_tercerizadoModalRef(component, new tbc_lab_tercerizado_model_1.Tbc_lab_tercerizado());
        }
    };
    Tbc_lab_tercerizadoPopupService.prototype.tbc_lab_tercerizadoModalRef = function (component, tbc_lab_tercerizado) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_lab_tercerizado = tbc_lab_tercerizado;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_lab_tercerizadoPopupService;
}());
Tbc_lab_tercerizadoPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_lab_tercerizado_service_1.Tbc_lab_tercerizadoService])
], Tbc_lab_tercerizadoPopupService);
exports.Tbc_lab_tercerizadoPopupService = Tbc_lab_tercerizadoPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.home.title\">Tbc Lab Tercerizados</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-lab-tercerizado\" [routerLink]=\"['/', { outlets: { popup: ['tbc-lab-tercerizado-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_lab_tercerizado.home.createLabel\">\n            Create new Tbc Lab Tercerizado\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_lab_tercerizado.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_lab_tercerizados\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_lab_tercerizado.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_lab_tercerizado of tbc_lab_tercerizados ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-lab-tercerizado', tbc_lab_tercerizado.id ]\">{{tbc_lab_tercerizado.id}}</a></td>\n                <td>{{tbc_lab_tercerizado.nome}}</td>\n                <td>{{tbc_lab_tercerizado.descricao}}</td>\n                <td>{{tbc_lab_tercerizado.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_lab_tercerizado.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_lab_tercerizado.tbc_instituicao?.id ]\" >{{tbc_lab_tercerizado.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-lab-tercerizado', tbc_lab_tercerizado.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-lab-tercerizado/'+ tbc_lab_tercerizado.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-lab-tercerizado/'+ tbc_lab_tercerizado.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_lab_tercerizados && tbc_lab_tercerizados.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_lab_tercerizado_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_lab_tercerizadoComponent = (function () {
    function Tbc_lab_tercerizadoComponent(jhiLanguageService, tbc_lab_tercerizadoService, parseLinks, alertService, principal, activatedRoute, dataUtils, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_lab_tercerizadoService = tbc_lab_tercerizadoService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.dataUtils = dataUtils;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_lab_tercerizado']);
    }
    Tbc_lab_tercerizadoComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_lab_tercerizadoService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_lab_tercerizadoService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_lab_tercerizadoComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_lab_tercerizadoComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-lab-tercerizado'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_lab_tercerizadoComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-lab-tercerizado', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_lab_tercerizadoComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-lab-tercerizado', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_lab_tercerizadoComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_lab_tercerizados();
    };
    Tbc_lab_tercerizadoComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_lab_tercerizadoComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_lab_tercerizadoComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_lab_tercerizadoComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_lab_tercerizadoComponent.prototype.registerChangeInTbc_lab_tercerizados = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_lab_tercerizadoListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_lab_tercerizadoComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_lab_tercerizadoComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_lab_tercerizados = data;
    };
    Tbc_lab_tercerizadoComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_lab_tercerizadoComponent;
}());
Tbc_lab_tercerizadoComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-lab-tercerizado',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_lab_tercerizado_service_1.Tbc_lab_tercerizadoService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        ng_jhipster_1.DataUtils,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_lab_tercerizadoComponent);
exports.Tbc_lab_tercerizadoComponent = Tbc_lab_tercerizadoComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_lab_tercerizado = (function () {
    function Tbc_lab_tercerizado(id, nome, descricao, removido, tbc_instituicao) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.removido = removido;
        this.tbc_instituicao = tbc_instituicao;
    }
    return Tbc_lab_tercerizado;
}());
exports.Tbc_lab_tercerizado = Tbc_lab_tercerizado;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/index.ts");
var ENTITY_STATES = _1.tbc_lab_tercerizadoRoute.concat(_1.tbc_lab_tercerizadoPopupRoute);
var LimsTbc_lab_tercerizadoModule = (function () {
    function LimsTbc_lab_tercerizadoModule() {
    }
    return LimsTbc_lab_tercerizadoModule;
}());
LimsTbc_lab_tercerizadoModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_lab_tercerizadoComponent,
            _1.Tbc_lab_tercerizadoDetailComponent,
            _1.Tbc_lab_tercerizadoDialogComponent,
            _1.Tbc_lab_tercerizadoDeleteDialogComponent,
            _1.Tbc_lab_tercerizadoPopupComponent,
            _1.Tbc_lab_tercerizadoDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_lab_tercerizadoComponent,
            _1.Tbc_lab_tercerizadoDialogComponent,
            _1.Tbc_lab_tercerizadoPopupComponent,
            _1.Tbc_lab_tercerizadoDeleteDialogComponent,
            _1.Tbc_lab_tercerizadoDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_lab_tercerizadoService,
            _1.Tbc_lab_tercerizadoPopupService,
            _1.Tbc_lab_tercerizadoResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_lab_tercerizadoModule);
exports.LimsTbc_lab_tercerizadoModule = LimsTbc_lab_tercerizadoModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_lab_tercerizado_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.component.ts");
var tbc_lab_tercerizado_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-detail.component.ts");
var tbc_lab_tercerizado_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-dialog.component.ts");
var tbc_lab_tercerizado_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado-delete-dialog.component.ts");
var Tbc_lab_tercerizadoResolvePagingParams = (function () {
    function Tbc_lab_tercerizadoResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_lab_tercerizadoResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_lab_tercerizadoResolvePagingParams;
}());
Tbc_lab_tercerizadoResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_lab_tercerizadoResolvePagingParams);
exports.Tbc_lab_tercerizadoResolvePagingParams = Tbc_lab_tercerizadoResolvePagingParams;
exports.tbc_lab_tercerizadoRoute = [
    {
        path: 'tbc-lab-tercerizado',
        component: tbc_lab_tercerizado_component_1.Tbc_lab_tercerizadoComponent,
        resolve: {
            'pagingParams': Tbc_lab_tercerizadoResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_lab_tercerizado.home.title'
        }
    }, {
        path: 'tbc-lab-tercerizado/:id',
        component: tbc_lab_tercerizado_detail_component_1.Tbc_lab_tercerizadoDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_lab_tercerizado.home.title'
        }
    }
];
exports.tbc_lab_tercerizadoPopupRoute = [
    {
        path: 'tbc-lab-tercerizado-new',
        component: tbc_lab_tercerizado_dialog_component_1.Tbc_lab_tercerizadoPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_lab_tercerizado.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-lab-tercerizado/:id/edit',
        component: tbc_lab_tercerizado_dialog_component_1.Tbc_lab_tercerizadoPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_lab_tercerizado.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-lab-tercerizado/:id/delete',
        component: tbc_lab_tercerizado_delete_dialog_component_1.Tbc_lab_tercerizadoDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_lab_tercerizado.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-lab-tercerizado/tbc-lab-tercerizado.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_lab_tercerizadoService = (function () {
    function Tbc_lab_tercerizadoService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-lab-tercerizados';
        this.resourceSearchUrl = 'api/_search/tbc-lab-tercerizados';
    }
    Tbc_lab_tercerizadoService.prototype.create = function (tbc_lab_tercerizado) {
        var copy = Object.assign({}, tbc_lab_tercerizado);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_lab_tercerizadoService.prototype.update = function (tbc_lab_tercerizado) {
        var copy = Object.assign({}, tbc_lab_tercerizado);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_lab_tercerizadoService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_lab_tercerizadoService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_lab_tercerizadoService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_lab_tercerizadoService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_lab_tercerizadoService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_lab_tercerizadoService;
}());
Tbc_lab_tercerizadoService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_lab_tercerizadoService);
exports.Tbc_lab_tercerizadoService = Tbc_lab_tercerizadoService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_plano_teste_analise.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_plano_teste_analise.delete.question\" translateValues=\"{id: '{{tbc_plano_teste_analise.id}}'}\">Are you sure you want to delete this Tbc Plano Teste Analise?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_analise_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-popup.service.ts");
var tbc_plano_teste_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.service.ts");
var Tbc_plano_teste_analiseDeleteDialogComponent = (function () {
    function Tbc_plano_teste_analiseDeleteDialogComponent(jhiLanguageService, tbc_plano_teste_analiseService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_plano_teste_analiseService = tbc_plano_teste_analiseService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_plano_teste_analise']);
    }
    Tbc_plano_teste_analiseDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_plano_teste_analiseDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_plano_teste_analiseService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_plano_teste_analiseListModification',
                content: 'Deleted an tbc_plano_teste_analise'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_plano_teste_analiseDeleteDialogComponent;
}());
Tbc_plano_teste_analiseDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-analise-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_plano_teste_analise_service_1.Tbc_plano_teste_analiseService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_plano_teste_analiseDeleteDialogComponent);
exports.Tbc_plano_teste_analiseDeleteDialogComponent = Tbc_plano_teste_analiseDeleteDialogComponent;
var Tbc_plano_teste_analiseDeletePopupComponent = (function () {
    function Tbc_plano_teste_analiseDeletePopupComponent(route, tbc_plano_teste_analisePopupService) {
        this.route = route;
        this.tbc_plano_teste_analisePopupService = tbc_plano_teste_analisePopupService;
    }
    Tbc_plano_teste_analiseDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_plano_teste_analisePopupService
                .open(Tbc_plano_teste_analiseDeleteDialogComponent, params['id']);
        });
    };
    Tbc_plano_teste_analiseDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_plano_teste_analiseDeletePopupComponent;
}());
Tbc_plano_teste_analiseDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-analise-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_plano_teste_analise_popup_service_1.Tbc_plano_teste_analisePopupService])
], Tbc_plano_teste_analiseDeletePopupComponent);
exports.Tbc_plano_teste_analiseDeletePopupComponent = Tbc_plano_teste_analiseDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_plano_teste_analise\">\n    <h2><span jhiTranslate=\"limsApp.tbc_plano_teste_analise.detail.title\">Tbc Plano Teste Analise</span> {{tbc_plano_teste_analise.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_plano_teste_analise.ordem\">Ordem</span></dt>\n        <dd>\n            <span>{{tbc_plano_teste_analise.ordem}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_plano_teste_analise.tbc_plano_teste\">Tbc Plano Teste</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_plano_teste_analise.tbc_plano_teste\">\n                <a [routerLink]=\"['/tbc-plano-teste', tbc_plano_teste_analise.tbc_plano_teste?.id]\">{{tbc_plano_teste_analise.tbc_plano_teste?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_plano_teste_analise.tbc_analises\">Tbc Analises</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_plano_teste_analise.tbc_analises\">\n                <a [routerLink]=\"['/tbc-analises', tbc_plano_teste_analise.tbc_analises?.id]\">{{tbc_plano_teste_analise.tbc_analises?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-plano-teste-analise/'+ tbc_plano_teste_analise.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.service.ts");
var Tbc_plano_teste_analiseDetailComponent = (function () {
    function Tbc_plano_teste_analiseDetailComponent(jhiLanguageService, tbc_plano_teste_analiseService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_plano_teste_analiseService = tbc_plano_teste_analiseService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_plano_teste_analise']);
    }
    Tbc_plano_teste_analiseDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_plano_teste_analiseDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_plano_teste_analiseService.find(id).subscribe(function (tbc_plano_teste_analise) {
            _this.tbc_plano_teste_analise = tbc_plano_teste_analise;
        });
    };
    Tbc_plano_teste_analiseDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_plano_teste_analiseDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_plano_teste_analiseDetailComponent;
}());
Tbc_plano_teste_analiseDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-analise-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_plano_teste_analise_service_1.Tbc_plano_teste_analiseService,
        router_1.ActivatedRoute])
], Tbc_plano_teste_analiseDetailComponent);
exports.Tbc_plano_teste_analiseDetailComponent = Tbc_plano_teste_analiseDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_plano_teste_analiseLabel\" jhiTranslate=\"limsApp.tbc_plano_teste_analise.home.createOrEditLabel\">Create or edit a Tbc Plano Teste Analise</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_plano_teste_analise.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_plano_teste_analise.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_plano_teste_analise.ordem\" for=\"field_ordem\">Ordem</label>\n            <input type=\"number\" class=\"form-control\" name=\"ordem\" id=\"field_ordem\"\n                [(ngModel)]=\"tbc_plano_teste_analise.ordem\"\n            required />\n            <div [hidden]=\"!(editForm.controls.ordem?.dirty && editForm.controls.ordem?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.ordem?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n                <small class=\"form-text text-danger\"\n                    [hidden]=\"!editForm.controls.ordem?.errors?.number\" jhiTranslate=\"entity.validation.number\">\n                    This field should be a number.\n                </small>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_plano_teste_analise.tbc_plano_teste\" for=\"field_tbc_plano_teste\">Tbc Plano Teste</label>\n            <select class=\"form-control\" id=\"field_tbc_plano_teste\" name=\"tbc_plano_teste\" [(ngModel)]=\"tbc_plano_teste_analise.tbc_plano_teste\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_plano_testeOption.id === tbc_plano_teste_analise.tbc_plano_teste?.id ? tbc_plano_teste_analise.tbc_plano_teste : tbc_plano_testeOption\" *ngFor=\"let tbc_plano_testeOption of tbc_plano_testes; trackBy: trackTbc_plano_testeById\">{{tbc_plano_testeOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_plano_teste?.dirty && editForm.controls.tbc_plano_teste?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_plano_teste?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_plano_teste_analise.tbc_analises\" for=\"field_tbc_analises\">Tbc Analises</label>\n            <select class=\"form-control\" id=\"field_tbc_analises\" name=\"tbc_analises\" [(ngModel)]=\"tbc_plano_teste_analise.tbc_analises\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_analisesOption.id === tbc_plano_teste_analise.tbc_analises?.id ? tbc_plano_teste_analise.tbc_analises : tbc_analisesOption\" *ngFor=\"let tbc_analisesOption of tbc_analises; trackBy: trackTbc_analisesById\">{{tbc_analisesOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_analises?.dirty && editForm.controls.tbc_analises?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_analises?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_analise_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-popup.service.ts");
var tbc_plano_teste_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.service.ts");
var tbc_plano_teste_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/index.ts");
var tbc_analises_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-analises/index.ts");
var Tbc_plano_teste_analiseDialogComponent = (function () {
    function Tbc_plano_teste_analiseDialogComponent(activeModal, jhiLanguageService, alertService, tbc_plano_teste_analiseService, tbc_plano_testeService, tbc_analisesService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.alertService = alertService;
        this.tbc_plano_teste_analiseService = tbc_plano_teste_analiseService;
        this.tbc_plano_testeService = tbc_plano_testeService;
        this.tbc_analisesService = tbc_analisesService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_plano_teste_analise']);
    }
    Tbc_plano_teste_analiseDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_plano_testeService.query().subscribe(function (res) { _this.tbc_plano_testes = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_analisesService.query().subscribe(function (res) { _this.tbc_analises = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_plano_teste_analiseDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_plano_teste_analiseDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_plano_teste_analise.id !== undefined) {
            this.tbc_plano_teste_analiseService.update(this.tbc_plano_teste_analise)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_plano_teste_analiseService.create(this.tbc_plano_teste_analise)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_plano_teste_analiseDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_plano_teste_analiseListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_plano_teste_analiseDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_plano_teste_analiseDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_plano_teste_analiseDialogComponent.prototype.trackTbc_plano_testeById = function (index, item) {
        return item.id;
    };
    Tbc_plano_teste_analiseDialogComponent.prototype.trackTbc_analisesById = function (index, item) {
        return item.id;
    };
    return Tbc_plano_teste_analiseDialogComponent;
}());
Tbc_plano_teste_analiseDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-analise-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.AlertService,
        tbc_plano_teste_analise_service_1.Tbc_plano_teste_analiseService,
        tbc_plano_teste_1.Tbc_plano_testeService,
        tbc_analises_1.Tbc_analisesService,
        ng_jhipster_1.EventManager])
], Tbc_plano_teste_analiseDialogComponent);
exports.Tbc_plano_teste_analiseDialogComponent = Tbc_plano_teste_analiseDialogComponent;
var Tbc_plano_teste_analisePopupComponent = (function () {
    function Tbc_plano_teste_analisePopupComponent(route, tbc_plano_teste_analisePopupService) {
        this.route = route;
        this.tbc_plano_teste_analisePopupService = tbc_plano_teste_analisePopupService;
    }
    Tbc_plano_teste_analisePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_plano_teste_analisePopupService
                    .open(Tbc_plano_teste_analiseDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_plano_teste_analisePopupService
                    .open(Tbc_plano_teste_analiseDialogComponent);
            }
        });
    };
    Tbc_plano_teste_analisePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_plano_teste_analisePopupComponent;
}());
Tbc_plano_teste_analisePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-analise-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_plano_teste_analise_popup_service_1.Tbc_plano_teste_analisePopupService])
], Tbc_plano_teste_analisePopupComponent);
exports.Tbc_plano_teste_analisePopupComponent = Tbc_plano_teste_analisePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_plano_teste_analise_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.model.ts");
var tbc_plano_teste_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.service.ts");
var Tbc_plano_teste_analisePopupService = (function () {
    function Tbc_plano_teste_analisePopupService(modalService, router, tbc_plano_teste_analiseService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_plano_teste_analiseService = tbc_plano_teste_analiseService;
        this.isOpen = false;
    }
    Tbc_plano_teste_analisePopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_plano_teste_analiseService.find(id).subscribe(function (tbc_plano_teste_analise) {
                _this.tbc_plano_teste_analiseModalRef(component, tbc_plano_teste_analise);
            });
        }
        else {
            return this.tbc_plano_teste_analiseModalRef(component, new tbc_plano_teste_analise_model_1.Tbc_plano_teste_analise());
        }
    };
    Tbc_plano_teste_analisePopupService.prototype.tbc_plano_teste_analiseModalRef = function (component, tbc_plano_teste_analise) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_plano_teste_analise = tbc_plano_teste_analise;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_plano_teste_analisePopupService;
}());
Tbc_plano_teste_analisePopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_plano_teste_analise_service_1.Tbc_plano_teste_analiseService])
], Tbc_plano_teste_analisePopupService);
exports.Tbc_plano_teste_analisePopupService = Tbc_plano_teste_analisePopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_plano_teste_analise.home.title\">Tbc Plano Teste Analises</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-plano-teste-analise\" [routerLink]=\"['/', { outlets: { popup: ['tbc-plano-teste-analise-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_plano_teste_analise.home.createLabel\">\n            Create new Tbc Plano Teste Analise\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_plano_teste_analise.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_plano_teste_analises\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"ordem\"><span jhiTranslate=\"limsApp.tbc_plano_teste_analise.ordem\">Ordem</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_plano_teste.id\"><span jhiTranslate=\"limsApp.tbc_plano_teste_analise.tbc_plano_teste\">Tbc Plano Teste</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_analises.id\"><span jhiTranslate=\"limsApp.tbc_plano_teste_analise.tbc_analises\">Tbc Analises</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_plano_teste_analise of tbc_plano_teste_analises ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-plano-teste-analise', tbc_plano_teste_analise.id ]\">{{tbc_plano_teste_analise.id}}</a></td>\n                <td>{{tbc_plano_teste_analise.ordem}}</td>\n                <td>\n                    <div *ngIf=\"tbc_plano_teste_analise.tbc_plano_teste\">\n                        <a [routerLink]=\"['../tbc-plano-teste', tbc_plano_teste_analise.tbc_plano_teste?.id ]\" >{{tbc_plano_teste_analise.tbc_plano_teste?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_plano_teste_analise.tbc_analises\">\n                        <a [routerLink]=\"['../tbc-analises', tbc_plano_teste_analise.tbc_analises?.id ]\" >{{tbc_plano_teste_analise.tbc_analises?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-plano-teste-analise', tbc_plano_teste_analise.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-plano-teste-analise/'+ tbc_plano_teste_analise.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-plano-teste-analise/'+ tbc_plano_teste_analise.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_plano_teste_analises && tbc_plano_teste_analises.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_analise_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_plano_teste_analiseComponent = (function () {
    function Tbc_plano_teste_analiseComponent(jhiLanguageService, tbc_plano_teste_analiseService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_plano_teste_analiseService = tbc_plano_teste_analiseService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_plano_teste_analise']);
    }
    Tbc_plano_teste_analiseComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_plano_teste_analiseService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_plano_teste_analiseService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_plano_teste_analiseComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_plano_teste_analiseComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-plano-teste-analise'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_plano_teste_analiseComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-plano-teste-analise', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_plano_teste_analiseComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-plano-teste-analise', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_plano_teste_analiseComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_plano_teste_analises();
    };
    Tbc_plano_teste_analiseComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_plano_teste_analiseComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_plano_teste_analiseComponent.prototype.registerChangeInTbc_plano_teste_analises = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_plano_teste_analiseListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_plano_teste_analiseComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_plano_teste_analiseComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_plano_teste_analises = data;
    };
    Tbc_plano_teste_analiseComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_plano_teste_analiseComponent;
}());
Tbc_plano_teste_analiseComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-analise',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_plano_teste_analise_service_1.Tbc_plano_teste_analiseService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_plano_teste_analiseComponent);
exports.Tbc_plano_teste_analiseComponent = Tbc_plano_teste_analiseComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_plano_teste_analise = (function () {
    function Tbc_plano_teste_analise(id, ordem, tbc_plano_teste, tbc_analises) {
        this.id = id;
        this.ordem = ordem;
        this.tbc_plano_teste = tbc_plano_teste;
        this.tbc_analises = tbc_analises;
    }
    return Tbc_plano_teste_analise;
}());
exports.Tbc_plano_teste_analise = Tbc_plano_teste_analise;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/index.ts");
var ENTITY_STATES = _1.tbc_plano_teste_analiseRoute.concat(_1.tbc_plano_teste_analisePopupRoute);
var LimsTbc_plano_teste_analiseModule = (function () {
    function LimsTbc_plano_teste_analiseModule() {
    }
    return LimsTbc_plano_teste_analiseModule;
}());
LimsTbc_plano_teste_analiseModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_plano_teste_analiseComponent,
            _1.Tbc_plano_teste_analiseDetailComponent,
            _1.Tbc_plano_teste_analiseDialogComponent,
            _1.Tbc_plano_teste_analiseDeleteDialogComponent,
            _1.Tbc_plano_teste_analisePopupComponent,
            _1.Tbc_plano_teste_analiseDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_plano_teste_analiseComponent,
            _1.Tbc_plano_teste_analiseDialogComponent,
            _1.Tbc_plano_teste_analisePopupComponent,
            _1.Tbc_plano_teste_analiseDeleteDialogComponent,
            _1.Tbc_plano_teste_analiseDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_plano_teste_analiseService,
            _1.Tbc_plano_teste_analisePopupService,
            _1.Tbc_plano_teste_analiseResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_plano_teste_analiseModule);
exports.LimsTbc_plano_teste_analiseModule = LimsTbc_plano_teste_analiseModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_analise_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.component.ts");
var tbc_plano_teste_analise_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-detail.component.ts");
var tbc_plano_teste_analise_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-dialog.component.ts");
var tbc_plano_teste_analise_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise-delete-dialog.component.ts");
var Tbc_plano_teste_analiseResolvePagingParams = (function () {
    function Tbc_plano_teste_analiseResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_plano_teste_analiseResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_plano_teste_analiseResolvePagingParams;
}());
Tbc_plano_teste_analiseResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_plano_teste_analiseResolvePagingParams);
exports.Tbc_plano_teste_analiseResolvePagingParams = Tbc_plano_teste_analiseResolvePagingParams;
exports.tbc_plano_teste_analiseRoute = [
    {
        path: 'tbc-plano-teste-analise',
        component: tbc_plano_teste_analise_component_1.Tbc_plano_teste_analiseComponent,
        resolve: {
            'pagingParams': Tbc_plano_teste_analiseResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste_analise.home.title'
        }
    }, {
        path: 'tbc-plano-teste-analise/:id',
        component: tbc_plano_teste_analise_detail_component_1.Tbc_plano_teste_analiseDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste_analise.home.title'
        }
    }
];
exports.tbc_plano_teste_analisePopupRoute = [
    {
        path: 'tbc-plano-teste-analise-new',
        component: tbc_plano_teste_analise_dialog_component_1.Tbc_plano_teste_analisePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste_analise.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-plano-teste-analise/:id/edit',
        component: tbc_plano_teste_analise_dialog_component_1.Tbc_plano_teste_analisePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste_analise.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-plano-teste-analise/:id/delete',
        component: tbc_plano_teste_analise_delete_dialog_component_1.Tbc_plano_teste_analiseDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste_analise.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste-analise/tbc-plano-teste-analise.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_plano_teste_analiseService = (function () {
    function Tbc_plano_teste_analiseService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-plano-teste-analises';
        this.resourceSearchUrl = 'api/_search/tbc-plano-teste-analises';
    }
    Tbc_plano_teste_analiseService.prototype.create = function (tbc_plano_teste_analise) {
        var copy = Object.assign({}, tbc_plano_teste_analise);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_plano_teste_analiseService.prototype.update = function (tbc_plano_teste_analise) {
        var copy = Object.assign({}, tbc_plano_teste_analise);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_plano_teste_analiseService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_plano_teste_analiseService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_plano_teste_analiseService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_plano_teste_analiseService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_plano_teste_analiseService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_plano_teste_analiseService;
}());
Tbc_plano_teste_analiseService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_plano_teste_analiseService);
exports.Tbc_plano_teste_analiseService = Tbc_plano_teste_analiseService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_plano_teste.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_plano_teste.delete.question\" translateValues=\"{id: '{{tbc_plano_teste.id}}'}\">Are you sure you want to delete this Tbc Plano Teste?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-popup.service.ts");
var tbc_plano_teste_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.service.ts");
var Tbc_plano_testeDeleteDialogComponent = (function () {
    function Tbc_plano_testeDeleteDialogComponent(jhiLanguageService, tbc_plano_testeService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_plano_testeService = tbc_plano_testeService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_plano_teste']);
    }
    Tbc_plano_testeDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_plano_testeDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_plano_testeService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_plano_testeListModification',
                content: 'Deleted an tbc_plano_teste'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_plano_testeDeleteDialogComponent;
}());
Tbc_plano_testeDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_plano_teste_service_1.Tbc_plano_testeService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_plano_testeDeleteDialogComponent);
exports.Tbc_plano_testeDeleteDialogComponent = Tbc_plano_testeDeleteDialogComponent;
var Tbc_plano_testeDeletePopupComponent = (function () {
    function Tbc_plano_testeDeletePopupComponent(route, tbc_plano_testePopupService) {
        this.route = route;
        this.tbc_plano_testePopupService = tbc_plano_testePopupService;
    }
    Tbc_plano_testeDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_plano_testePopupService
                .open(Tbc_plano_testeDeleteDialogComponent, params['id']);
        });
    };
    Tbc_plano_testeDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_plano_testeDeletePopupComponent;
}());
Tbc_plano_testeDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_plano_teste_popup_service_1.Tbc_plano_testePopupService])
], Tbc_plano_testeDeletePopupComponent);
exports.Tbc_plano_testeDeletePopupComponent = Tbc_plano_testeDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_plano_teste\">\n    <h2><span jhiTranslate=\"limsApp.tbc_plano_teste.detail.title\">Tbc Plano Teste</span> {{tbc_plano_teste.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_plano_teste.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_plano_teste.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_plano_teste.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_plano_teste.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_plano_teste.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_plano_teste.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_plano_teste.tbc_tipo_cadastro\">Tbc Tipo Cadastro</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_plano_teste.tbc_tipo_cadastro\">\n                <a [routerLink]=\"['/tbc-tipo-cadastro', tbc_plano_teste.tbc_tipo_cadastro?.id]\">{{tbc_plano_teste.tbc_tipo_cadastro?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_plano_teste.tbc_sub_grupo\">Tbc Sub Grupo</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_plano_teste.tbc_sub_grupo\">\n                <a [routerLink]=\"['/tbc-sub-grupo', tbc_plano_teste.tbc_sub_grupo?.id]\">{{tbc_plano_teste.tbc_sub_grupo?.id}}</a>\n            </div>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_plano_teste.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_plano_teste.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_plano_teste.tbc_instituicao?.id]\">{{tbc_plano_teste.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-plano-teste/'+ tbc_plano_teste.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.service.ts");
var Tbc_plano_testeDetailComponent = (function () {
    function Tbc_plano_testeDetailComponent(jhiLanguageService, dataUtils, tbc_plano_testeService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.tbc_plano_testeService = tbc_plano_testeService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_plano_teste']);
    }
    Tbc_plano_testeDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_plano_testeDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_plano_testeService.find(id).subscribe(function (tbc_plano_teste) {
            _this.tbc_plano_teste = tbc_plano_teste;
        });
    };
    Tbc_plano_testeDetailComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_plano_testeDetailComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_plano_testeDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_plano_testeDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_plano_testeDetailComponent;
}());
Tbc_plano_testeDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        tbc_plano_teste_service_1.Tbc_plano_testeService,
        router_1.ActivatedRoute])
], Tbc_plano_testeDetailComponent);
exports.Tbc_plano_testeDetailComponent = Tbc_plano_testeDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_plano_testeLabel\" jhiTranslate=\"limsApp.tbc_plano_teste.home.createOrEditLabel\">Create or edit a Tbc Plano Teste</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_plano_teste.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_plano_teste.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_plano_teste.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_plano_teste.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_plano_teste.descricao\" for=\"field_descricao\">Descricao</label>\n            <textarea class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_plano_teste.descricao\"  ></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_plano_teste.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_plano_teste.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_plano_teste.tbc_tipo_cadastro\" for=\"field_tbc_tipo_cadastro\">Tbc Tipo Cadastro</label>\n            <select class=\"form-control\" id=\"field_tbc_tipo_cadastro\" name=\"tbc_tipo_cadastro\" [(ngModel)]=\"tbc_plano_teste.tbc_tipo_cadastro\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_tipo_cadastroOption.id === tbc_plano_teste.tbc_tipo_cadastro?.id ? tbc_plano_teste.tbc_tipo_cadastro : tbc_tipo_cadastroOption\" *ngFor=\"let tbc_tipo_cadastroOption of tbc_tipo_cadastros; trackBy: trackTbc_tipo_cadastroById\">{{tbc_tipo_cadastroOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_tipo_cadastro?.dirty && editForm.controls.tbc_tipo_cadastro?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_tipo_cadastro?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_plano_teste.tbc_sub_grupo\" for=\"field_tbc_sub_grupo\">Tbc Sub Grupo</label>\n            <select class=\"form-control\" id=\"field_tbc_sub_grupo\" name=\"tbc_sub_grupo\" [(ngModel)]=\"tbc_plano_teste.tbc_sub_grupo\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_sub_grupoOption.id === tbc_plano_teste.tbc_sub_grupo?.id ? tbc_plano_teste.tbc_sub_grupo : tbc_sub_grupoOption\" *ngFor=\"let tbc_sub_grupoOption of tbc_sub_grupos; trackBy: trackTbc_sub_grupoById\">{{tbc_sub_grupoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_sub_grupo?.dirty && editForm.controls.tbc_sub_grupo?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_sub_grupo?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_plano_teste.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_plano_teste.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_plano_teste.tbc_instituicao?.id ? tbc_plano_teste.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-popup.service.ts");
var tbc_plano_teste_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.service.ts");
var tbc_tipo_cadastro_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/index.ts");
var tbc_sub_grupo_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/index.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var Tbc_plano_testeDialogComponent = (function () {
    function Tbc_plano_testeDialogComponent(activeModal, jhiLanguageService, dataUtils, alertService, tbc_plano_testeService, tbc_tipo_cadastroService, tbc_sub_grupoService, tbc_instituicaoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.alertService = alertService;
        this.tbc_plano_testeService = tbc_plano_testeService;
        this.tbc_tipo_cadastroService = tbc_tipo_cadastroService;
        this.tbc_sub_grupoService = tbc_sub_grupoService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_plano_teste']);
    }
    Tbc_plano_testeDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_tipo_cadastroService.query().subscribe(function (res) { _this.tbc_tipo_cadastros = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_sub_grupoService.query().subscribe(function (res) { _this.tbc_sub_grupos = res.json(); }, function (res) { return _this.onError(res.json()); });
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_plano_testeDialogComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_plano_testeDialogComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_plano_testeDialogComponent.prototype.setFileData = function ($event, tbc_plano_teste, field, isImage) {
        if ($event.target.files && $event.target.files[0]) {
            var $file_1 = $event.target.files[0];
            if (isImage && !/^image\//.test($file_1.type)) {
                return;
            }
            this.dataUtils.toBase64($file_1, function (base64Data) {
                tbc_plano_teste[field] = base64Data;
                tbc_plano_teste[field + "ContentType"] = $file_1.type;
            });
        }
    };
    Tbc_plano_testeDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_plano_testeDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_plano_teste.id !== undefined) {
            this.tbc_plano_testeService.update(this.tbc_plano_teste)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_plano_testeService.create(this.tbc_plano_teste)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_plano_testeDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_plano_testeListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_plano_testeDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_plano_testeDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_plano_testeDialogComponent.prototype.trackTbc_tipo_cadastroById = function (index, item) {
        return item.id;
    };
    Tbc_plano_testeDialogComponent.prototype.trackTbc_sub_grupoById = function (index, item) {
        return item.id;
    };
    Tbc_plano_testeDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    return Tbc_plano_testeDialogComponent;
}());
Tbc_plano_testeDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        ng_jhipster_1.AlertService,
        tbc_plano_teste_service_1.Tbc_plano_testeService,
        tbc_tipo_cadastro_1.Tbc_tipo_cadastroService,
        tbc_sub_grupo_1.Tbc_sub_grupoService,
        tbc_instituicao_1.Tbc_instituicaoService,
        ng_jhipster_1.EventManager])
], Tbc_plano_testeDialogComponent);
exports.Tbc_plano_testeDialogComponent = Tbc_plano_testeDialogComponent;
var Tbc_plano_testePopupComponent = (function () {
    function Tbc_plano_testePopupComponent(route, tbc_plano_testePopupService) {
        this.route = route;
        this.tbc_plano_testePopupService = tbc_plano_testePopupService;
    }
    Tbc_plano_testePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_plano_testePopupService
                    .open(Tbc_plano_testeDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_plano_testePopupService
                    .open(Tbc_plano_testeDialogComponent);
            }
        });
    };
    Tbc_plano_testePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_plano_testePopupComponent;
}());
Tbc_plano_testePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_plano_teste_popup_service_1.Tbc_plano_testePopupService])
], Tbc_plano_testePopupComponent);
exports.Tbc_plano_testePopupComponent = Tbc_plano_testePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_plano_teste_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.model.ts");
var tbc_plano_teste_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.service.ts");
var Tbc_plano_testePopupService = (function () {
    function Tbc_plano_testePopupService(modalService, router, tbc_plano_testeService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_plano_testeService = tbc_plano_testeService;
        this.isOpen = false;
    }
    Tbc_plano_testePopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_plano_testeService.find(id).subscribe(function (tbc_plano_teste) {
                _this.tbc_plano_testeModalRef(component, tbc_plano_teste);
            });
        }
        else {
            return this.tbc_plano_testeModalRef(component, new tbc_plano_teste_model_1.Tbc_plano_teste());
        }
    };
    Tbc_plano_testePopupService.prototype.tbc_plano_testeModalRef = function (component, tbc_plano_teste) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_plano_teste = tbc_plano_teste;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_plano_testePopupService;
}());
Tbc_plano_testePopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_plano_teste_service_1.Tbc_plano_testeService])
], Tbc_plano_testePopupService);
exports.Tbc_plano_testePopupService = Tbc_plano_testePopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_plano_teste.home.title\">Tbc Plano Testes</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-plano-teste\" [routerLink]=\"['/', { outlets: { popup: ['tbc-plano-teste-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_plano_teste.home.createLabel\">\n            Create new Tbc Plano Teste\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_plano_teste.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_plano_testes\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_plano_teste.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_plano_teste.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_plano_teste.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_tipo_cadastro.id\"><span jhiTranslate=\"limsApp.tbc_plano_teste.tbc_tipo_cadastro\">Tbc Tipo Cadastro</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_sub_grupo.id\"><span jhiTranslate=\"limsApp.tbc_plano_teste.tbc_sub_grupo\">Tbc Sub Grupo</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_plano_teste.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_plano_teste of tbc_plano_testes ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-plano-teste', tbc_plano_teste.id ]\">{{tbc_plano_teste.id}}</a></td>\n                <td>{{tbc_plano_teste.nome}}</td>\n                <td>{{tbc_plano_teste.descricao}}</td>\n                <td>{{tbc_plano_teste.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_plano_teste.tbc_tipo_cadastro\">\n                        <a [routerLink]=\"['../tbc-tipo-cadastro', tbc_plano_teste.tbc_tipo_cadastro?.id ]\" >{{tbc_plano_teste.tbc_tipo_cadastro?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_plano_teste.tbc_sub_grupo\">\n                        <a [routerLink]=\"['../tbc-sub-grupo', tbc_plano_teste.tbc_sub_grupo?.id ]\" >{{tbc_plano_teste.tbc_sub_grupo?.id}}</a>\n                    </div>\n                </td>\n                <td>\n                    <div *ngIf=\"tbc_plano_teste.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_plano_teste.tbc_instituicao?.id ]\" >{{tbc_plano_teste.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-plano-teste', tbc_plano_teste.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-plano-teste/'+ tbc_plano_teste.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-plano-teste/'+ tbc_plano_teste.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_plano_testes && tbc_plano_testes.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_plano_testeComponent = (function () {
    function Tbc_plano_testeComponent(jhiLanguageService, tbc_plano_testeService, parseLinks, alertService, principal, activatedRoute, dataUtils, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_plano_testeService = tbc_plano_testeService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.dataUtils = dataUtils;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_plano_teste']);
    }
    Tbc_plano_testeComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_plano_testeService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_plano_testeService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_plano_testeComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_plano_testeComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-plano-teste'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_plano_testeComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-plano-teste', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_plano_testeComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-plano-teste', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_plano_testeComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_plano_testes();
    };
    Tbc_plano_testeComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_plano_testeComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_plano_testeComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_plano_testeComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_plano_testeComponent.prototype.registerChangeInTbc_plano_testes = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_plano_testeListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_plano_testeComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_plano_testeComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_plano_testes = data;
    };
    Tbc_plano_testeComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_plano_testeComponent;
}());
Tbc_plano_testeComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-plano-teste',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_plano_teste_service_1.Tbc_plano_testeService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        ng_jhipster_1.DataUtils,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_plano_testeComponent);
exports.Tbc_plano_testeComponent = Tbc_plano_testeComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_plano_teste = (function () {
    function Tbc_plano_teste(id, nome, descricao, removido, tbc_tipo_cadastro, tbc_sub_grupo, tbc_instituicao) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.removido = removido;
        this.tbc_tipo_cadastro = tbc_tipo_cadastro;
        this.tbc_sub_grupo = tbc_sub_grupo;
        this.tbc_instituicao = tbc_instituicao;
    }
    return Tbc_plano_teste;
}());
exports.Tbc_plano_teste = Tbc_plano_teste;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/index.ts");
var ENTITY_STATES = _1.tbc_plano_testeRoute.concat(_1.tbc_plano_testePopupRoute);
var LimsTbc_plano_testeModule = (function () {
    function LimsTbc_plano_testeModule() {
    }
    return LimsTbc_plano_testeModule;
}());
LimsTbc_plano_testeModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_plano_testeComponent,
            _1.Tbc_plano_testeDetailComponent,
            _1.Tbc_plano_testeDialogComponent,
            _1.Tbc_plano_testeDeleteDialogComponent,
            _1.Tbc_plano_testePopupComponent,
            _1.Tbc_plano_testeDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_plano_testeComponent,
            _1.Tbc_plano_testeDialogComponent,
            _1.Tbc_plano_testePopupComponent,
            _1.Tbc_plano_testeDeleteDialogComponent,
            _1.Tbc_plano_testeDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_plano_testeService,
            _1.Tbc_plano_testePopupService,
            _1.Tbc_plano_testeResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_plano_testeModule);
exports.LimsTbc_plano_testeModule = LimsTbc_plano_testeModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_plano_teste_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.component.ts");
var tbc_plano_teste_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-detail.component.ts");
var tbc_plano_teste_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-dialog.component.ts");
var tbc_plano_teste_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste-delete-dialog.component.ts");
var Tbc_plano_testeResolvePagingParams = (function () {
    function Tbc_plano_testeResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_plano_testeResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_plano_testeResolvePagingParams;
}());
Tbc_plano_testeResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_plano_testeResolvePagingParams);
exports.Tbc_plano_testeResolvePagingParams = Tbc_plano_testeResolvePagingParams;
exports.tbc_plano_testeRoute = [
    {
        path: 'tbc-plano-teste',
        component: tbc_plano_teste_component_1.Tbc_plano_testeComponent,
        resolve: {
            'pagingParams': Tbc_plano_testeResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste.home.title'
        }
    }, {
        path: 'tbc-plano-teste/:id',
        component: tbc_plano_teste_detail_component_1.Tbc_plano_testeDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste.home.title'
        }
    }
];
exports.tbc_plano_testePopupRoute = [
    {
        path: 'tbc-plano-teste-new',
        component: tbc_plano_teste_dialog_component_1.Tbc_plano_testePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-plano-teste/:id/edit',
        component: tbc_plano_teste_dialog_component_1.Tbc_plano_testePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-plano-teste/:id/delete',
        component: tbc_plano_teste_delete_dialog_component_1.Tbc_plano_testeDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_plano_teste.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-plano-teste/tbc-plano-teste.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_plano_testeService = (function () {
    function Tbc_plano_testeService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-plano-testes';
        this.resourceSearchUrl = 'api/_search/tbc-plano-testes';
    }
    Tbc_plano_testeService.prototype.create = function (tbc_plano_teste) {
        var copy = Object.assign({}, tbc_plano_teste);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_plano_testeService.prototype.update = function (tbc_plano_teste) {
        var copy = Object.assign({}, tbc_plano_teste);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_plano_testeService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_plano_testeService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_plano_testeService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_plano_testeService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_plano_testeService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_plano_testeService;
}());
Tbc_plano_testeService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_plano_testeService);
exports.Tbc_plano_testeService = Tbc_plano_testeService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_relatorio_ensaio.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_relatorio_ensaio.delete.question\" translateValues=\"{id: '{{tbc_relatorio_ensaio.id}}'}\">Are you sure you want to delete this Tbc Relatorio Ensaio?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_relatorio_ensaio_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-popup.service.ts");
var tbc_relatorio_ensaio_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.service.ts");
var Tbc_relatorio_ensaioDeleteDialogComponent = (function () {
    function Tbc_relatorio_ensaioDeleteDialogComponent(jhiLanguageService, tbc_relatorio_ensaioService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_relatorio_ensaioService = tbc_relatorio_ensaioService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_relatorio_ensaio']);
    }
    Tbc_relatorio_ensaioDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_relatorio_ensaioDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_relatorio_ensaioService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_relatorio_ensaioListModification',
                content: 'Deleted an tbc_relatorio_ensaio'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_relatorio_ensaioDeleteDialogComponent;
}());
Tbc_relatorio_ensaioDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-relatorio-ensaio-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_relatorio_ensaio_service_1.Tbc_relatorio_ensaioService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_relatorio_ensaioDeleteDialogComponent);
exports.Tbc_relatorio_ensaioDeleteDialogComponent = Tbc_relatorio_ensaioDeleteDialogComponent;
var Tbc_relatorio_ensaioDeletePopupComponent = (function () {
    function Tbc_relatorio_ensaioDeletePopupComponent(route, tbc_relatorio_ensaioPopupService) {
        this.route = route;
        this.tbc_relatorio_ensaioPopupService = tbc_relatorio_ensaioPopupService;
    }
    Tbc_relatorio_ensaioDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_relatorio_ensaioPopupService
                .open(Tbc_relatorio_ensaioDeleteDialogComponent, params['id']);
        });
    };
    Tbc_relatorio_ensaioDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_relatorio_ensaioDeletePopupComponent;
}());
Tbc_relatorio_ensaioDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-relatorio-ensaio-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_relatorio_ensaio_popup_service_1.Tbc_relatorio_ensaioPopupService])
], Tbc_relatorio_ensaioDeletePopupComponent);
exports.Tbc_relatorio_ensaioDeletePopupComponent = Tbc_relatorio_ensaioDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_relatorio_ensaio\">\n    <h2><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.detail.title\">Tbc Relatorio Ensaio</span> {{tbc_relatorio_ensaio.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_relatorio_ensaio.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_relatorio_ensaio.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.caminho\">Caminho</span></dt>\n        <dd>\n            <span>{{tbc_relatorio_ensaio.caminho}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_relatorio_ensaio.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_relatorio_ensaio.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_relatorio_ensaio.tbc_instituicao?.id]\">{{tbc_relatorio_ensaio.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-relatorio-ensaio/'+ tbc_relatorio_ensaio.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_relatorio_ensaio_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.service.ts");
var Tbc_relatorio_ensaioDetailComponent = (function () {
    function Tbc_relatorio_ensaioDetailComponent(jhiLanguageService, dataUtils, tbc_relatorio_ensaioService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.tbc_relatorio_ensaioService = tbc_relatorio_ensaioService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_relatorio_ensaio']);
    }
    Tbc_relatorio_ensaioDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_relatorio_ensaioDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_relatorio_ensaioService.find(id).subscribe(function (tbc_relatorio_ensaio) {
            _this.tbc_relatorio_ensaio = tbc_relatorio_ensaio;
        });
    };
    Tbc_relatorio_ensaioDetailComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_relatorio_ensaioDetailComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_relatorio_ensaioDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_relatorio_ensaioDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_relatorio_ensaioDetailComponent;
}());
Tbc_relatorio_ensaioDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-relatorio-ensaio-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        tbc_relatorio_ensaio_service_1.Tbc_relatorio_ensaioService,
        router_1.ActivatedRoute])
], Tbc_relatorio_ensaioDetailComponent);
exports.Tbc_relatorio_ensaioDetailComponent = Tbc_relatorio_ensaioDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_relatorio_ensaioLabel\" jhiTranslate=\"limsApp.tbc_relatorio_ensaio.home.createOrEditLabel\">Create or edit a Tbc Relatorio Ensaio</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_relatorio_ensaio.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_relatorio_ensaio.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_relatorio_ensaio.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_relatorio_ensaio.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_relatorio_ensaio.descricao\" for=\"field_descricao\">Descricao</label>\n            <textarea class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_relatorio_ensaio.descricao\"  ></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_relatorio_ensaio.caminho\" for=\"field_caminho\">Caminho</label>\n            <input type=\"text\" class=\"form-control\" name=\"caminho\" id=\"field_caminho\"\n                [(ngModel)]=\"tbc_relatorio_ensaio.caminho\"\n            required />\n            <div [hidden]=\"!(editForm.controls.caminho?.dirty && editForm.controls.caminho?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.caminho?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_relatorio_ensaio.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_relatorio_ensaio.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_relatorio_ensaio.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_relatorio_ensaio.tbc_instituicao\" >\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_relatorio_ensaio.tbc_instituicao?.id ? tbc_relatorio_ensaio.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_relatorio_ensaio_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-popup.service.ts");
var tbc_relatorio_ensaio_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var Tbc_relatorio_ensaioDialogComponent = (function () {
    function Tbc_relatorio_ensaioDialogComponent(activeModal, jhiLanguageService, dataUtils, alertService, tbc_relatorio_ensaioService, tbc_instituicaoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.alertService = alertService;
        this.tbc_relatorio_ensaioService = tbc_relatorio_ensaioService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_relatorio_ensaio']);
    }
    Tbc_relatorio_ensaioDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_relatorio_ensaioDialogComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_relatorio_ensaioDialogComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_relatorio_ensaioDialogComponent.prototype.setFileData = function ($event, tbc_relatorio_ensaio, field, isImage) {
        if ($event.target.files && $event.target.files[0]) {
            var $file_1 = $event.target.files[0];
            if (isImage && !/^image\//.test($file_1.type)) {
                return;
            }
            this.dataUtils.toBase64($file_1, function (base64Data) {
                tbc_relatorio_ensaio[field] = base64Data;
                tbc_relatorio_ensaio[field + "ContentType"] = $file_1.type;
            });
        }
    };
    Tbc_relatorio_ensaioDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_relatorio_ensaioDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_relatorio_ensaio.id !== undefined) {
            this.tbc_relatorio_ensaioService.update(this.tbc_relatorio_ensaio)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_relatorio_ensaioService.create(this.tbc_relatorio_ensaio)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_relatorio_ensaioDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_relatorio_ensaioListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_relatorio_ensaioDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_relatorio_ensaioDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_relatorio_ensaioDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    return Tbc_relatorio_ensaioDialogComponent;
}());
Tbc_relatorio_ensaioDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-relatorio-ensaio-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        ng_jhipster_1.AlertService,
        tbc_relatorio_ensaio_service_1.Tbc_relatorio_ensaioService,
        tbc_instituicao_1.Tbc_instituicaoService,
        ng_jhipster_1.EventManager])
], Tbc_relatorio_ensaioDialogComponent);
exports.Tbc_relatorio_ensaioDialogComponent = Tbc_relatorio_ensaioDialogComponent;
var Tbc_relatorio_ensaioPopupComponent = (function () {
    function Tbc_relatorio_ensaioPopupComponent(route, tbc_relatorio_ensaioPopupService) {
        this.route = route;
        this.tbc_relatorio_ensaioPopupService = tbc_relatorio_ensaioPopupService;
    }
    Tbc_relatorio_ensaioPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_relatorio_ensaioPopupService
                    .open(Tbc_relatorio_ensaioDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_relatorio_ensaioPopupService
                    .open(Tbc_relatorio_ensaioDialogComponent);
            }
        });
    };
    Tbc_relatorio_ensaioPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_relatorio_ensaioPopupComponent;
}());
Tbc_relatorio_ensaioPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-relatorio-ensaio-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_relatorio_ensaio_popup_service_1.Tbc_relatorio_ensaioPopupService])
], Tbc_relatorio_ensaioPopupComponent);
exports.Tbc_relatorio_ensaioPopupComponent = Tbc_relatorio_ensaioPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_relatorio_ensaio_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.model.ts");
var tbc_relatorio_ensaio_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.service.ts");
var Tbc_relatorio_ensaioPopupService = (function () {
    function Tbc_relatorio_ensaioPopupService(modalService, router, tbc_relatorio_ensaioService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_relatorio_ensaioService = tbc_relatorio_ensaioService;
        this.isOpen = false;
    }
    Tbc_relatorio_ensaioPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_relatorio_ensaioService.find(id).subscribe(function (tbc_relatorio_ensaio) {
                _this.tbc_relatorio_ensaioModalRef(component, tbc_relatorio_ensaio);
            });
        }
        else {
            return this.tbc_relatorio_ensaioModalRef(component, new tbc_relatorio_ensaio_model_1.Tbc_relatorio_ensaio());
        }
    };
    Tbc_relatorio_ensaioPopupService.prototype.tbc_relatorio_ensaioModalRef = function (component, tbc_relatorio_ensaio) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_relatorio_ensaio = tbc_relatorio_ensaio;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_relatorio_ensaioPopupService;
}());
Tbc_relatorio_ensaioPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_relatorio_ensaio_service_1.Tbc_relatorio_ensaioService])
], Tbc_relatorio_ensaioPopupService);
exports.Tbc_relatorio_ensaioPopupService = Tbc_relatorio_ensaioPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.home.title\">Tbc Relatorio Ensaios</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-relatorio-ensaio\" [routerLink]=\"['/', { outlets: { popup: ['tbc-relatorio-ensaio-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_relatorio_ensaio.home.createLabel\">\n            Create new Tbc Relatorio Ensaio\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_relatorio_ensaio.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_relatorio_ensaios\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"caminho\"><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.caminho\">Caminho</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_relatorio_ensaio.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_relatorio_ensaio of tbc_relatorio_ensaios ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-relatorio-ensaio', tbc_relatorio_ensaio.id ]\">{{tbc_relatorio_ensaio.id}}</a></td>\n                <td>{{tbc_relatorio_ensaio.nome}}</td>\n                <td>{{tbc_relatorio_ensaio.descricao}}</td>\n                <td>{{tbc_relatorio_ensaio.caminho}}</td>\n                <td>{{tbc_relatorio_ensaio.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_relatorio_ensaio.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_relatorio_ensaio.tbc_instituicao?.id ]\" >{{tbc_relatorio_ensaio.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-relatorio-ensaio', tbc_relatorio_ensaio.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-relatorio-ensaio/'+ tbc_relatorio_ensaio.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-relatorio-ensaio/'+ tbc_relatorio_ensaio.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_relatorio_ensaios && tbc_relatorio_ensaios.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_relatorio_ensaio_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_relatorio_ensaioComponent = (function () {
    function Tbc_relatorio_ensaioComponent(jhiLanguageService, tbc_relatorio_ensaioService, parseLinks, alertService, principal, activatedRoute, dataUtils, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_relatorio_ensaioService = tbc_relatorio_ensaioService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.dataUtils = dataUtils;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_relatorio_ensaio']);
    }
    Tbc_relatorio_ensaioComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_relatorio_ensaioService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_relatorio_ensaioService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_relatorio_ensaioComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_relatorio_ensaioComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-relatorio-ensaio'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_relatorio_ensaioComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-relatorio-ensaio', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_relatorio_ensaioComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-relatorio-ensaio', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_relatorio_ensaioComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_relatorio_ensaios();
    };
    Tbc_relatorio_ensaioComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_relatorio_ensaioComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_relatorio_ensaioComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_relatorio_ensaioComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_relatorio_ensaioComponent.prototype.registerChangeInTbc_relatorio_ensaios = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_relatorio_ensaioListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_relatorio_ensaioComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_relatorio_ensaioComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_relatorio_ensaios = data;
    };
    Tbc_relatorio_ensaioComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_relatorio_ensaioComponent;
}());
Tbc_relatorio_ensaioComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-relatorio-ensaio',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_relatorio_ensaio_service_1.Tbc_relatorio_ensaioService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        ng_jhipster_1.DataUtils,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_relatorio_ensaioComponent);
exports.Tbc_relatorio_ensaioComponent = Tbc_relatorio_ensaioComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_relatorio_ensaio = (function () {
    function Tbc_relatorio_ensaio(id, nome, descricao, caminho, removido, tbc_instituicao) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.caminho = caminho;
        this.removido = removido;
        this.tbc_instituicao = tbc_instituicao;
    }
    return Tbc_relatorio_ensaio;
}());
exports.Tbc_relatorio_ensaio = Tbc_relatorio_ensaio;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/index.ts");
var ENTITY_STATES = _1.tbc_relatorio_ensaioRoute.concat(_1.tbc_relatorio_ensaioPopupRoute);
var LimsTbc_relatorio_ensaioModule = (function () {
    function LimsTbc_relatorio_ensaioModule() {
    }
    return LimsTbc_relatorio_ensaioModule;
}());
LimsTbc_relatorio_ensaioModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_relatorio_ensaioComponent,
            _1.Tbc_relatorio_ensaioDetailComponent,
            _1.Tbc_relatorio_ensaioDialogComponent,
            _1.Tbc_relatorio_ensaioDeleteDialogComponent,
            _1.Tbc_relatorio_ensaioPopupComponent,
            _1.Tbc_relatorio_ensaioDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_relatorio_ensaioComponent,
            _1.Tbc_relatorio_ensaioDialogComponent,
            _1.Tbc_relatorio_ensaioPopupComponent,
            _1.Tbc_relatorio_ensaioDeleteDialogComponent,
            _1.Tbc_relatorio_ensaioDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_relatorio_ensaioService,
            _1.Tbc_relatorio_ensaioPopupService,
            _1.Tbc_relatorio_ensaioResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_relatorio_ensaioModule);
exports.LimsTbc_relatorio_ensaioModule = LimsTbc_relatorio_ensaioModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_relatorio_ensaio_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.component.ts");
var tbc_relatorio_ensaio_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-detail.component.ts");
var tbc_relatorio_ensaio_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-dialog.component.ts");
var tbc_relatorio_ensaio_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio-delete-dialog.component.ts");
var Tbc_relatorio_ensaioResolvePagingParams = (function () {
    function Tbc_relatorio_ensaioResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_relatorio_ensaioResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_relatorio_ensaioResolvePagingParams;
}());
Tbc_relatorio_ensaioResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_relatorio_ensaioResolvePagingParams);
exports.Tbc_relatorio_ensaioResolvePagingParams = Tbc_relatorio_ensaioResolvePagingParams;
exports.tbc_relatorio_ensaioRoute = [
    {
        path: 'tbc-relatorio-ensaio',
        component: tbc_relatorio_ensaio_component_1.Tbc_relatorio_ensaioComponent,
        resolve: {
            'pagingParams': Tbc_relatorio_ensaioResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_relatorio_ensaio.home.title'
        }
    }, {
        path: 'tbc-relatorio-ensaio/:id',
        component: tbc_relatorio_ensaio_detail_component_1.Tbc_relatorio_ensaioDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_relatorio_ensaio.home.title'
        }
    }
];
exports.tbc_relatorio_ensaioPopupRoute = [
    {
        path: 'tbc-relatorio-ensaio-new',
        component: tbc_relatorio_ensaio_dialog_component_1.Tbc_relatorio_ensaioPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_relatorio_ensaio.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-relatorio-ensaio/:id/edit',
        component: tbc_relatorio_ensaio_dialog_component_1.Tbc_relatorio_ensaioPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_relatorio_ensaio.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-relatorio-ensaio/:id/delete',
        component: tbc_relatorio_ensaio_delete_dialog_component_1.Tbc_relatorio_ensaioDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_relatorio_ensaio.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-relatorio-ensaio/tbc-relatorio-ensaio.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_relatorio_ensaioService = (function () {
    function Tbc_relatorio_ensaioService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-relatorio-ensaios';
        this.resourceSearchUrl = 'api/_search/tbc-relatorio-ensaios';
    }
    Tbc_relatorio_ensaioService.prototype.create = function (tbc_relatorio_ensaio) {
        var copy = Object.assign({}, tbc_relatorio_ensaio);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_relatorio_ensaioService.prototype.update = function (tbc_relatorio_ensaio) {
        var copy = Object.assign({}, tbc_relatorio_ensaio);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_relatorio_ensaioService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_relatorio_ensaioService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_relatorio_ensaioService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_relatorio_ensaioService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_relatorio_ensaioService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_relatorio_ensaioService;
}());
Tbc_relatorio_ensaioService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_relatorio_ensaioService);
exports.Tbc_relatorio_ensaioService = Tbc_relatorio_ensaioService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_report.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_report.delete.question\" translateValues=\"{id: '{{tbc_report.id}}'}\">Are you sure you want to delete this Tbc Report?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_report_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-popup.service.ts");
var tbc_report_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.service.ts");
var Tbc_reportDeleteDialogComponent = (function () {
    function Tbc_reportDeleteDialogComponent(jhiLanguageService, tbc_reportService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_reportService = tbc_reportService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_report']);
    }
    Tbc_reportDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_reportDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_reportService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_reportListModification',
                content: 'Deleted an tbc_report'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_reportDeleteDialogComponent;
}());
Tbc_reportDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-report-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_report_service_1.Tbc_reportService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_reportDeleteDialogComponent);
exports.Tbc_reportDeleteDialogComponent = Tbc_reportDeleteDialogComponent;
var Tbc_reportDeletePopupComponent = (function () {
    function Tbc_reportDeletePopupComponent(route, tbc_reportPopupService) {
        this.route = route;
        this.tbc_reportPopupService = tbc_reportPopupService;
    }
    Tbc_reportDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_reportPopupService
                .open(Tbc_reportDeleteDialogComponent, params['id']);
        });
    };
    Tbc_reportDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_reportDeletePopupComponent;
}());
Tbc_reportDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-report-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_report_popup_service_1.Tbc_reportPopupService])
], Tbc_reportDeletePopupComponent);
exports.Tbc_reportDeletePopupComponent = Tbc_reportDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_report\">\n    <h2><span jhiTranslate=\"limsApp.tbc_report.detail.title\">Tbc Report</span> {{tbc_report.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_report.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_report.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_report.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_report.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_report.arquivo\">Arquivo</span></dt>\n        <dd>\n            <span>{{tbc_report.arquivo}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_report.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_report.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_report.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_report.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_report.tbc_instituicao?.id]\">{{tbc_report.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-report/'+ tbc_report.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_report_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.service.ts");
var Tbc_reportDetailComponent = (function () {
    function Tbc_reportDetailComponent(jhiLanguageService, dataUtils, tbc_reportService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.tbc_reportService = tbc_reportService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_report']);
    }
    Tbc_reportDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_reportDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_reportService.find(id).subscribe(function (tbc_report) {
            _this.tbc_report = tbc_report;
        });
    };
    Tbc_reportDetailComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_reportDetailComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_reportDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_reportDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_reportDetailComponent;
}());
Tbc_reportDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-report-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        tbc_report_service_1.Tbc_reportService,
        router_1.ActivatedRoute])
], Tbc_reportDetailComponent);
exports.Tbc_reportDetailComponent = Tbc_reportDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_reportLabel\" jhiTranslate=\"limsApp.tbc_report.home.createOrEditLabel\">Create or edit a Tbc Report</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_report.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_report.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_report.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_report.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_report.descricao\" for=\"field_descricao\">Descricao</label>\n            <textarea class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_report.descricao\"  ></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_report.arquivo\" for=\"field_arquivo\">Arquivo</label>\n            <input type=\"text\" class=\"form-control\" name=\"arquivo\" id=\"field_arquivo\"\n                [(ngModel)]=\"tbc_report.arquivo\"\n            required />\n            <div [hidden]=\"!(editForm.controls.arquivo?.dirty && editForm.controls.arquivo?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.arquivo?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_report.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_report.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_report.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_report.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_report.tbc_instituicao?.id ? tbc_report.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_report_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-popup.service.ts");
var tbc_report_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var Tbc_reportDialogComponent = (function () {
    function Tbc_reportDialogComponent(activeModal, jhiLanguageService, dataUtils, alertService, tbc_reportService, tbc_instituicaoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.dataUtils = dataUtils;
        this.alertService = alertService;
        this.tbc_reportService = tbc_reportService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_report']);
    }
    Tbc_reportDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_reportDialogComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_reportDialogComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_reportDialogComponent.prototype.setFileData = function ($event, tbc_report, field, isImage) {
        if ($event.target.files && $event.target.files[0]) {
            var $file_1 = $event.target.files[0];
            if (isImage && !/^image\//.test($file_1.type)) {
                return;
            }
            this.dataUtils.toBase64($file_1, function (base64Data) {
                tbc_report[field] = base64Data;
                tbc_report[field + "ContentType"] = $file_1.type;
            });
        }
    };
    Tbc_reportDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_reportDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_report.id !== undefined) {
            this.tbc_reportService.update(this.tbc_report)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_reportService.create(this.tbc_report)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_reportDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_reportListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_reportDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_reportDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_reportDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    return Tbc_reportDialogComponent;
}());
Tbc_reportDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-report-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.DataUtils,
        ng_jhipster_1.AlertService,
        tbc_report_service_1.Tbc_reportService,
        tbc_instituicao_1.Tbc_instituicaoService,
        ng_jhipster_1.EventManager])
], Tbc_reportDialogComponent);
exports.Tbc_reportDialogComponent = Tbc_reportDialogComponent;
var Tbc_reportPopupComponent = (function () {
    function Tbc_reportPopupComponent(route, tbc_reportPopupService) {
        this.route = route;
        this.tbc_reportPopupService = tbc_reportPopupService;
    }
    Tbc_reportPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_reportPopupService
                    .open(Tbc_reportDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_reportPopupService
                    .open(Tbc_reportDialogComponent);
            }
        });
    };
    Tbc_reportPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_reportPopupComponent;
}());
Tbc_reportPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-report-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_report_popup_service_1.Tbc_reportPopupService])
], Tbc_reportPopupComponent);
exports.Tbc_reportPopupComponent = Tbc_reportPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_report_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.model.ts");
var tbc_report_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.service.ts");
var Tbc_reportPopupService = (function () {
    function Tbc_reportPopupService(modalService, router, tbc_reportService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_reportService = tbc_reportService;
        this.isOpen = false;
    }
    Tbc_reportPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_reportService.find(id).subscribe(function (tbc_report) {
                _this.tbc_reportModalRef(component, tbc_report);
            });
        }
        else {
            return this.tbc_reportModalRef(component, new tbc_report_model_1.Tbc_report());
        }
    };
    Tbc_reportPopupService.prototype.tbc_reportModalRef = function (component, tbc_report) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_report = tbc_report;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_reportPopupService;
}());
Tbc_reportPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_report_service_1.Tbc_reportService])
], Tbc_reportPopupService);
exports.Tbc_reportPopupService = Tbc_reportPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_report.home.title\">Tbc Reports</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-report\" [routerLink]=\"['/', { outlets: { popup: ['tbc-report-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_report.home.createLabel\">\n            Create new Tbc Report\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_report.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_reports\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_report.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_report.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"arquivo\"><span jhiTranslate=\"limsApp.tbc_report.arquivo\">Arquivo</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_report.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_report.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_report of tbc_reports ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-report', tbc_report.id ]\">{{tbc_report.id}}</a></td>\n                <td>{{tbc_report.nome}}</td>\n                <td>{{tbc_report.descricao}}</td>\n                <td>{{tbc_report.arquivo}}</td>\n                <td>{{tbc_report.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_report.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_report.tbc_instituicao?.id ]\" >{{tbc_report.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-report', tbc_report.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-report/'+ tbc_report.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-report/'+ tbc_report.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_reports && tbc_reports.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_report_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_reportComponent = (function () {
    function Tbc_reportComponent(jhiLanguageService, tbc_reportService, parseLinks, alertService, principal, activatedRoute, dataUtils, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_reportService = tbc_reportService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.dataUtils = dataUtils;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_report']);
    }
    Tbc_reportComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_reportService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_reportService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_reportComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_reportComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-report'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_reportComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-report', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_reportComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-report', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_reportComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_reports();
    };
    Tbc_reportComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_reportComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_reportComponent.prototype.byteSize = function (field) {
        return this.dataUtils.byteSize(field);
    };
    Tbc_reportComponent.prototype.openFile = function (contentType, field) {
        return this.dataUtils.openFile(contentType, field);
    };
    Tbc_reportComponent.prototype.registerChangeInTbc_reports = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_reportListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_reportComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_reportComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_reports = data;
    };
    Tbc_reportComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_reportComponent;
}());
Tbc_reportComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-report',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_report_service_1.Tbc_reportService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        ng_jhipster_1.DataUtils,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_reportComponent);
exports.Tbc_reportComponent = Tbc_reportComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_report = (function () {
    function Tbc_report(id, nome, descricao, arquivo, removido, tbc_instituicao) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.arquivo = arquivo;
        this.removido = removido;
        this.tbc_instituicao = tbc_instituicao;
    }
    return Tbc_report;
}());
exports.Tbc_report = Tbc_report;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/index.ts");
var ENTITY_STATES = _1.tbc_reportRoute.concat(_1.tbc_reportPopupRoute);
var LimsTbc_reportModule = (function () {
    function LimsTbc_reportModule() {
    }
    return LimsTbc_reportModule;
}());
LimsTbc_reportModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_reportComponent,
            _1.Tbc_reportDetailComponent,
            _1.Tbc_reportDialogComponent,
            _1.Tbc_reportDeleteDialogComponent,
            _1.Tbc_reportPopupComponent,
            _1.Tbc_reportDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_reportComponent,
            _1.Tbc_reportDialogComponent,
            _1.Tbc_reportPopupComponent,
            _1.Tbc_reportDeleteDialogComponent,
            _1.Tbc_reportDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_reportService,
            _1.Tbc_reportPopupService,
            _1.Tbc_reportResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_reportModule);
exports.LimsTbc_reportModule = LimsTbc_reportModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_report_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report.component.ts");
var tbc_report_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-detail.component.ts");
var tbc_report_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-dialog.component.ts");
var tbc_report_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-report/tbc-report-delete-dialog.component.ts");
var Tbc_reportResolvePagingParams = (function () {
    function Tbc_reportResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_reportResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_reportResolvePagingParams;
}());
Tbc_reportResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_reportResolvePagingParams);
exports.Tbc_reportResolvePagingParams = Tbc_reportResolvePagingParams;
exports.tbc_reportRoute = [
    {
        path: 'tbc-report',
        component: tbc_report_component_1.Tbc_reportComponent,
        resolve: {
            'pagingParams': Tbc_reportResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_report.home.title'
        }
    }, {
        path: 'tbc-report/:id',
        component: tbc_report_detail_component_1.Tbc_reportDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_report.home.title'
        }
    }
];
exports.tbc_reportPopupRoute = [
    {
        path: 'tbc-report-new',
        component: tbc_report_dialog_component_1.Tbc_reportPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_report.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-report/:id/edit',
        component: tbc_report_dialog_component_1.Tbc_reportPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_report.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-report/:id/delete',
        component: tbc_report_delete_dialog_component_1.Tbc_reportDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_report.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-report/tbc-report.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_reportService = (function () {
    function Tbc_reportService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-reports';
        this.resourceSearchUrl = 'api/_search/tbc-reports';
    }
    Tbc_reportService.prototype.create = function (tbc_report) {
        var copy = Object.assign({}, tbc_report);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_reportService.prototype.update = function (tbc_report) {
        var copy = Object.assign({}, tbc_report);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_reportService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_reportService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_reportService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_reportService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_reportService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_reportService;
}());
Tbc_reportService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_reportService);
exports.Tbc_reportService = Tbc_reportService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_sub_grupo.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_sub_grupo.delete.question\" translateValues=\"{id: '{{tbc_sub_grupo.id}}'}\">Are you sure you want to delete this Tbc Sub Grupo?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_sub_grupo_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-popup.service.ts");
var tbc_sub_grupo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.service.ts");
var Tbc_sub_grupoDeleteDialogComponent = (function () {
    function Tbc_sub_grupoDeleteDialogComponent(jhiLanguageService, tbc_sub_grupoService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_sub_grupoService = tbc_sub_grupoService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_sub_grupo']);
    }
    Tbc_sub_grupoDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_sub_grupoDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_sub_grupoService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_sub_grupoListModification',
                content: 'Deleted an tbc_sub_grupo'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_sub_grupoDeleteDialogComponent;
}());
Tbc_sub_grupoDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-sub-grupo-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_sub_grupo_service_1.Tbc_sub_grupoService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_sub_grupoDeleteDialogComponent);
exports.Tbc_sub_grupoDeleteDialogComponent = Tbc_sub_grupoDeleteDialogComponent;
var Tbc_sub_grupoDeletePopupComponent = (function () {
    function Tbc_sub_grupoDeletePopupComponent(route, tbc_sub_grupoPopupService) {
        this.route = route;
        this.tbc_sub_grupoPopupService = tbc_sub_grupoPopupService;
    }
    Tbc_sub_grupoDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_sub_grupoPopupService
                .open(Tbc_sub_grupoDeleteDialogComponent, params['id']);
        });
    };
    Tbc_sub_grupoDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_sub_grupoDeletePopupComponent;
}());
Tbc_sub_grupoDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-sub-grupo-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_sub_grupo_popup_service_1.Tbc_sub_grupoPopupService])
], Tbc_sub_grupoDeletePopupComponent);
exports.Tbc_sub_grupoDeletePopupComponent = Tbc_sub_grupoDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_sub_grupo\">\n    <h2><span jhiTranslate=\"limsApp.tbc_sub_grupo.detail.title\">Tbc Sub Grupo</span> {{tbc_sub_grupo.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_sub_grupo.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_sub_grupo.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_sub_grupo.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_sub_grupo.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_sub_grupo.sigla\">Sigla</span></dt>\n        <dd>\n            <span>{{tbc_sub_grupo.sigla}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_sub_grupo.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_sub_grupo.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_sub_grupo.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_sub_grupo.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_sub_grupo.tbc_instituicao?.id]\">{{tbc_sub_grupo.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-sub-grupo/'+ tbc_sub_grupo.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_sub_grupo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.service.ts");
var Tbc_sub_grupoDetailComponent = (function () {
    function Tbc_sub_grupoDetailComponent(jhiLanguageService, tbc_sub_grupoService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_sub_grupoService = tbc_sub_grupoService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_sub_grupo']);
    }
    Tbc_sub_grupoDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_sub_grupoDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_sub_grupoService.find(id).subscribe(function (tbc_sub_grupo) {
            _this.tbc_sub_grupo = tbc_sub_grupo;
        });
    };
    Tbc_sub_grupoDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_sub_grupoDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_sub_grupoDetailComponent;
}());
Tbc_sub_grupoDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-sub-grupo-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_sub_grupo_service_1.Tbc_sub_grupoService,
        router_1.ActivatedRoute])
], Tbc_sub_grupoDetailComponent);
exports.Tbc_sub_grupoDetailComponent = Tbc_sub_grupoDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_sub_grupoLabel\" jhiTranslate=\"limsApp.tbc_sub_grupo.home.createOrEditLabel\">Create or edit a Tbc Sub Grupo</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_sub_grupo.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_sub_grupo.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_sub_grupo.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_sub_grupo.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_sub_grupo.descricao\" for=\"field_descricao\">Descricao</label>\n            <input type=\"text\" class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_sub_grupo.descricao\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_sub_grupo.sigla\" for=\"field_sigla\">Sigla</label>\n            <input type=\"text\" class=\"form-control\" name=\"sigla\" id=\"field_sigla\"\n                [(ngModel)]=\"tbc_sub_grupo.sigla\"\n            required minlength=\"1\" maxlength=\"20\" />\n            <div [hidden]=\"!(editForm.controls.sigla?.dirty && editForm.controls.sigla?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.sigla?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.sigla?.errors?.minlength\" jhiTranslate=\"entity.validation.minlength\" translateValues=\"{ min: 1 }\">\n                   This field is required to be at least 1 characters.\n                </small>\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.sigla?.errors?.maxlength\" jhiTranslate=\"entity.validation.maxlength\" translateValues=\"{ max: 20 }\">\n                   This field cannot be longer than 20 characters.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_sub_grupo.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_sub_grupo.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_sub_grupo.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_sub_grupo.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_sub_grupo.tbc_instituicao?.id ? tbc_sub_grupo.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_sub_grupo_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-popup.service.ts");
var tbc_sub_grupo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var Tbc_sub_grupoDialogComponent = (function () {
    function Tbc_sub_grupoDialogComponent(activeModal, jhiLanguageService, alertService, tbc_sub_grupoService, tbc_instituicaoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.alertService = alertService;
        this.tbc_sub_grupoService = tbc_sub_grupoService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_sub_grupo']);
    }
    Tbc_sub_grupoDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_sub_grupoDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_sub_grupoDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_sub_grupo.id !== undefined) {
            this.tbc_sub_grupoService.update(this.tbc_sub_grupo)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_sub_grupoService.create(this.tbc_sub_grupo)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_sub_grupoDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_sub_grupoListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_sub_grupoDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_sub_grupoDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_sub_grupoDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    return Tbc_sub_grupoDialogComponent;
}());
Tbc_sub_grupoDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-sub-grupo-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.AlertService,
        tbc_sub_grupo_service_1.Tbc_sub_grupoService,
        tbc_instituicao_1.Tbc_instituicaoService,
        ng_jhipster_1.EventManager])
], Tbc_sub_grupoDialogComponent);
exports.Tbc_sub_grupoDialogComponent = Tbc_sub_grupoDialogComponent;
var Tbc_sub_grupoPopupComponent = (function () {
    function Tbc_sub_grupoPopupComponent(route, tbc_sub_grupoPopupService) {
        this.route = route;
        this.tbc_sub_grupoPopupService = tbc_sub_grupoPopupService;
    }
    Tbc_sub_grupoPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_sub_grupoPopupService
                    .open(Tbc_sub_grupoDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_sub_grupoPopupService
                    .open(Tbc_sub_grupoDialogComponent);
            }
        });
    };
    Tbc_sub_grupoPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_sub_grupoPopupComponent;
}());
Tbc_sub_grupoPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-sub-grupo-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_sub_grupo_popup_service_1.Tbc_sub_grupoPopupService])
], Tbc_sub_grupoPopupComponent);
exports.Tbc_sub_grupoPopupComponent = Tbc_sub_grupoPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_sub_grupo_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.model.ts");
var tbc_sub_grupo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.service.ts");
var Tbc_sub_grupoPopupService = (function () {
    function Tbc_sub_grupoPopupService(modalService, router, tbc_sub_grupoService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_sub_grupoService = tbc_sub_grupoService;
        this.isOpen = false;
    }
    Tbc_sub_grupoPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_sub_grupoService.find(id).subscribe(function (tbc_sub_grupo) {
                _this.tbc_sub_grupoModalRef(component, tbc_sub_grupo);
            });
        }
        else {
            return this.tbc_sub_grupoModalRef(component, new tbc_sub_grupo_model_1.Tbc_sub_grupo());
        }
    };
    Tbc_sub_grupoPopupService.prototype.tbc_sub_grupoModalRef = function (component, tbc_sub_grupo) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_sub_grupo = tbc_sub_grupo;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_sub_grupoPopupService;
}());
Tbc_sub_grupoPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_sub_grupo_service_1.Tbc_sub_grupoService])
], Tbc_sub_grupoPopupService);
exports.Tbc_sub_grupoPopupService = Tbc_sub_grupoPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_sub_grupo.home.title\">Tbc Sub Grupos</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-sub-grupo\" [routerLink]=\"['/', { outlets: { popup: ['tbc-sub-grupo-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_sub_grupo.home.createLabel\">\n            Create new Tbc Sub Grupo\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_sub_grupo.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_sub_grupos\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_sub_grupo.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_sub_grupo.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"sigla\"><span jhiTranslate=\"limsApp.tbc_sub_grupo.sigla\">Sigla</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_sub_grupo.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_sub_grupo.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_sub_grupo of tbc_sub_grupos ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-sub-grupo', tbc_sub_grupo.id ]\">{{tbc_sub_grupo.id}}</a></td>\n                <td>{{tbc_sub_grupo.nome}}</td>\n                <td>{{tbc_sub_grupo.descricao}}</td>\n                <td>{{tbc_sub_grupo.sigla}}</td>\n                <td>{{tbc_sub_grupo.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_sub_grupo.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_sub_grupo.tbc_instituicao?.id ]\" >{{tbc_sub_grupo.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-sub-grupo', tbc_sub_grupo.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-sub-grupo/'+ tbc_sub_grupo.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-sub-grupo/'+ tbc_sub_grupo.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_sub_grupos && tbc_sub_grupos.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_sub_grupo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_sub_grupoComponent = (function () {
    function Tbc_sub_grupoComponent(jhiLanguageService, tbc_sub_grupoService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_sub_grupoService = tbc_sub_grupoService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_sub_grupo']);
    }
    Tbc_sub_grupoComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_sub_grupoService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_sub_grupoService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_sub_grupoComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_sub_grupoComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-sub-grupo'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_sub_grupoComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-sub-grupo', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_sub_grupoComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-sub-grupo', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_sub_grupoComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_sub_grupos();
    };
    Tbc_sub_grupoComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_sub_grupoComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_sub_grupoComponent.prototype.registerChangeInTbc_sub_grupos = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_sub_grupoListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_sub_grupoComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_sub_grupoComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_sub_grupos = data;
    };
    Tbc_sub_grupoComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_sub_grupoComponent;
}());
Tbc_sub_grupoComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-sub-grupo',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_sub_grupo_service_1.Tbc_sub_grupoService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_sub_grupoComponent);
exports.Tbc_sub_grupoComponent = Tbc_sub_grupoComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_sub_grupo = (function () {
    function Tbc_sub_grupo(id, nome, descricao, sigla, removido, tbc_instituicao) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.sigla = sigla;
        this.removido = removido;
        this.tbc_instituicao = tbc_instituicao;
    }
    return Tbc_sub_grupo;
}());
exports.Tbc_sub_grupo = Tbc_sub_grupo;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/index.ts");
var ENTITY_STATES = _1.tbc_sub_grupoRoute.concat(_1.tbc_sub_grupoPopupRoute);
var LimsTbc_sub_grupoModule = (function () {
    function LimsTbc_sub_grupoModule() {
    }
    return LimsTbc_sub_grupoModule;
}());
LimsTbc_sub_grupoModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_sub_grupoComponent,
            _1.Tbc_sub_grupoDetailComponent,
            _1.Tbc_sub_grupoDialogComponent,
            _1.Tbc_sub_grupoDeleteDialogComponent,
            _1.Tbc_sub_grupoPopupComponent,
            _1.Tbc_sub_grupoDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_sub_grupoComponent,
            _1.Tbc_sub_grupoDialogComponent,
            _1.Tbc_sub_grupoPopupComponent,
            _1.Tbc_sub_grupoDeleteDialogComponent,
            _1.Tbc_sub_grupoDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_sub_grupoService,
            _1.Tbc_sub_grupoPopupService,
            _1.Tbc_sub_grupoResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_sub_grupoModule);
exports.LimsTbc_sub_grupoModule = LimsTbc_sub_grupoModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_sub_grupo_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.component.ts");
var tbc_sub_grupo_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-detail.component.ts");
var tbc_sub_grupo_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-dialog.component.ts");
var tbc_sub_grupo_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo-delete-dialog.component.ts");
var Tbc_sub_grupoResolvePagingParams = (function () {
    function Tbc_sub_grupoResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_sub_grupoResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_sub_grupoResolvePagingParams;
}());
Tbc_sub_grupoResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_sub_grupoResolvePagingParams);
exports.Tbc_sub_grupoResolvePagingParams = Tbc_sub_grupoResolvePagingParams;
exports.tbc_sub_grupoRoute = [
    {
        path: 'tbc-sub-grupo',
        component: tbc_sub_grupo_component_1.Tbc_sub_grupoComponent,
        resolve: {
            'pagingParams': Tbc_sub_grupoResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_sub_grupo.home.title'
        }
    }, {
        path: 'tbc-sub-grupo/:id',
        component: tbc_sub_grupo_detail_component_1.Tbc_sub_grupoDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_sub_grupo.home.title'
        }
    }
];
exports.tbc_sub_grupoPopupRoute = [
    {
        path: 'tbc-sub-grupo-new',
        component: tbc_sub_grupo_dialog_component_1.Tbc_sub_grupoPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_sub_grupo.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-sub-grupo/:id/edit',
        component: tbc_sub_grupo_dialog_component_1.Tbc_sub_grupoPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_sub_grupo.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-sub-grupo/:id/delete',
        component: tbc_sub_grupo_delete_dialog_component_1.Tbc_sub_grupoDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_sub_grupo.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-sub-grupo/tbc-sub-grupo.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_sub_grupoService = (function () {
    function Tbc_sub_grupoService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-sub-grupos';
        this.resourceSearchUrl = 'api/_search/tbc-sub-grupos';
    }
    Tbc_sub_grupoService.prototype.create = function (tbc_sub_grupo) {
        var copy = Object.assign({}, tbc_sub_grupo);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_sub_grupoService.prototype.update = function (tbc_sub_grupo) {
        var copy = Object.assign({}, tbc_sub_grupo);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_sub_grupoService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_sub_grupoService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_sub_grupoService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_sub_grupoService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_sub_grupoService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_sub_grupoService;
}());
Tbc_sub_grupoService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_sub_grupoService);
exports.Tbc_sub_grupoService = Tbc_sub_grupoService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_tipo_cadastro.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_tipo_cadastro.delete.question\" translateValues=\"{id: '{{tbc_tipo_cadastro.id}}'}\">Are you sure you want to delete this Tbc Tipo Cadastro?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_cadastro_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-popup.service.ts");
var tbc_tipo_cadastro_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.service.ts");
var Tbc_tipo_cadastroDeleteDialogComponent = (function () {
    function Tbc_tipo_cadastroDeleteDialogComponent(jhiLanguageService, tbc_tipo_cadastroService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_tipo_cadastroService = tbc_tipo_cadastroService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_tipo_cadastro']);
    }
    Tbc_tipo_cadastroDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_tipo_cadastroDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_tipo_cadastroService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_tipo_cadastroListModification',
                content: 'Deleted an tbc_tipo_cadastro'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_tipo_cadastroDeleteDialogComponent;
}());
Tbc_tipo_cadastroDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-cadastro-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_tipo_cadastro_service_1.Tbc_tipo_cadastroService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_tipo_cadastroDeleteDialogComponent);
exports.Tbc_tipo_cadastroDeleteDialogComponent = Tbc_tipo_cadastroDeleteDialogComponent;
var Tbc_tipo_cadastroDeletePopupComponent = (function () {
    function Tbc_tipo_cadastroDeletePopupComponent(route, tbc_tipo_cadastroPopupService) {
        this.route = route;
        this.tbc_tipo_cadastroPopupService = tbc_tipo_cadastroPopupService;
    }
    Tbc_tipo_cadastroDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_tipo_cadastroPopupService
                .open(Tbc_tipo_cadastroDeleteDialogComponent, params['id']);
        });
    };
    Tbc_tipo_cadastroDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_tipo_cadastroDeletePopupComponent;
}());
Tbc_tipo_cadastroDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-cadastro-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_tipo_cadastro_popup_service_1.Tbc_tipo_cadastroPopupService])
], Tbc_tipo_cadastroDeletePopupComponent);
exports.Tbc_tipo_cadastroDeletePopupComponent = Tbc_tipo_cadastroDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_tipo_cadastro\">\n    <h2><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.detail.title\">Tbc Tipo Cadastro</span> {{tbc_tipo_cadastro.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_tipo_cadastro.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_tipo_cadastro.descricao}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.removido\">Removido</span></dt>\n        <dd>\n            <span>{{tbc_tipo_cadastro.removido}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.tbc_instituicao\">Tbc Instituicao</span></dt>\n        <dd>\n            <div *ngIf=\"tbc_tipo_cadastro.tbc_instituicao\">\n                <a [routerLink]=\"['/tbc-instituicao', tbc_tipo_cadastro.tbc_instituicao?.id]\">{{tbc_tipo_cadastro.tbc_instituicao?.id}}</a>\n            </div>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-tipo-cadastro/'+ tbc_tipo_cadastro.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_cadastro_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.service.ts");
var Tbc_tipo_cadastroDetailComponent = (function () {
    function Tbc_tipo_cadastroDetailComponent(jhiLanguageService, tbc_tipo_cadastroService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_tipo_cadastroService = tbc_tipo_cadastroService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_tipo_cadastro']);
    }
    Tbc_tipo_cadastroDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_tipo_cadastroDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_tipo_cadastroService.find(id).subscribe(function (tbc_tipo_cadastro) {
            _this.tbc_tipo_cadastro = tbc_tipo_cadastro;
        });
    };
    Tbc_tipo_cadastroDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_tipo_cadastroDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_tipo_cadastroDetailComponent;
}());
Tbc_tipo_cadastroDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-cadastro-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_tipo_cadastro_service_1.Tbc_tipo_cadastroService,
        router_1.ActivatedRoute])
], Tbc_tipo_cadastroDetailComponent);
exports.Tbc_tipo_cadastroDetailComponent = Tbc_tipo_cadastroDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_tipo_cadastroLabel\" jhiTranslate=\"limsApp.tbc_tipo_cadastro.home.createOrEditLabel\">Create or edit a Tbc Tipo Cadastro</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_tipo_cadastro.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_tipo_cadastro.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_tipo_cadastro.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_tipo_cadastro.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_tipo_cadastro.descricao\" for=\"field_descricao\">Descricao</label>\n            <input type=\"text\" class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_tipo_cadastro.descricao\"\n             />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_tipo_cadastro.removido\" for=\"field_removido\">Removido</label>\n            <input type=\"checkbox\" class=\"form-control\" name=\"removido\" id=\"field_removido\"\n                [(ngModel)]=\"tbc_tipo_cadastro.removido\"\n             />\n        </div>\n\n        <div class=\"form-group\">\n            <label jhiTranslate=\"limsApp.tbc_tipo_cadastro.tbc_instituicao\" for=\"field_tbc_instituicao\">Tbc Instituicao</label>\n            <select class=\"form-control\" id=\"field_tbc_instituicao\" name=\"tbc_instituicao\" [(ngModel)]=\"tbc_tipo_cadastro.tbc_instituicao\"  required>\n                <option [ngValue]=\"null\"></option>\n                <option [ngValue]=\"tbc_instituicaoOption.id === tbc_tipo_cadastro.tbc_instituicao?.id ? tbc_tipo_cadastro.tbc_instituicao : tbc_instituicaoOption\" *ngFor=\"let tbc_instituicaoOption of tbc_instituicaos; trackBy: trackTbc_instituicaoById\">{{tbc_instituicaoOption.id}}</option>\n            </select>\n        </div>\n        <div [hidden]=\"!(editForm.controls.tbc_instituicao?.dirty && editForm.controls.tbc_instituicao?.invalid)\">\n            <small class=\"form-text text-danger\"\n                [hidden]=\"!tbc_instituicao?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                This field is required.\n            </small>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_cadastro_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-popup.service.ts");
var tbc_tipo_cadastro_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.service.ts");
var tbc_instituicao_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-instituicao/index.ts");
var Tbc_tipo_cadastroDialogComponent = (function () {
    function Tbc_tipo_cadastroDialogComponent(activeModal, jhiLanguageService, alertService, tbc_tipo_cadastroService, tbc_instituicaoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.alertService = alertService;
        this.tbc_tipo_cadastroService = tbc_tipo_cadastroService;
        this.tbc_instituicaoService = tbc_instituicaoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_tipo_cadastro']);
    }
    Tbc_tipo_cadastroDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
        this.tbc_instituicaoService.query().subscribe(function (res) { _this.tbc_instituicaos = res.json(); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_tipo_cadastroDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_tipo_cadastroDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_tipo_cadastro.id !== undefined) {
            this.tbc_tipo_cadastroService.update(this.tbc_tipo_cadastro)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_tipo_cadastroService.create(this.tbc_tipo_cadastro)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_tipo_cadastroDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_tipo_cadastroListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_tipo_cadastroDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_tipo_cadastroDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    Tbc_tipo_cadastroDialogComponent.prototype.trackTbc_instituicaoById = function (index, item) {
        return item.id;
    };
    return Tbc_tipo_cadastroDialogComponent;
}());
Tbc_tipo_cadastroDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-cadastro-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.AlertService,
        tbc_tipo_cadastro_service_1.Tbc_tipo_cadastroService,
        tbc_instituicao_1.Tbc_instituicaoService,
        ng_jhipster_1.EventManager])
], Tbc_tipo_cadastroDialogComponent);
exports.Tbc_tipo_cadastroDialogComponent = Tbc_tipo_cadastroDialogComponent;
var Tbc_tipo_cadastroPopupComponent = (function () {
    function Tbc_tipo_cadastroPopupComponent(route, tbc_tipo_cadastroPopupService) {
        this.route = route;
        this.tbc_tipo_cadastroPopupService = tbc_tipo_cadastroPopupService;
    }
    Tbc_tipo_cadastroPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_tipo_cadastroPopupService
                    .open(Tbc_tipo_cadastroDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_tipo_cadastroPopupService
                    .open(Tbc_tipo_cadastroDialogComponent);
            }
        });
    };
    Tbc_tipo_cadastroPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_tipo_cadastroPopupComponent;
}());
Tbc_tipo_cadastroPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-cadastro-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_tipo_cadastro_popup_service_1.Tbc_tipo_cadastroPopupService])
], Tbc_tipo_cadastroPopupComponent);
exports.Tbc_tipo_cadastroPopupComponent = Tbc_tipo_cadastroPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_tipo_cadastro_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.model.ts");
var tbc_tipo_cadastro_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.service.ts");
var Tbc_tipo_cadastroPopupService = (function () {
    function Tbc_tipo_cadastroPopupService(modalService, router, tbc_tipo_cadastroService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_tipo_cadastroService = tbc_tipo_cadastroService;
        this.isOpen = false;
    }
    Tbc_tipo_cadastroPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_tipo_cadastroService.find(id).subscribe(function (tbc_tipo_cadastro) {
                _this.tbc_tipo_cadastroModalRef(component, tbc_tipo_cadastro);
            });
        }
        else {
            return this.tbc_tipo_cadastroModalRef(component, new tbc_tipo_cadastro_model_1.Tbc_tipo_cadastro());
        }
    };
    Tbc_tipo_cadastroPopupService.prototype.tbc_tipo_cadastroModalRef = function (component, tbc_tipo_cadastro) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_tipo_cadastro = tbc_tipo_cadastro;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_tipo_cadastroPopupService;
}());
Tbc_tipo_cadastroPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_tipo_cadastro_service_1.Tbc_tipo_cadastroService])
], Tbc_tipo_cadastroPopupService);
exports.Tbc_tipo_cadastroPopupService = Tbc_tipo_cadastroPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.home.title\">Tbc Tipo Cadastros</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-tipo-cadastro\" [routerLink]=\"['/', { outlets: { popup: ['tbc-tipo-cadastro-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_tipo_cadastro.home.createLabel\">\n            Create new Tbc Tipo Cadastro\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_tipo_cadastro.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_tipo_cadastros\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"removido\"><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.removido\">Removido</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"tbc_instituicao.id\"><span jhiTranslate=\"limsApp.tbc_tipo_cadastro.tbc_instituicao\">Tbc Instituicao</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_tipo_cadastro of tbc_tipo_cadastros ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-tipo-cadastro', tbc_tipo_cadastro.id ]\">{{tbc_tipo_cadastro.id}}</a></td>\n                <td>{{tbc_tipo_cadastro.nome}}</td>\n                <td>{{tbc_tipo_cadastro.descricao}}</td>\n                <td>{{tbc_tipo_cadastro.removido}}</td>\n                <td>\n                    <div *ngIf=\"tbc_tipo_cadastro.tbc_instituicao\">\n                        <a [routerLink]=\"['../tbc-instituicao', tbc_tipo_cadastro.tbc_instituicao?.id ]\" >{{tbc_tipo_cadastro.tbc_instituicao?.id}}</a>\n                    </div>\n                </td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-tipo-cadastro', tbc_tipo_cadastro.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-tipo-cadastro/'+ tbc_tipo_cadastro.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-tipo-cadastro/'+ tbc_tipo_cadastro.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_tipo_cadastros && tbc_tipo_cadastros.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_cadastro_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_tipo_cadastroComponent = (function () {
    function Tbc_tipo_cadastroComponent(jhiLanguageService, tbc_tipo_cadastroService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_tipo_cadastroService = tbc_tipo_cadastroService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_tipo_cadastro']);
    }
    Tbc_tipo_cadastroComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_tipo_cadastroService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_tipo_cadastroService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_tipo_cadastroComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_tipo_cadastroComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-tipo-cadastro'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_tipo_cadastroComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-tipo-cadastro', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_tipo_cadastroComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-tipo-cadastro', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_tipo_cadastroComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_tipo_cadastros();
    };
    Tbc_tipo_cadastroComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_tipo_cadastroComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_tipo_cadastroComponent.prototype.registerChangeInTbc_tipo_cadastros = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_tipo_cadastroListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_tipo_cadastroComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_tipo_cadastroComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_tipo_cadastros = data;
    };
    Tbc_tipo_cadastroComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_tipo_cadastroComponent;
}());
Tbc_tipo_cadastroComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-cadastro',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_tipo_cadastro_service_1.Tbc_tipo_cadastroService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_tipo_cadastroComponent);
exports.Tbc_tipo_cadastroComponent = Tbc_tipo_cadastroComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_tipo_cadastro = (function () {
    function Tbc_tipo_cadastro(id, nome, descricao, removido, tbc_instituicao) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
        this.removido = removido;
        this.tbc_instituicao = tbc_instituicao;
    }
    return Tbc_tipo_cadastro;
}());
exports.Tbc_tipo_cadastro = Tbc_tipo_cadastro;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/index.ts");
var ENTITY_STATES = _1.tbc_tipo_cadastroRoute.concat(_1.tbc_tipo_cadastroPopupRoute);
var LimsTbc_tipo_cadastroModule = (function () {
    function LimsTbc_tipo_cadastroModule() {
    }
    return LimsTbc_tipo_cadastroModule;
}());
LimsTbc_tipo_cadastroModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_tipo_cadastroComponent,
            _1.Tbc_tipo_cadastroDetailComponent,
            _1.Tbc_tipo_cadastroDialogComponent,
            _1.Tbc_tipo_cadastroDeleteDialogComponent,
            _1.Tbc_tipo_cadastroPopupComponent,
            _1.Tbc_tipo_cadastroDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_tipo_cadastroComponent,
            _1.Tbc_tipo_cadastroDialogComponent,
            _1.Tbc_tipo_cadastroPopupComponent,
            _1.Tbc_tipo_cadastroDeleteDialogComponent,
            _1.Tbc_tipo_cadastroDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_tipo_cadastroService,
            _1.Tbc_tipo_cadastroPopupService,
            _1.Tbc_tipo_cadastroResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_tipo_cadastroModule);
exports.LimsTbc_tipo_cadastroModule = LimsTbc_tipo_cadastroModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_cadastro_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.component.ts");
var tbc_tipo_cadastro_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-detail.component.ts");
var tbc_tipo_cadastro_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-dialog.component.ts");
var tbc_tipo_cadastro_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro-delete-dialog.component.ts");
var Tbc_tipo_cadastroResolvePagingParams = (function () {
    function Tbc_tipo_cadastroResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_tipo_cadastroResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_tipo_cadastroResolvePagingParams;
}());
Tbc_tipo_cadastroResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_tipo_cadastroResolvePagingParams);
exports.Tbc_tipo_cadastroResolvePagingParams = Tbc_tipo_cadastroResolvePagingParams;
exports.tbc_tipo_cadastroRoute = [
    {
        path: 'tbc-tipo-cadastro',
        component: tbc_tipo_cadastro_component_1.Tbc_tipo_cadastroComponent,
        resolve: {
            'pagingParams': Tbc_tipo_cadastroResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_cadastro.home.title'
        }
    }, {
        path: 'tbc-tipo-cadastro/:id',
        component: tbc_tipo_cadastro_detail_component_1.Tbc_tipo_cadastroDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_cadastro.home.title'
        }
    }
];
exports.tbc_tipo_cadastroPopupRoute = [
    {
        path: 'tbc-tipo-cadastro-new',
        component: tbc_tipo_cadastro_dialog_component_1.Tbc_tipo_cadastroPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_cadastro.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-tipo-cadastro/:id/edit',
        component: tbc_tipo_cadastro_dialog_component_1.Tbc_tipo_cadastroPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_cadastro.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-tipo-cadastro/:id/delete',
        component: tbc_tipo_cadastro_delete_dialog_component_1.Tbc_tipo_cadastroDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_cadastro.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-cadastro/tbc-tipo-cadastro.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_tipo_cadastroService = (function () {
    function Tbc_tipo_cadastroService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-tipo-cadastros';
        this.resourceSearchUrl = 'api/_search/tbc-tipo-cadastros';
    }
    Tbc_tipo_cadastroService.prototype.create = function (tbc_tipo_cadastro) {
        var copy = Object.assign({}, tbc_tipo_cadastro);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_tipo_cadastroService.prototype.update = function (tbc_tipo_cadastro) {
        var copy = Object.assign({}, tbc_tipo_cadastro);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_tipo_cadastroService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_tipo_cadastroService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_tipo_cadastroService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_tipo_cadastroService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_tipo_cadastroService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_tipo_cadastroService;
}());
Tbc_tipo_cadastroService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_tipo_cadastroService);
exports.Tbc_tipo_cadastroService = Tbc_tipo_cadastroService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-popup.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-delete-dialog.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-detail.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.route.ts"));


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-delete-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "<form name=\"deleteForm\" (ngSubmit)=\"confirmDelete(tbc_tipo_campo.id)\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <p jhiTranslate=\"limsApp.tbc_tipo_campo.delete.question\" translateValues=\"{id: '{{tbc_tipo_campo.id}}'}\">Are you sure you want to delete this Tbc Tipo Campo?</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" class=\"btn btn-danger\">\n            <span class=\"fa fa-remove\"></span>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-delete-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_campo_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-popup.service.ts");
var tbc_tipo_campo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.service.ts");
var Tbc_tipo_campoDeleteDialogComponent = (function () {
    function Tbc_tipo_campoDeleteDialogComponent(jhiLanguageService, tbc_tipo_campoService, activeModal, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_tipo_campoService = tbc_tipo_campoService;
        this.activeModal = activeModal;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_tipo_campo']);
    }
    Tbc_tipo_campoDeleteDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_tipo_campoDeleteDialogComponent.prototype.confirmDelete = function (id) {
        var _this = this;
        this.tbc_tipo_campoService.delete(id).subscribe(function (response) {
            _this.eventManager.broadcast({
                name: 'tbc_tipo_campoListModification',
                content: 'Deleted an tbc_tipo_campo'
            });
            _this.activeModal.dismiss(true);
        });
    };
    return Tbc_tipo_campoDeleteDialogComponent;
}());
Tbc_tipo_campoDeleteDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-campo-delete-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-delete-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_tipo_campo_service_1.Tbc_tipo_campoService,
        ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.EventManager])
], Tbc_tipo_campoDeleteDialogComponent);
exports.Tbc_tipo_campoDeleteDialogComponent = Tbc_tipo_campoDeleteDialogComponent;
var Tbc_tipo_campoDeletePopupComponent = (function () {
    function Tbc_tipo_campoDeletePopupComponent(route, tbc_tipo_campoPopupService) {
        this.route = route;
        this.tbc_tipo_campoPopupService = tbc_tipo_campoPopupService;
    }
    Tbc_tipo_campoDeletePopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            _this.modalRef = _this.tbc_tipo_campoPopupService
                .open(Tbc_tipo_campoDeleteDialogComponent, params['id']);
        });
    };
    Tbc_tipo_campoDeletePopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_tipo_campoDeletePopupComponent;
}());
Tbc_tipo_campoDeletePopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-campo-delete-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_tipo_campo_popup_service_1.Tbc_tipo_campoPopupService])
], Tbc_tipo_campoDeletePopupComponent);
exports.Tbc_tipo_campoDeletePopupComponent = Tbc_tipo_campoDeletePopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-detail.component.html":
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"tbc_tipo_campo\">\n    <h2><span jhiTranslate=\"limsApp.tbc_tipo_campo.detail.title\">Tbc Tipo Campo</span> {{tbc_tipo_campo.id}}</h2>\n    <hr>\n    <jhi-alert-error></jhi-alert-error>\n    <dl class=\"row\">\n        <dt><span jhiTranslate=\"limsApp.tbc_tipo_campo.nome\">Nome</span></dt>\n        <dd>\n            <span>{{tbc_tipo_campo.nome}}</span>\n        </dd>\n        <dt><span jhiTranslate=\"limsApp.tbc_tipo_campo.descricao\">Descricao</span></dt>\n        <dd>\n            <span>{{tbc_tipo_campo.descricao}}</span>\n        </dd>\n    </dl>\n\n    <button type=\"submit\"\n            (click)=\"previousState()\"\n            class=\"btn btn-info\">\n        <span class=\"fa fa-arrow-left\"></span>&nbsp;<span jhiTranslate=\"entity.action.back\"> Back</span>\n    </button>\n\n    <button type=\"button\"\n            [routerLink]=\"['/', { outlets: { popup: 'tbc-tipo-campo/'+ tbc_tipo_campo.id + '/edit'} }]\"\n            replaceUrl=\"true\"\n            class=\"btn btn-primary\">\n        <span class=\"fa fa-pencil\"></span>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n    </button>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-detail.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_campo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.service.ts");
var Tbc_tipo_campoDetailComponent = (function () {
    function Tbc_tipo_campoDetailComponent(jhiLanguageService, tbc_tipo_campoService, route) {
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_tipo_campoService = tbc_tipo_campoService;
        this.route = route;
        this.jhiLanguageService.setLocations(['tbc_tipo_campo']);
    }
    Tbc_tipo_campoDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.route.params.subscribe(function (params) {
            _this.load(params['id']);
        });
    };
    Tbc_tipo_campoDetailComponent.prototype.load = function (id) {
        var _this = this;
        this.tbc_tipo_campoService.find(id).subscribe(function (tbc_tipo_campo) {
            _this.tbc_tipo_campo = tbc_tipo_campo;
        });
    };
    Tbc_tipo_campoDetailComponent.prototype.previousState = function () {
        window.history.back();
    };
    Tbc_tipo_campoDetailComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return Tbc_tipo_campoDetailComponent;
}());
Tbc_tipo_campoDetailComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-campo-detail',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-detail.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_tipo_campo_service_1.Tbc_tipo_campoService,
        router_1.ActivatedRoute])
], Tbc_tipo_campoDetailComponent);
exports.Tbc_tipo_campoDetailComponent = Tbc_tipo_campoDetailComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-dialog.component.html":
/***/ (function(module, exports) {

module.exports = "\n\n<form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\n\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n                (click)=\"clear()\">&times;</button>\n        <h4 class=\"modal-title\" id=\"myTbc_tipo_campoLabel\" jhiTranslate=\"limsApp.tbc_tipo_campo.home.createOrEditLabel\">Create or edit a Tbc Tipo Campo</h4>\n    </div>\n    <div class=\"modal-body\">\n        <jhi-alert-error></jhi-alert-error>\n        <div class=\"form-group\" [hidden]=\"!tbc_tipo_campo.id\">\n            <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n            <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\"\n                   [(ngModel)]=\"tbc_tipo_campo.id\" readonly />\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_tipo_campo.nome\" for=\"field_nome\">Nome</label>\n            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"field_nome\"\n                [(ngModel)]=\"tbc_tipo_campo.nome\"\n            required />\n            <div [hidden]=\"!(editForm.controls.nome?.dirty && editForm.controls.nome?.invalid)\">\n                <small class=\"form-text text-danger\"\n                   [hidden]=\"!editForm.controls.nome?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n                   This field is required.\n                </small>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"form-control-label\" jhiTranslate=\"limsApp.tbc_tipo_campo.descricao\" for=\"field_descricao\">Descricao</label>\n            <input type=\"text\" class=\"form-control\" name=\"descricao\" id=\"field_descricao\"\n                [(ngModel)]=\"tbc_tipo_campo.descricao\"\n             />\n        </div>\n\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" (click)=\"clear()\">\n            <span class=\"fa fa-ban\"></span>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n        <button type=\"submit\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\n            <span class=\"fa fa-save\"></span>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n    </div>\n</form>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-dialog.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_campo_popup_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-popup.service.ts");
var tbc_tipo_campo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.service.ts");
var Tbc_tipo_campoDialogComponent = (function () {
    function Tbc_tipo_campoDialogComponent(activeModal, jhiLanguageService, alertService, tbc_tipo_campoService, eventManager) {
        this.activeModal = activeModal;
        this.jhiLanguageService = jhiLanguageService;
        this.alertService = alertService;
        this.tbc_tipo_campoService = tbc_tipo_campoService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['tbc_tipo_campo']);
    }
    Tbc_tipo_campoDialogComponent.prototype.ngOnInit = function () {
        this.isSaving = false;
        this.authorities = ['ROLE_USER', 'ROLE_ADMIN'];
    };
    Tbc_tipo_campoDialogComponent.prototype.clear = function () {
        this.activeModal.dismiss('cancel');
    };
    Tbc_tipo_campoDialogComponent.prototype.save = function () {
        var _this = this;
        this.isSaving = true;
        if (this.tbc_tipo_campo.id !== undefined) {
            this.tbc_tipo_campoService.update(this.tbc_tipo_campo)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
        else {
            this.tbc_tipo_campoService.create(this.tbc_tipo_campo)
                .subscribe(function (res) { return _this.onSaveSuccess(res); }, function (res) { return _this.onSaveError(res.json()); });
        }
    };
    Tbc_tipo_campoDialogComponent.prototype.onSaveSuccess = function (result) {
        this.eventManager.broadcast({ name: 'tbc_tipo_campoListModification', content: 'OK' });
        this.isSaving = false;
        this.activeModal.dismiss(result);
    };
    Tbc_tipo_campoDialogComponent.prototype.onSaveError = function (error) {
        this.isSaving = false;
        this.onError(error);
    };
    Tbc_tipo_campoDialogComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_tipo_campoDialogComponent;
}());
Tbc_tipo_campoDialogComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-campo-dialog',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-dialog.component.html")
    }),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbActiveModal,
        ng_jhipster_1.JhiLanguageService,
        ng_jhipster_1.AlertService,
        tbc_tipo_campo_service_1.Tbc_tipo_campoService,
        ng_jhipster_1.EventManager])
], Tbc_tipo_campoDialogComponent);
exports.Tbc_tipo_campoDialogComponent = Tbc_tipo_campoDialogComponent;
var Tbc_tipo_campoPopupComponent = (function () {
    function Tbc_tipo_campoPopupComponent(route, tbc_tipo_campoPopupService) {
        this.route = route;
        this.tbc_tipo_campoPopupService = tbc_tipo_campoPopupService;
    }
    Tbc_tipo_campoPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routeSub = this.route.params.subscribe(function (params) {
            if (params['id']) {
                _this.modalRef = _this.tbc_tipo_campoPopupService
                    .open(Tbc_tipo_campoDialogComponent, params['id']);
            }
            else {
                _this.modalRef = _this.tbc_tipo_campoPopupService
                    .open(Tbc_tipo_campoDialogComponent);
            }
        });
    };
    Tbc_tipo_campoPopupComponent.prototype.ngOnDestroy = function () {
        this.routeSub.unsubscribe();
    };
    return Tbc_tipo_campoPopupComponent;
}());
Tbc_tipo_campoPopupComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-campo-popup',
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        tbc_tipo_campo_popup_service_1.Tbc_tipo_campoPopupService])
], Tbc_tipo_campoPopupComponent);
exports.Tbc_tipo_campoPopupComponent = Tbc_tipo_campoPopupComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-popup.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_bootstrap_1 = __webpack_require__(3);
var tbc_tipo_campo_model_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.model.ts");
var tbc_tipo_campo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.service.ts");
var Tbc_tipo_campoPopupService = (function () {
    function Tbc_tipo_campoPopupService(modalService, router, tbc_tipo_campoService) {
        this.modalService = modalService;
        this.router = router;
        this.tbc_tipo_campoService = tbc_tipo_campoService;
        this.isOpen = false;
    }
    Tbc_tipo_campoPopupService.prototype.open = function (component, id) {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        if (id) {
            this.tbc_tipo_campoService.find(id).subscribe(function (tbc_tipo_campo) {
                _this.tbc_tipo_campoModalRef(component, tbc_tipo_campo);
            });
        }
        else {
            return this.tbc_tipo_campoModalRef(component, new tbc_tipo_campo_model_1.Tbc_tipo_campo());
        }
    };
    Tbc_tipo_campoPopupService.prototype.tbc_tipo_campoModalRef = function (component, tbc_tipo_campo) {
        var _this = this;
        var modalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });
        modalRef.componentInstance.tbc_tipo_campo = tbc_tipo_campo;
        modalRef.result.then(function (result) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        }, function (reason) {
            _this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true });
            _this.isOpen = false;
        });
        return modalRef;
    };
    return Tbc_tipo_campoPopupService;
}());
Tbc_tipo_campoPopupService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal,
        router_1.Router,
        tbc_tipo_campo_service_1.Tbc_tipo_campoService])
], Tbc_tipo_campoPopupService);
exports.Tbc_tipo_campoPopupService = Tbc_tipo_campoPopupService;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <h2><span jhiTranslate=\"limsApp.tbc_tipo_campo.home.title\">Tbc Tipo Campos</span>\n        <button class=\"btn btn-primary float-xs-right create-tbc-tipo-campo\" [routerLink]=\"['/', { outlets: { popup: ['tbc-tipo-campo-new'] } }]\">\n            <span class=\"fa fa-plus\"></span>\n            <span class=\"hidden-sm-down\"  jhiTranslate=\"limsApp.tbc_tipo_campo.home.createLabel\">\n            Create new Tbc Tipo Campo\n            </span>\n        </button></h2>\n    <jhi-alert></jhi-alert>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-xs-8 no-padding-right\">\n                <form name=\"searchForm\" class=\"form-inline\">\n                    <div class=\"input-group pull-right\">\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentSearch\" id=\"currentSearch\" name=\"currentSearch\" placeholder=\"{{ 'limsApp.tbc_tipo_campo.home.search' | translate }}\">\n                        <span  class=\"input-group-btn width-min\">\n                            <button class=\"btn btn-info\" (click)=\"search(currentSearch)\">\n                                <span class=\"fa fa-search\"></span>\n                            </button>\n                        </span>\n                        <span class=\"input-group-btn width-min\" *ngIf=\"currentSearch\">\n                            <button class=\"btn btn-info\" (click)=\"clear()\">\n                                <span class=\"fa fa-trash-o\"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <br/>\n    <div class=\"table-responsive\" *ngIf=\"tbc_tipo_campos\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" [callback]=\"transition.bind(this)\">\n            <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"nome\"><span jhiTranslate=\"limsApp.tbc_tipo_campo.nome\">Nome</span> <span class=\"fa fa-sort\"></span></th>\n            <th jhiSortBy=\"descricao\"><span jhiTranslate=\"limsApp.tbc_tipo_campo.descricao\">Descricao</span> <span class=\"fa fa-sort\"></span></th>\n            <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let tbc_tipo_campo of tbc_tipo_campos ;trackBy: trackId\">\n                <td><a [routerLink]=\"['../tbc-tipo-campo', tbc_tipo_campo.id ]\">{{tbc_tipo_campo.id}}</a></td>\n                <td>{{tbc_tipo_campo.nome}}</td>\n                <td>{{tbc_tipo_campo.descricao}}</td>\n                <td class=\"text-xs-right\">\n                    <div class=\"btn-group flex-btn-group-container\">\n                        <button type=\"submit\"\n                                [routerLink]=\"['../tbc-tipo-campo', tbc_tipo_campo.id ]\"\n                                class=\"btn btn-info btn-sm\">\n                            <span class=\"fa fa-eye\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.view\">View</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-tipo-campo/'+ tbc_tipo_campo.id + '/edit'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-primary btn-sm\">\n                            <span class=\"fa fa-pencil\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.edit\">Edit</span>\n                        </button>\n                        <button type=\"submit\"\n                                [routerLink]=\"['/', { outlets: { popup: 'tbc-tipo-campo/'+ tbc_tipo_campo.id + '/delete'} }]\"\n                                replaceUrl=\"true\"\n                                class=\"btn btn-danger btn-sm\">\n                            <span class=\"fa fa-remove\"></span>\n                            <span class=\"hidden-md-down\" jhiTranslate=\"entity.action.delete\">Delete</span>\n                        </button>\n                    </div>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n        <!-- Pager is not implemented yet, so this is normal pagination instead -->\n        <div class=\"text-xs-center\" *ngIf=\"tbc_tipo_campos && tbc_tipo_campos.length\">\n            <jhi-item-count [page]=\"page\" [total]=\"queryCount\" [itemsPerPage]=\"itemsPerPage\"></jhi-item-count>\n            <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\"  (pageChange)=\"loadPage(page)\"></ngb-pagination>\n        </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_campo_service_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.service.ts");
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var uib_pagination_config_1 = __webpack_require__("./src/main/webapp/app/blocks/config/uib-pagination.config.ts");
var Tbc_tipo_campoComponent = (function () {
    function Tbc_tipo_campoComponent(jhiLanguageService, tbc_tipo_campoService, parseLinks, alertService, principal, activatedRoute, router, eventManager, paginationUtil, paginationConfig) {
        var _this = this;
        this.jhiLanguageService = jhiLanguageService;
        this.tbc_tipo_campoService = tbc_tipo_campoService;
        this.parseLinks = parseLinks;
        this.alertService = alertService;
        this.principal = principal;
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.eventManager = eventManager;
        this.paginationUtil = paginationUtil;
        this.paginationConfig = paginationConfig;
        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;
        this.routeData = this.activatedRoute.data.subscribe(function (data) {
            _this.page = data['pagingParams'].page;
            _this.previousPage = data['pagingParams'].page;
            _this.reverse = data['pagingParams'].ascending;
            _this.predicate = data['pagingParams'].predicate;
        });
        this.currentSearch = activatedRoute.snapshot.params['search'] ? activatedRoute.snapshot.params['search'] : '';
        this.jhiLanguageService.setLocations(['tbc_tipo_campo']);
    }
    Tbc_tipo_campoComponent.prototype.loadAll = function () {
        var _this = this;
        if (this.currentSearch) {
            this.tbc_tipo_campoService.search({
                query: this.currentSearch,
                size: this.itemsPerPage,
                sort: this.sort()
            }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
            return;
        }
        this.tbc_tipo_campoService.query({
            page: this.page - 1,
            size: this.itemsPerPage,
            sort: this.sort()
        }).subscribe(function (res) { return _this.onSuccess(res.json(), res.headers); }, function (res) { return _this.onError(res.json()); });
    };
    Tbc_tipo_campoComponent.prototype.loadPage = function (page) {
        if (page !== this.previousPage) {
            this.previousPage = page;
            this.transition();
        }
    };
    Tbc_tipo_campoComponent.prototype.transition = function () {
        this.router.navigate(['/tbc-tipo-campo'], { queryParams: {
                page: this.page,
                size: this.itemsPerPage,
                search: this.currentSearch,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }
        });
        this.loadAll();
    };
    Tbc_tipo_campoComponent.prototype.clear = function () {
        this.page = 0;
        this.currentSearch = '';
        this.router.navigate(['/tbc-tipo-campo', {
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_tipo_campoComponent.prototype.search = function (query) {
        if (!query) {
            return this.clear();
        }
        this.page = 0;
        this.currentSearch = query;
        this.router.navigate(['/tbc-tipo-campo', {
                search: this.currentSearch,
                page: this.page,
                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')
            }]);
        this.loadAll();
    };
    Tbc_tipo_campoComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadAll();
        this.principal.identity().then(function (account) {
            _this.currentAccount = account;
        });
        this.registerChangeInTbc_tipo_campos();
    };
    Tbc_tipo_campoComponent.prototype.ngOnDestroy = function () {
        this.eventManager.destroy(this.eventSubscriber);
    };
    Tbc_tipo_campoComponent.prototype.trackId = function (index, item) {
        return item.id;
    };
    Tbc_tipo_campoComponent.prototype.registerChangeInTbc_tipo_campos = function () {
        var _this = this;
        this.eventSubscriber = this.eventManager.subscribe('tbc_tipo_campoListModification', function (response) { return _this.loadAll(); });
    };
    Tbc_tipo_campoComponent.prototype.sort = function () {
        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];
        if (this.predicate !== 'id') {
            result.push('id');
        }
        return result;
    };
    Tbc_tipo_campoComponent.prototype.onSuccess = function (data, headers) {
        this.links = this.parseLinks.parse(headers.get('link'));
        this.totalItems = headers.get('X-Total-Count');
        this.queryCount = this.totalItems;
        // this.page = pagingParams.page;
        this.tbc_tipo_campos = data;
    };
    Tbc_tipo_campoComponent.prototype.onError = function (error) {
        this.alertService.error(error.message, null, null);
    };
    return Tbc_tipo_campoComponent;
}());
Tbc_tipo_campoComponent = __decorate([
    core_1.Component({
        selector: 'jhi-tbc-tipo-campo',
        template: __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        tbc_tipo_campo_service_1.Tbc_tipo_campoService,
        ng_jhipster_1.ParseLinks,
        ng_jhipster_1.AlertService,
        shared_1.Principal,
        router_1.ActivatedRoute,
        router_1.Router,
        ng_jhipster_1.EventManager,
        ng_jhipster_1.PaginationUtil,
        uib_pagination_config_1.PaginationConfig])
], Tbc_tipo_campoComponent);
exports.Tbc_tipo_campoComponent = Tbc_tipo_campoComponent;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Tbc_tipo_campo = (function () {
    function Tbc_tipo_campo(id, nome, descricao) {
        this.id = id;
        this.nome = nome;
        this.descricao = descricao;
    }
    return Tbc_tipo_campo;
}());
exports.Tbc_tipo_campo = Tbc_tipo_campo;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/index.ts");
var ENTITY_STATES = _1.tbc_tipo_campoRoute.concat(_1.tbc_tipo_campoPopupRoute);
var LimsTbc_tipo_campoModule = (function () {
    function LimsTbc_tipo_campoModule() {
    }
    return LimsTbc_tipo_campoModule;
}());
LimsTbc_tipo_campoModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot(ENTITY_STATES, { useHash: true })
        ],
        declarations: [
            _1.Tbc_tipo_campoComponent,
            _1.Tbc_tipo_campoDetailComponent,
            _1.Tbc_tipo_campoDialogComponent,
            _1.Tbc_tipo_campoDeleteDialogComponent,
            _1.Tbc_tipo_campoPopupComponent,
            _1.Tbc_tipo_campoDeletePopupComponent,
        ],
        entryComponents: [
            _1.Tbc_tipo_campoComponent,
            _1.Tbc_tipo_campoDialogComponent,
            _1.Tbc_tipo_campoPopupComponent,
            _1.Tbc_tipo_campoDeleteDialogComponent,
            _1.Tbc_tipo_campoDeletePopupComponent,
        ],
        providers: [
            _1.Tbc_tipo_campoService,
            _1.Tbc_tipo_campoPopupService,
            _1.Tbc_tipo_campoResolvePagingParams,
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsTbc_tipo_campoModule);
exports.LimsTbc_tipo_campoModule = LimsTbc_tipo_campoModule;


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var tbc_tipo_campo_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.component.ts");
var tbc_tipo_campo_detail_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-detail.component.ts");
var tbc_tipo_campo_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-dialog.component.ts");
var tbc_tipo_campo_delete_dialog_component_1 = __webpack_require__("./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo-delete-dialog.component.ts");
var Tbc_tipo_campoResolvePagingParams = (function () {
    function Tbc_tipo_campoResolvePagingParams(paginationUtil) {
        this.paginationUtil = paginationUtil;
    }
    Tbc_tipo_campoResolvePagingParams.prototype.resolve = function (route, state) {
        var page = route.queryParams['page'] ? route.queryParams['page'] : '1';
        var sort = route.queryParams['sort'] ? route.queryParams['sort'] : 'id,asc';
        return {
            page: this.paginationUtil.parsePage(page),
            predicate: this.paginationUtil.parsePredicate(sort),
            ascending: this.paginationUtil.parseAscending(sort)
        };
    };
    return Tbc_tipo_campoResolvePagingParams;
}());
Tbc_tipo_campoResolvePagingParams = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.PaginationUtil])
], Tbc_tipo_campoResolvePagingParams);
exports.Tbc_tipo_campoResolvePagingParams = Tbc_tipo_campoResolvePagingParams;
exports.tbc_tipo_campoRoute = [
    {
        path: 'tbc-tipo-campo',
        component: tbc_tipo_campo_component_1.Tbc_tipo_campoComponent,
        resolve: {
            'pagingParams': Tbc_tipo_campoResolvePagingParams
        },
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_campo.home.title'
        }
    }, {
        path: 'tbc-tipo-campo/:id',
        component: tbc_tipo_campo_detail_component_1.Tbc_tipo_campoDetailComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_campo.home.title'
        }
    }
];
exports.tbc_tipo_campoPopupRoute = [
    {
        path: 'tbc-tipo-campo-new',
        component: tbc_tipo_campo_dialog_component_1.Tbc_tipo_campoPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_campo.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-tipo-campo/:id/edit',
        component: tbc_tipo_campo_dialog_component_1.Tbc_tipo_campoPopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_campo.home.title'
        },
        outlet: 'popup'
    },
    {
        path: 'tbc-tipo-campo/:id/delete',
        component: tbc_tipo_campo_delete_dialog_component_1.Tbc_tipo_campoDeletePopupComponent,
        data: {
            authorities: ['ROLE_USER'],
            pageTitle: 'limsApp.tbc_tipo_campo.home.title'
        },
        outlet: 'popup'
    }
];


/***/ }),

/***/ "./src/main/webapp/app/entities/tbc-tipo-campo/tbc-tipo-campo.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var Tbc_tipo_campoService = (function () {
    function Tbc_tipo_campoService(http) {
        this.http = http;
        this.resourceUrl = 'api/tbc-tipo-campos';
        this.resourceSearchUrl = 'api/_search/tbc-tipo-campos';
    }
    Tbc_tipo_campoService.prototype.create = function (tbc_tipo_campo) {
        var copy = Object.assign({}, tbc_tipo_campo);
        return this.http.post(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_tipo_campoService.prototype.update = function (tbc_tipo_campo) {
        var copy = Object.assign({}, tbc_tipo_campo);
        return this.http.put(this.resourceUrl, copy).map(function (res) {
            return res.json();
        });
    };
    Tbc_tipo_campoService.prototype.find = function (id) {
        return this.http.get(this.resourceUrl + "/" + id).map(function (res) {
            return res.json();
        });
    };
    Tbc_tipo_campoService.prototype.query = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceUrl, options);
    };
    Tbc_tipo_campoService.prototype.delete = function (id) {
        return this.http.delete(this.resourceUrl + "/" + id);
    };
    Tbc_tipo_campoService.prototype.search = function (req) {
        var options = this.createRequestOption(req);
        return this.http.get(this.resourceSearchUrl, options);
    };
    Tbc_tipo_campoService.prototype.createRequestOption = function (req) {
        var options = new http_1.BaseRequestOptions();
        if (req) {
            var params = new http_1.URLSearchParams();
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
            params.set('query', req.query);
            options.search = params;
        }
        return options;
    };
    return Tbc_tipo_campoService;
}());
Tbc_tipo_campoService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], Tbc_tipo_campoService);
exports.Tbc_tipo_campoService = Tbc_tipo_campoService;


/***/ }),

/***/ "./src/main/webapp/app/home/home.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\n    <div class=\"col-md-3\">\n        <span class=\"hipster img-fluid img-rounded\"></span>\n    </div>\n    <div class=\"col-md-9\">\n        <h1 class=\"display-4\" jhiTranslate=\"home.title\">Welcome, Java Hipster!</h1>\n        <p class=\"lead\" jhiTranslate=\"home.subtitle\">This is your homepage</p>\n\n        <div [ngSwitch]=\"isAuthenticated()\">\n            <div class=\"alert alert-success\" *ngSwitchCase=\"true\">\n                <span *ngIf=\"account\" jhiTranslate=\"home.logged.message\"\n                    translateValues=\"{username: '{{account.login}}'}\"> You are logged in as user \"{{account.login}}\". </span>\n            </div>\n\n            <div class=\"alert alert-warning\" *ngSwitchCase=\"false\">\n                <span jhiTranslate=\"global.messages.info.authenticated.prefix\">If you want to </span>\n                <a class=\"alert-link\" (click)=\"login()\" jhiTranslate=\"global.messages.info.authenticated.link\">sign in</a><span jhiTranslate=\"global.messages.info.authenticated.suffix\">, you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\").</span>\n            </div>\n\n            <div class=\"alert alert-warning\" *ngSwitchCase=\"false\">\n                <span jhiTranslate=\"global.messages.info.register.noaccount\">You don't have an account yet?</span>\n                <a class=\"alert-link\" routerLink=\"register\" jhiTranslate=\"global.messages.info.register.link\">Register a new account</a>\n            </div>\n        </div>\n\n        <p jhiTranslate=\"home.question\">\n            If you have any question on JHipster:\n        </p>\n\n        <ul>\n            <li><a href=\"http://jhipster.github.io/\" target=\"_blank\" jhiTranslate=\"home.link.homepage\">JHipster homepage</a></li>\n            <li><a href=\"http://stackoverflow.com/tags/jhipster/info\" target=\"_blank\" jhiTranslate=\"home.link.stackoverflow\">JHipster on Stack Overflow</a></li>\n            <li><a href=\"https://github.com/jhipster/generator-jhipster/issues?state=open\" target=\"_blank\" jhiTranslate=\"home.link.bugtracker\">JHipster bug tracker</a></li>\n            <li><a href=\"https://gitter.im/jhipster/generator-jhipster\" target=\"_blank\" jhiTranslate=\"home.link.chat\">JHipster public chat room</a></li>\n            <li><a href=\"https://twitter.com/java_hipster\" target=\"_blank\"  jhiTranslate=\"home.link.follow\">follow @java_hipster on Twitter</a></li>\n        </ul>\n\n        <p>\n            <span jhiTranslate=\"home.like\">If you like JHipster, don't forget to give us a star on</span> <a href=\"https://github.com/jhipster/generator-jhipster\" target=\"_blank\" jhiTranslate=\"home.github\">Github</a>!\n        </p>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/home/home.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var HomeComponent = (function () {
    function HomeComponent(jhiLanguageService, principal, loginModalService, eventManager) {
        this.jhiLanguageService = jhiLanguageService;
        this.principal = principal;
        this.loginModalService = loginModalService;
        this.eventManager = eventManager;
        this.jhiLanguageService.setLocations(['home']);
    }
    HomeComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.principal.identity().then(function (account) {
            _this.account = account;
        });
        this.registerAuthenticationSuccess();
    };
    HomeComponent.prototype.registerAuthenticationSuccess = function () {
        var _this = this;
        this.eventManager.subscribe('authenticationSuccess', function (message) {
            _this.principal.identity().then(function (account) {
                _this.account = account;
            });
        });
    };
    HomeComponent.prototype.isAuthenticated = function () {
        return this.principal.isAuthenticated();
    };
    HomeComponent.prototype.login = function () {
        this.modalRef = this.loginModalService.open();
    };
    return HomeComponent;
}());
HomeComponent = __decorate([
    core_1.Component({
        selector: 'jhi-home',
        template: __webpack_require__("./src/main/webapp/app/home/home.component.html"),
        styles: [
            __webpack_require__("./src/main/webapp/app/home/home.css")
        ]
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        shared_1.Principal,
        shared_1.LoginModalService,
        ng_jhipster_1.EventManager])
], HomeComponent);
exports.HomeComponent = HomeComponent;


/***/ }),

/***/ "./src/main/webapp/app/home/home.css":
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__("./node_modules/css-loader/index.js!./src/main/webapp/app/home/home.css");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./src/main/webapp/app/home/home.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/home/index.ts");
var LimsHomeModule = (function () {
    function LimsHomeModule() {
    }
    return LimsHomeModule;
}());
LimsHomeModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_1.LimsSharedModule,
            router_1.RouterModule.forRoot([_1.HOME_ROUTE], { useHash: true })
        ],
        declarations: [
            _1.HomeComponent,
        ],
        entryComponents: [],
        providers: [],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsHomeModule);
exports.LimsHomeModule = LimsHomeModule;


/***/ }),

/***/ "./src/main/webapp/app/home/home.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var _1 = __webpack_require__("./src/main/webapp/app/home/index.ts");
exports.HOME_ROUTE = {
    path: '',
    component: _1.HomeComponent,
    data: {
        authorities: [],
        pageTitle: 'home.title'
    },
    canActivate: [shared_1.UserRouteAccessService]
};


/***/ }),

/***/ "./src/main/webapp/app/home/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/home/home.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/home/home.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/home/home.module.ts"));


/***/ }),

/***/ "./src/main/webapp/app/layouts/error/error.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <span class=\"hipster img-fluid img-rounded\"></span>\n        </div>\n        <div class=\"col-md-8\">\n            <h1 jhiTranslate=\"error.title\">Error Page!</h1>\n\n            <div [hidden]=\"!errorMessage\">\n                <div class=\"alert alert-danger\">{{errorMessage}}\n                </div>\n            </div>\n            <div [hidden]=\"!error403\" class=\"alert alert-danger\" jhiTranslate=\"error.403\">You are not authorized to access the page.\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/layouts/error/error.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var ErrorComponent = (function () {
    function ErrorComponent(jhiLanguageService) {
        this.jhiLanguageService = jhiLanguageService;
        this.jhiLanguageService.setLocations(['error']);
    }
    ErrorComponent.prototype.ngOnInit = function () {
    };
    return ErrorComponent;
}());
ErrorComponent = __decorate([
    core_1.Component({
        selector: 'jhi-error',
        template: __webpack_require__("./src/main/webapp/app/layouts/error/error.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService])
], ErrorComponent);
exports.ErrorComponent = ErrorComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/error/error.route.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var error_component_1 = __webpack_require__("./src/main/webapp/app/layouts/error/error.component.ts");
exports.errorRoute = [
    {
        path: 'error',
        component: error_component_1.ErrorComponent,
        data: {
            authorities: [],
            pageTitle: 'error.title'
        },
        canActivate: [shared_1.UserRouteAccessService]
    },
    {
        path: 'accessdenied',
        component: error_component_1.ErrorComponent,
        data: {
            authorities: [],
            pageTitle: 'error.title'
        },
        canActivate: [shared_1.UserRouteAccessService]
    }
];


/***/ }),

/***/ "./src/main/webapp/app/layouts/footer/footer.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"footer\">\n    <p jhiTranslate=\"footer\">This is your footer</p>\n</div>\n<template ngbModalContainer></template>\n"

/***/ }),

/***/ "./src/main/webapp/app/layouts/footer/footer.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var FooterComponent = (function () {
    function FooterComponent() {
    }
    return FooterComponent;
}());
FooterComponent = __decorate([
    core_1.Component({
        selector: 'jhi-footer',
        template: __webpack_require__("./src/main/webapp/app/layouts/footer/footer.component.html")
    })
], FooterComponent);
exports.FooterComponent = FooterComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/layouts/error/error.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/error/error.route.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/main/main.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/footer/footer.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/navbar/navbar.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/navbar/active-menu.directive.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/profiles/page-ribbon.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/profiles/profile.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/profiles/profile-info.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/layouts/layout-routing.module.ts"));


/***/ }),

/***/ "./src/main/webapp/app/layouts/layout-routing.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var app_route_1 = __webpack_require__("./src/main/webapp/app/app.route.ts");
var _1 = __webpack_require__("./src/main/webapp/app/layouts/index.ts");
var LAYOUT_ROUTES = [
    app_route_1.navbarRoute
].concat(_1.errorRoute);
var LayoutRoutingModule = (function () {
    function LayoutRoutingModule() {
    }
    return LayoutRoutingModule;
}());
LayoutRoutingModule = __decorate([
    core_1.NgModule({
        imports: [
            router_1.RouterModule.forRoot(LAYOUT_ROUTES, { useHash: true })
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], LayoutRoutingModule);
exports.LayoutRoutingModule = LayoutRoutingModule;


/***/ }),

/***/ "./src/main/webapp/app/layouts/main/main.component.html":
/***/ (function(module, exports) {

module.exports = "<jhi-page-ribbon></jhi-page-ribbon>\n<div>\n    <router-outlet name=\"navbar\"></router-outlet>\n</div>\n<div class=\"container-fluid\">\n    <div class=\"card\">\n        <router-outlet></router-outlet>\n        <router-outlet name=\"popup\"></router-outlet>\n    </div>\n    <jhi-footer></jhi-footer>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/layouts/main/main.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var JhiMainComponent = (function () {
    function JhiMainComponent(jhiLanguageHelper, router, $storageService) {
        this.jhiLanguageHelper = jhiLanguageHelper;
        this.router = router;
        this.$storageService = $storageService;
    }
    JhiMainComponent.prototype.getPageTitle = function (routeSnapshot) {
        var title = (routeSnapshot.data && routeSnapshot.data['pageTitle']) ? routeSnapshot.data['pageTitle'] : 'limsApp';
        if (routeSnapshot.firstChild) {
            title = this.getPageTitle(routeSnapshot.firstChild) || title;
        }
        return title;
    };
    JhiMainComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.router.events.subscribe(function (event) {
            if (event instanceof router_1.NavigationEnd) {
                _this.jhiLanguageHelper.updateTitle(_this.getPageTitle(_this.router.routerState.snapshot.root));
            }
            if (event instanceof router_1.RoutesRecognized) {
                var params = {};
                var destinationData = {};
                var destinationName = '';
                var destinationEvent = event.state.root.firstChild.children[0];
                if (destinationEvent !== undefined) {
                    params = destinationEvent.params;
                    destinationData = destinationEvent.data;
                    destinationName = destinationEvent.url[0].path;
                }
                var from = { name: _this.router.url.slice(1) };
                var destination = { name: destinationName, data: destinationData };
                _this.$storageService.storeDestinationState(destination, params, from);
            }
        });
    };
    return JhiMainComponent;
}());
JhiMainComponent = __decorate([
    core_1.Component({
        selector: 'jhi-main',
        template: __webpack_require__("./src/main/webapp/app/layouts/main/main.component.html")
    }),
    __metadata("design:paramtypes", [shared_1.JhiLanguageHelper,
        router_1.Router,
        shared_1.StateStorageService])
], JhiMainComponent);
exports.JhiMainComponent = JhiMainComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/navbar/active-menu.directive.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng2_translate_1 = __webpack_require__(8);
var ActiveMenuDirective = (function () {
    function ActiveMenuDirective(el, renderer, translateService) {
        this.el = el;
        this.renderer = renderer;
        this.translateService = translateService;
    }
    ActiveMenuDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.translateService.onLangChange.subscribe(function (event) {
            _this.updateActiveFlag(event.lang);
        });
        this.updateActiveFlag(this.translateService.currentLang);
    };
    ActiveMenuDirective.prototype.updateActiveFlag = function (selectedLanguage) {
        if (this.jhiActiveMenu === selectedLanguage) {
            this.renderer.setElementClass(this.el.nativeElement, 'active', true);
        }
        else {
            this.renderer.setElementClass(this.el.nativeElement, 'active', false);
        }
    };
    return ActiveMenuDirective;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], ActiveMenuDirective.prototype, "jhiActiveMenu", void 0);
ActiveMenuDirective = __decorate([
    core_1.Directive({
        selector: '[jhiActiveMenu]'
    }),
    __metadata("design:paramtypes", [core_1.ElementRef, core_1.Renderer, ng2_translate_1.TranslateService])
], ActiveMenuDirective);
exports.ActiveMenuDirective = ActiveMenuDirective;


/***/ }),

/***/ "./src/main/webapp/app/layouts/navbar/navbar.component.html":
/***/ (function(module, exports) {

module.exports = "<nav class=\"navbar navbar-dark jh-navbar\">\n    <div class=\"jh-logo-container float-xs-left\">\n        <a class=\"jh-navbar-toggler hidden-lg-up float-xs-left\" href=\"javascript:void(0);\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"toggleNavbar()\">\n            <i class=\"fa fa-bars\"></i>\n        </a>\n        <a class=\"navbar-brand logo float-xs-right\" routerLink=\"/\" (click)=\"collapseNavbar()\">\n            <span class=\"logo-img\"></span>\n            <span jhiTranslate=\"global.title\" class=\"navbar-title\">Lims</span> <span class=\"navbar-version\">{{version}}</span>\n        </a>\n    </div>\n    <div class=\"collapse navbar-toggleable-md float-lg-right\" id=\"navbarResponsive\" [ngbCollapse]=\"isNavbarCollapsed\" [ngSwitch]=\"isAuthenticated()\">\n        <ul class=\"nav navbar-nav float-lg-right\">\n            <li class=\"nav-item\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <a class=\"nav-link\" routerLink=\"/\" (click)=\"collapseNavbar()\">\n                    <i class=\"fa fa-home\" aria-hidden=\"true\"></i>\n                    <span class=\"hidden-sm-down\" jhiTranslate=\"global.menu.home\">Home</span>\n                </a>\n            </li>\n            <!-- jhipster-needle-add-element-to-menu - JHipster will add new menu items here -->\n            <li *ngSwitchCase=\"true\" ngbDropdown class=\"nav-item dropdown pointer\">\n                <a class=\"nav-link dropdown-toggle\" routerLinkActive=\"active\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"entity-menu\">\n                    <span>\n                        <i class=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n                        <span class=\"hidden-sm-down\" jhiTranslate=\"global.menu.entities.main\">\n                            Entities\n                        </span>\n                        <b class=\"caret\"></b>\n                    </span>\n                </a>\n                <ul class=\"dropdown-menu\" ngbDropdownMenu>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-cliente\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcCliente\">Tbc Cliente</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-instituicao\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcInstituicao\">Tbc Instituicao</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-sub-grupo\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcSubGrupo\">Tbc Sub Grupo</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-grupo-analise\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcGrupoAnalise\">Tbc Grupo Analise</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-frases\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcFrases\">Tbc Frases</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-frases-opcoes\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcFrasesOpcoes\">Tbc Frases Opcoes</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-formulario\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcFormulario\">Tbc Formulario</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-tipo-cadastro\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcTipoCadastro\">Tbc Tipo Cadastro</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-relatorio-ensaio\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcRelatorioEnsaio\">Tbc Relatorio Ensaio</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-analises\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcAnalises\">Tbc Analises</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-lab-tercerizado\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcLabTercerizado\">Tbc Lab Tercerizado</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-report\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcReport\">Tbc Report</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-tipo-campo\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcTipoCampo\">Tbc Tipo Campo</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-analises-componente\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcAnalisesComponente\">Tbc Analises Componente</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-grupo-cliente\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcGrupoCliente\">Tbc Grupo Cliente</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-plano-teste\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcPlanoTeste\">Tbc Plano Teste</span>\n                        </a>\n                    </li>\n                    <li uiSrefActive=\"active\">\n                        <a class=\"dropdown-item\" routerLink=\"tbc-plano-teste-analise\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-asterisk\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.entities.tbcPlanoTesteAnalise\">Tbc Plano Teste Analise</span>\n                        </a>\n                    </li>\n                    <!-- jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here -->\n                </ul>\n            </li>\n            <li *jhiHasAnyAuthority=\"'ROLE_ADMIN'\" ngbDropdown class=\"nav-item dropdown pointer\">\n                <a class=\"nav-link dropdown-toggle\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"admin-menu\">\n                    <span>\n                        <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                        <span class=\"hidden-sm-down\" jhiTranslate=\"global.menu.admin.main\">Administration</span>\n                        <b class=\"caret\"></b>\n                    </span>\n                </a>\n                <ul class=\"dropdown-menu\" ngbDropdownMenu>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"user-management\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-user\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.admin.userManagement\">User management</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"jhi-metrics\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-tachometer\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.admin.metrics\">Metrics</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"jhi-health\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-heart\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.admin.health\">Health</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"jhi-configuration\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-list\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.admin.configuration\">Configuration</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"audits\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-bell\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.admin.audits\">Audits</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" routerLink=\"logs\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-tasks\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.admin.logs\">Logs</span>\n                        </a>\n                    </li>\n                    <li *ngIf=\"swaggerEnabled\">\n                        <a class=\"dropdown-item\" routerLink=\"docs\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.admin.apidocs\">API</span>\n                        </a>\n                    </li>\n                    <!-- jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here -->\n                </ul>\n            </li>\n            <li ngbDropdown class=\"nav-item dropdown pointer\" *ngIf=\"languages\">\n                <a class=\"nav-link dropdown-toggle\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"languagesnavBarDropdown\" *ngIf=\"languages.length > 1\">\n                    <span>\n                        <i class=\"fa fa-flag\" aria-hidden=\"true\"></i>\n                        <span class=\"hidden-sm-down\" jhiTranslate=\"global.menu.language\">Language</span>\n                        <b class=\"caret\"></b>\n                    </span>\n                </a>\n                <ul class=\"dropdown-menu\" ngbDropdownMenu *ngIf=\"languages.length > 1\">\n                    <li *ngFor=\"let language of languages\">\n                        <a class=\"dropdown-item\" [jhiActiveMenu]=\"language\" href=\"javascript:void(0);\" (click)=\"changeLanguage(language);collapseNavbar();\">{{language | findLanguageFromKey}}</a>\n                    </li>\n                </ul>\n            </li>\n            <li ngbDropdown class=\"nav-item dropdown pointer\">\n                <a class=\"nav-link dropdown-toggle\" ngbDropdownToggle href=\"javascript:void(0);\" id=\"account-menu\">\n                  <span *ngIf=\"!getImageUrl()\">\n                    <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                    <span class=\"hidden-sm\" jhiTranslate=\"global.menu.account.main\">\n                      Account\n                    </span>\n                    <b class=\"caret\"></b>\n                  </span>\n                  <span *ngIf=\"getImageUrl()\">\n                      <img [src]=\"getImageUrl()\" class=\"profile-image img-circle\" alt=\"Avatar\">\n                  </span>\n                </a>\n                <ul class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n                    <li *ngSwitchCase=\"true\">\n                        <a class=\"dropdown-item\" routerLink=\"settings\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-wrench\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.account.settings\">Settings</span>\n                        </a>\n                    </li>\n                    <li *ngSwitchCase=\"true\">\n                        <a class=\"dropdown-item\" routerLink=\"password\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-clock-o\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.account.password\">Password</span>\n                        </a>\n                    </li>\n                    <li *ngSwitchCase=\"true\">\n                        <a class=\"dropdown-item\" routerLink=\"sessions\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-cloud\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.account.sessions\">Sessions</span>\n                        </a>\n                    </li>\n                    <li *ngSwitchCase=\"true\">\n                        <a class=\"dropdown-item\" (click)=\"logout()\" id=\"logout\">\n                            <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.account.logout\">Sign out</span>\n                        </a>\n                    </li>\n                    <li *ngSwitchCase=\"false\">\n                        <a class=\"dropdown-item\" (click)=\"login()\" id=\"login\">\n                            <i class=\"fa fa-fw fa-sign-in\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.account.login\">Sign in</span>\n                        </a>\n                    </li>\n                    <li *ngSwitchCase=\"false\">\n                        <a class=\"dropdown-item\" routerLink=\"register\" routerLinkActive=\"active\" (click)=\"collapseNavbar()\">\n                            <i class=\"fa fa-fw fa-registered\" aria-hidden=\"true\"></i>\n                            <span jhiTranslate=\"global.menu.account.register\">Register</span>\n                        </a>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n</nav>\n"

/***/ }),

/***/ "./src/main/webapp/app/layouts/navbar/navbar.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var profile_service_1 = __webpack_require__("./src/main/webapp/app/layouts/profiles/profile.service.ts"); // FIXME barrel doesnt work here
var shared_1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var app_constants_1 = __webpack_require__("./src/main/webapp/app/app.constants.ts");
var NavbarComponent = (function () {
    function NavbarComponent(loginService, languageHelper, languageService, principal, loginModalService, profileService, router) {
        this.loginService = loginService;
        this.languageHelper = languageHelper;
        this.languageService = languageService;
        this.principal = principal;
        this.loginModalService = loginModalService;
        this.profileService = profileService;
        this.router = router;
        this.version = app_constants_1.DEBUG_INFO_ENABLED ? 'v' + app_constants_1.VERSION : '';
        this.isNavbarCollapsed = true;
        this.languageService.addLocation('home');
    }
    NavbarComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.languageHelper.getAll().then(function (languages) {
            _this.languages = languages;
        });
        this.profileService.getProfileInfo().subscribe(function (profileInfo) {
            _this.inProduction = profileInfo.inProduction;
            _this.swaggerEnabled = profileInfo.swaggerEnabled;
        });
    };
    NavbarComponent.prototype.changeLanguage = function (languageKey) {
        this.languageService.changeLanguage(languageKey);
    };
    NavbarComponent.prototype.collapseNavbar = function () {
        this.isNavbarCollapsed = true;
    };
    NavbarComponent.prototype.isAuthenticated = function () {
        return this.principal.isAuthenticated();
    };
    NavbarComponent.prototype.login = function () {
        this.modalRef = this.loginModalService.open();
    };
    NavbarComponent.prototype.logout = function () {
        this.collapseNavbar();
        this.loginService.logout();
        this.router.navigate(['']);
    };
    NavbarComponent.prototype.toggleNavbar = function () {
        this.isNavbarCollapsed = !this.isNavbarCollapsed;
    };
    NavbarComponent.prototype.getImageUrl = function () {
        return this.isAuthenticated() ? this.principal.getImageUrl() : null;
    };
    return NavbarComponent;
}());
NavbarComponent = __decorate([
    core_1.Component({
        selector: 'jhi-navbar',
        template: __webpack_require__("./src/main/webapp/app/layouts/navbar/navbar.component.html"),
        styles: [
            __webpack_require__("./src/main/webapp/app/layouts/navbar/navbar.css")
        ]
    }),
    __metadata("design:paramtypes", [shared_1.LoginService,
        shared_1.JhiLanguageHelper,
        ng_jhipster_1.JhiLanguageService,
        shared_1.Principal,
        shared_1.LoginModalService,
        profile_service_1.ProfileService,
        router_1.Router])
], NavbarComponent);
exports.NavbarComponent = NavbarComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/navbar/navbar.css":
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__("./node_modules/css-loader/index.js!./src/main/webapp/app/layouts/navbar/navbar.css");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./src/main/webapp/app/layouts/profiles/page-ribbon.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var profile_service_1 = __webpack_require__("./src/main/webapp/app/layouts/profiles/profile.service.ts");
var PageRibbonComponent = (function () {
    function PageRibbonComponent(profileService) {
        this.profileService = profileService;
    }
    PageRibbonComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.profileService.getProfileInfo().subscribe(function (profileInfo) {
            _this.profileInfo = profileInfo;
            _this.ribbonEnv = profileInfo.ribbonEnv;
        });
    };
    return PageRibbonComponent;
}());
PageRibbonComponent = __decorate([
    core_1.Component({
        selector: 'jhi-page-ribbon',
        template: "<div class=\"ribbon\" *ngIf=\"ribbonEnv\"><a href=\"\" jhiTranslate=\"global.ribbon.{{ribbonEnv}}\">{{ribbonEnv}}</a></div>",
        styles: [
            __webpack_require__("./src/main/webapp/app/layouts/profiles/page-ribbon.css")
        ]
    }),
    __metadata("design:paramtypes", [profile_service_1.ProfileService])
], PageRibbonComponent);
exports.PageRibbonComponent = PageRibbonComponent;


/***/ }),

/***/ "./src/main/webapp/app/layouts/profiles/page-ribbon.css":
/***/ (function(module, exports, __webpack_require__) {


        var result = __webpack_require__("./node_modules/css-loader/index.js!./src/main/webapp/app/layouts/profiles/page-ribbon.css");

        if (typeof result === "string") {
            module.exports = result;
        } else {
            module.exports = result.toString();
        }
    

/***/ }),

/***/ "./src/main/webapp/app/layouts/profiles/profile-info.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ProfileInfo = (function () {
    function ProfileInfo() {
    }
    return ProfileInfo;
}());
exports.ProfileInfo = ProfileInfo;


/***/ }),

/***/ "./src/main/webapp/app/layouts/profiles/profile.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var profile_info_model_1 = __webpack_require__("./src/main/webapp/app/layouts/profiles/profile-info.model.ts");
var ProfileService = (function () {
    function ProfileService(http) {
        this.http = http;
        this.profileInfoUrl = 'api/profile-info';
    }
    ProfileService.prototype.getProfileInfo = function () {
        return this.http.get(this.profileInfoUrl)
            .map(function (res) {
            var data = res.json();
            var pi = new profile_info_model_1.ProfileInfo();
            pi.activeProfiles = data.activeProfiles;
            pi.ribbonEnv = data.ribbonEnv;
            pi.inProduction = data.activeProfiles.indexOf('prod') !== -1;
            pi.swaggerEnabled = data.activeProfiles.indexOf('swagger') !== -1;
            return pi;
        });
    };
    return ProfileService;
}());
ProfileService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], ProfileService);
exports.ProfileService = ProfileService;


/***/ }),

/***/ "./src/main/webapp/app/shared/alert/alert-error.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng2_translate_1 = __webpack_require__(8);
var ng_jhipster_1 = __webpack_require__(2);
var JhiAlertErrorComponent = (function () {
    function JhiAlertErrorComponent(alertService, eventManager, translateService) {
        var _this = this;
        this.alertService = alertService;
        this.eventManager = eventManager;
        this.translateService = translateService;
        this.alerts = [];
        this.cleanHttpErrorListener = eventManager.subscribe('limsApp.httpError', function (response) {
            var i;
            var httpResponse = response.content;
            switch (httpResponse.status) {
                // connection refused, server not reachable
                case 0:
                    _this.addErrorAlert('Server not reachable', 'error.server.not.reachable');
                    break;
                case 400:
                    var arr = Array.from(httpResponse.headers._headers);
                    var headers = [];
                    for (i = 0; i < arr.length; i++) {
                        if (arr[i][0].endsWith('app-error') || arr[i][0].endsWith('app-params')) {
                            headers.push(arr[i][0]);
                        }
                    }
                    headers.sort();
                    var errorHeader = httpResponse.headers.get(headers[0]);
                    var entityKey = httpResponse.headers.get(headers[1]);
                    if (errorHeader) {
                        var entityName = translateService.instant('global.menu.entities.' + entityKey);
                        _this.addErrorAlert(errorHeader, errorHeader, { entityName: entityName });
                    }
                    else if (httpResponse.text() !== '' && httpResponse.json() && httpResponse.json().fieldErrors) {
                        var fieldErrors = httpResponse.json().fieldErrors;
                        for (i = 0; i < fieldErrors.length; i++) {
                            var fieldError = fieldErrors[i];
                            // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it
                            var convertedField = fieldError.field.replace(/\[\d*\]/g, '[]');
                            var fieldName = translateService.instant('limsApp.' +
                                fieldError.objectName + '.' + convertedField);
                            _this.addErrorAlert('Field ' + fieldName + ' cannot be empty', 'error.' + fieldError.message, { fieldName: fieldName });
                        }
                    }
                    else if (httpResponse.text() !== '' && httpResponse.json() && httpResponse.json().message) {
                        _this.addErrorAlert(httpResponse.json().message, httpResponse.json().message, httpResponse.json());
                    }
                    else {
                        _this.addErrorAlert(httpResponse.text());
                    }
                    break;
                case 404:
                    _this.addErrorAlert('Not found', 'error.url.not.found');
                    break;
                default:
                    if (httpResponse.text() !== '' && httpResponse.json() && httpResponse.json().message) {
                        _this.addErrorAlert(httpResponse.json().message);
                    }
                    else {
                        _this.addErrorAlert(JSON.stringify(httpResponse)); // Fixme find a way to parse httpResponse
                    }
            }
        });
    }
    JhiAlertErrorComponent.prototype.ngOnDestroy = function () {
        if (this.cleanHttpErrorListener !== undefined && this.cleanHttpErrorListener !== null) {
            this.eventManager.destroy(this.cleanHttpErrorListener);
            this.alerts = [];
        }
    };
    JhiAlertErrorComponent.prototype.addErrorAlert = function (message, key, data) {
        key = key && key !== null ? key : message;
        this.alerts.push(this.alertService.addAlert({
            type: 'danger',
            msg: key,
            params: data,
            timeout: 5000,
            toast: this.alertService.isToast(),
            scoped: true
        }, this.alerts));
    };
    return JhiAlertErrorComponent;
}());
JhiAlertErrorComponent = __decorate([
    core_1.Component({
        selector: 'jhi-alert-error',
        template: "\n        <div class=\"alerts\" role=\"alert\">\n            <div *ngFor=\"let alert of alerts\"  [ngClass]=\"{'alert.position': true, 'toast': alert.toast}\">\n                <ngb-alert type=\"{{alert.type}}\" close=\"alert.close(alerts)\"><pre>{{ alert.msg }}</pre></ngb-alert>\n            </div>\n        </div>"
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.AlertService, ng_jhipster_1.EventManager, ng2_translate_1.TranslateService])
], JhiAlertErrorComponent);
exports.JhiAlertErrorComponent = JhiAlertErrorComponent;


/***/ }),

/***/ "./src/main/webapp/app/shared/alert/alert.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var JhiAlertComponent = (function () {
    function JhiAlertComponent(alertService) {
        this.alertService = alertService;
    }
    JhiAlertComponent.prototype.ngOnInit = function () {
        this.alerts = this.alertService.get();
    };
    JhiAlertComponent.prototype.ngOnDestroy = function () {
        this.alerts = [];
    };
    return JhiAlertComponent;
}());
JhiAlertComponent = __decorate([
    core_1.Component({
        selector: 'jhi-alert',
        template: "\n        <div class=\"alerts\" role=\"alert\">\n            <div *ngFor=\"let alert of alerts\" [ngClass]=\"{'alert.position': true, 'toast': alert.toast}\">\n                <ngb-alert [type]=\"alert.type\" (close)=\"alert.close(alerts)\"><pre [innerHTML]=\"alert.msg\"></pre></ngb-alert>\n            </div>\n        </div>"
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.AlertService])
], JhiAlertComponent);
exports.JhiAlertComponent = JhiAlertComponent;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/account.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var AccountService = (function () {
    function AccountService(http) {
        this.http = http;
    }
    AccountService.prototype.get = function () {
        return this.http.get('api/account').map(function (res) { return res.json(); });
    };
    AccountService.prototype.save = function (account) {
        return this.http.post('api/account', account);
    };
    return AccountService;
}());
AccountService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], AccountService);
exports.AccountService = AccountService;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/auth-session.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var AuthServerProvider = (function () {
    function AuthServerProvider(http) {
        this.http = http;
    }
    AuthServerProvider.prototype.login = function (credentials) {
        var data = 'j_username=' + encodeURIComponent(credentials.username) +
            '&j_password=' + encodeURIComponent(credentials.password) +
            '&remember-me=' + credentials.rememberMe + '&submit=Login';
        var headers = new http_1.Headers({
            'Content-Type': 'application/x-www-form-urlencoded'
        });
        return this.http.post('api/authentication', data, {
            headers: headers
        });
    };
    AuthServerProvider.prototype.logout = function () {
        var _this = this;
        // logout from the server
        return this.http.post('api/logout', {}).map(function (response) {
            // to get a new csrf token call the api
            _this.http.get('api/account').subscribe(function () { }, function () { });
            return response;
        });
    };
    return AuthServerProvider;
}());
AuthServerProvider = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], AuthServerProvider);
exports.AuthServerProvider = AuthServerProvider;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/auth.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var login_modal_service_1 = __webpack_require__("./src/main/webapp/app/shared/login/login-modal.service.ts");
var principal_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/principal.service.ts");
var state_storage_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/state-storage.service.ts");
var AuthService = (function () {
    function AuthService(principal, stateStorageService, loginModalService, router) {
        this.principal = principal;
        this.stateStorageService = stateStorageService;
        this.loginModalService = loginModalService;
        this.router = router;
    }
    AuthService.prototype.authorize = function (force) {
        var authReturn = this.principal.identity(force).then(authThen.bind(this));
        return authReturn;
        function authThen() {
            var _this = this;
            var isAuthenticated = this.principal.isAuthenticated();
            var toStateInfo = this.stateStorageService.getDestinationState().destination;
            var canActivate = true;
            // an authenticated user can't access to login and register pages
            if (isAuthenticated && (toStateInfo.name === 'register')) {
                this.router.navigate(['']);
                canActivate = false;
            }
            // recover and clear previousState after external login redirect (e.g. oauth2)
            var fromStateInfo = this.stateStorageService.getDestinationState().from;
            var previousState = this.stateStorageService.getPreviousState();
            if (isAuthenticated && !fromStateInfo.name && previousState) {
                this.stateStorageService.resetPreviousState();
                this.router.navigate([previousState.name], { queryParams: previousState.params });
                canActivate = false;
            }
            if (toStateInfo.data.authorities && toStateInfo.data.authorities.length > 0 &&
                !this.principal.hasAnyAuthority(toStateInfo.data.authorities)) {
                if (isAuthenticated) {
                    // user is signed in but not authorized for desired state
                    this.router.navigate(['accessdenied']);
                    canActivate = false;
                }
                else {
                    canActivate = false;
                    // user is not authenticated. Show the state they wanted before you
                    // send them to the login service, so you can return them when you're done
                    var toStateParamsInfo = this.stateStorageService.getDestinationState().params;
                    this.stateStorageService.storePreviousState(toStateInfo.name, toStateParamsInfo);
                    // now, send them to the signin state so they can log in
                    this.router.navigate(['accessdenied']).then(function () {
                        _this.loginModalService.open();
                    });
                }
            }
            return canActivate;
        }
    };
    return AuthService;
}());
AuthService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [principal_service_1.Principal,
        state_storage_service_1.StateStorageService,
        login_modal_service_1.LoginModalService,
        router_1.Router])
], AuthService);
exports.AuthService = AuthService;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/csrf.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var core_2 = __webpack_require__(16);
var CSRFService = (function () {
    function CSRFService(cookieService) {
        this.cookieService = cookieService;
    }
    CSRFService.prototype.getCSRF = function (name) {
        name = "" + (name ? name : 'XSRF-TOKEN');
        return this.cookieService.get(name);
    };
    return CSRFService;
}());
CSRFService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [core_2.CookieService])
], CSRFService);
exports.CSRFService = CSRFService;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/has-any-authority.directive.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var principal_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/principal.service.ts");
/**
 * @whatItDoes Conditionally includes an HTML element if current user has any
 * of the authorities passed as the `expression`.
 *
 * @howToUse
 * ```
 *     <some-element *jhiHasAnyAuthority="'ROLE_ADMIN'">...</some-element>
 *
 *     <some-element *jhiHasAnyAuthority="['ROLE_ADMIN', 'ROLE_USER']">...</some-element>
 * ```
 */
var HasAnyAuthorityDirective = (function () {
    function HasAnyAuthorityDirective(principal, templateRef, viewContainerRef) {
        this.principal = principal;
        this.templateRef = templateRef;
        this.viewContainerRef = viewContainerRef;
    }
    Object.defineProperty(HasAnyAuthorityDirective.prototype, "jhiHasAnyAuthority", {
        set: function (value) {
            var _this = this;
            this.authorities = typeof value === 'string' ? [value] : value;
            this._updateView();
            // Get notified each time authentication state changes.
            this.principal.getAuthenticationState().subscribe(function (identity) { return _this._updateView(); });
        },
        enumerable: true,
        configurable: true
    });
    HasAnyAuthorityDirective.prototype._updateView = function () {
        var _this = this;
        this.principal.hasAnyAuthority(this.authorities).then(function (result) {
            if (result) {
                _this.viewContainerRef.createEmbeddedView(_this.templateRef);
            }
            else {
                _this.viewContainerRef.clear();
            }
        });
    };
    return HasAnyAuthorityDirective;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], HasAnyAuthorityDirective.prototype, "jhiHasAnyAuthority", null);
HasAnyAuthorityDirective = __decorate([
    core_1.Directive({
        selector: '[jhiHasAnyAuthority]'
    }),
    __metadata("design:paramtypes", [principal_service_1.Principal, core_1.TemplateRef, core_1.ViewContainerRef])
], HasAnyAuthorityDirective);
exports.HasAnyAuthorityDirective = HasAnyAuthorityDirective;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/principal.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var Subject_1 = __webpack_require__(21);
var account_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/account.service.ts");
var Principal = (function () {
    function Principal(account) {
        this.account = account;
        this.authenticated = false;
        this.authenticationState = new Subject_1.Subject();
    }
    Principal.prototype.authenticate = function (_identity) {
        this._identity = _identity;
        this.authenticated = _identity !== null;
        this.authenticationState.next(this._identity);
    };
    Principal.prototype.hasAnyAuthority = function (authorities) {
        if (!this.authenticated || !this._identity || !this._identity.authorities) {
            return Promise.resolve(false);
        }
        for (var i = 0; i < authorities.length; i++) {
            if (this._identity.authorities.indexOf(authorities[i]) !== -1) {
                return Promise.resolve(true);
            }
        }
        return Promise.resolve(false);
    };
    Principal.prototype.hasAuthority = function (authority) {
        if (!this.authenticated) {
            return Promise.resolve(false);
        }
        return this.identity().then(function (id) {
            return Promise.resolve(id.authorities && id.authorities.indexOf(authority) !== -1);
        }, function () {
            return Promise.resolve(false);
        });
    };
    Principal.prototype.identity = function (force) {
        var _this = this;
        if (force === true) {
            this._identity = undefined;
        }
        // check and see if we have retrieved the _identity data from the server.
        // if we have, reuse it by immediately resolving
        if (this._identity) {
            return Promise.resolve(this._identity);
        }
        // retrieve the _identity data from the server, update the _identity object, and then resolve.
        return this.account.get().toPromise().then(function (account) {
            if (account) {
                _this._identity = account;
                _this.authenticated = true;
            }
            else {
                _this._identity = null;
                _this.authenticated = false;
            }
            _this.authenticationState.next(_this._identity);
            return _this._identity;
        }).catch(function (err) {
            _this._identity = null;
            _this.authenticated = false;
            _this.authenticationState.next(_this._identity);
            return null;
        });
    };
    Principal.prototype.isAuthenticated = function () {
        return this.authenticated;
    };
    Principal.prototype.isIdentityResolved = function () {
        return this._identity !== undefined;
    };
    Principal.prototype.getAuthenticationState = function () {
        return this.authenticationState.asObservable();
    };
    Principal.prototype.getImageUrl = function () {
        return this.isIdentityResolved() ? this._identity.imageUrl : null;
    };
    return Principal;
}());
Principal = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [account_service_1.AccountService])
], Principal);
exports.Principal = Principal;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/state-storage.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng2_webstorage_1 = __webpack_require__(11);
var StateStorageService = (function () {
    function StateStorageService($sessionStorage) {
        this.$sessionStorage = $sessionStorage;
    }
    StateStorageService.prototype.getPreviousState = function () {
        return this.$sessionStorage.retrieve('previousState');
    };
    StateStorageService.prototype.resetPreviousState = function () {
        this.$sessionStorage.clear('previousState');
    };
    StateStorageService.prototype.storePreviousState = function (previousStateName, previousStateParams) {
        var previousState = { 'name': previousStateName, 'params': previousStateParams };
        this.$sessionStorage.store('previousState', previousState);
    };
    StateStorageService.prototype.getDestinationState = function () {
        return this.$sessionStorage.retrieve('destinationState');
    };
    StateStorageService.prototype.storeDestinationState = function (destinationState, destinationStateParams, fromState) {
        var destinationInfo = {
            'destination': {
                'name': destinationState.name,
                'data': destinationState.data,
            },
            'params': destinationStateParams,
            'from': {
                'name': fromState.name,
            }
        };
        this.$sessionStorage.store('destinationState', destinationInfo);
    };
    return StateStorageService;
}());
StateStorageService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng2_webstorage_1.SessionStorageService])
], StateStorageService);
exports.StateStorageService = StateStorageService;


/***/ }),

/***/ "./src/main/webapp/app/shared/auth/user-route-access-service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var router_1 = __webpack_require__(1);
var _1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var UserRouteAccessService = (function () {
    function UserRouteAccessService(router, auth) {
        this.router = router;
        this.auth = auth;
    }
    UserRouteAccessService.prototype.canActivate = function (route) {
        return this.auth.authorize(false).then(function (canActivate) { return canActivate; });
    };
    return UserRouteAccessService;
}());
UserRouteAccessService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [router_1.Router, _1.AuthService])
], UserRouteAccessService);
exports.UserRouteAccessService = UserRouteAccessService;


/***/ }),

/***/ "./src/main/webapp/app/shared/constants/pagination.constants.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.ITEMS_PER_PAGE = 20;


/***/ }),

/***/ "./src/main/webapp/app/shared/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(__webpack_require__("./src/main/webapp/app/shared/alert/alert.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/alert/alert-error.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/csrf.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/state-storage.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/account.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/auth-session.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/auth.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/principal.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/has-any-authority.directive.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/language/language.constants.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/language/language.helper.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/language/language.pipe.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/login/login.component.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/login/login.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/login/login-modal.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/constants/pagination.constants.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/user/account.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/user/user.model.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/user/user.service.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/shared-libs.module.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/shared-common.module.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/shared.module.ts"));
__export(__webpack_require__("./src/main/webapp/app/shared/auth/user-route-access-service.ts"));


/***/ }),

/***/ "./src/main/webapp/app/shared/language/language.constants.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
    Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
    They are written in English to avoid character encoding issues (not a perfect solution)
*/
exports.LANGUAGES = [
    'pt-br',
    'en'
];


/***/ }),

/***/ "./src/main/webapp/app/shared/language/language.helper.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var platform_browser_1 = __webpack_require__(10);
var ng2_translate_1 = __webpack_require__("./node_modules/ng2-translate/ng2-translate.js");
var language_constants_1 = __webpack_require__("./src/main/webapp/app/shared/language/language.constants.ts");
var JhiLanguageHelper = (function () {
    function JhiLanguageHelper(translateService, titleService) {
        this.translateService = translateService;
        this.titleService = titleService;
        this.init();
    }
    JhiLanguageHelper.prototype.getAll = function () {
        return Promise.resolve(language_constants_1.LANGUAGES);
    };
    /**
     * Update the window title using params in the following
     * order:
     * 1. titleKey parameter
     * 2. $state.$current.data.pageTitle (current state page title)
     * 3. 'global.title'
     */
    JhiLanguageHelper.prototype.updateTitle = function (titleKey) {
        var _this = this;
        if (!titleKey && this.titleService.getTitle()) {
            titleKey = this.titleService.getTitle();
        }
        this.translateService.get(titleKey || 'global.title').subscribe(function (title) {
            _this.titleService.setTitle(title);
        });
    };
    JhiLanguageHelper.prototype.init = function () {
    };
    return JhiLanguageHelper;
}());
JhiLanguageHelper = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng2_translate_1.TranslateService, platform_browser_1.Title])
], JhiLanguageHelper);
exports.JhiLanguageHelper = JhiLanguageHelper;


/***/ }),

/***/ "./src/main/webapp/app/shared/language/language.pipe.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var FindLanguageFromKeyPipe = (function () {
    function FindLanguageFromKeyPipe() {
        this.languages = {
            'ca': 'Català',
            'cs': 'Český',
            'da': 'Dansk',
            'de': 'Deutsch',
            'el': 'Ελληνικά',
            'en': 'English',
            'es': 'Español',
            'et': 'Eesti',
            'fr': 'Français',
            'gl': 'Galego',
            'hu': 'Magyar',
            'hi': 'हिंदी',
            'it': 'Italiano',
            'ja': '日本語',
            'ko': '한국어',
            'mr': 'मराठी',
            'nl': 'Nederlands',
            'pl': 'Polski',
            'pt-br': 'Português (Brasil)',
            'pt-pt': 'Português',
            'ro': 'Română',
            'ru': 'Русский',
            'sk': 'Slovenský',
            'sr': 'Srpski',
            'sv': 'Svenska',
            'ta': 'தமிழ்',
            'tr': 'Türkçe',
            'vi': 'Tiếng Việt',
            'zh-cn': '中文（简体）',
            'zh-tw': '繁體中文'
        };
    }
    FindLanguageFromKeyPipe.prototype.transform = function (lang) {
        return this.languages[lang];
    };
    return FindLanguageFromKeyPipe;
}());
FindLanguageFromKeyPipe = __decorate([
    core_1.Pipe({ name: 'findLanguageFromKey' })
], FindLanguageFromKeyPipe);
exports.FindLanguageFromKeyPipe = FindLanguageFromKeyPipe;


/***/ }),

/***/ "./src/main/webapp/app/shared/login/login-modal.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var login_component_1 = __webpack_require__("./src/main/webapp/app/shared/login/login.component.ts");
var LoginModalService = (function () {
    function LoginModalService(modalService) {
        this.modalService = modalService;
        this.isOpen = false;
    }
    LoginModalService.prototype.open = function () {
        var _this = this;
        if (this.isOpen) {
            return;
        }
        this.isOpen = true;
        var modalRef = this.modalService.open(login_component_1.JhiLoginModalComponent);
        modalRef.result.then(function (result) {
            _this.isOpen = false;
        }, function (reason) {
            _this.isOpen = false;
        });
        return modalRef;
    };
    return LoginModalService;
}());
LoginModalService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_bootstrap_1.NgbModal])
], LoginModalService);
exports.LoginModalService = LoginModalService;


/***/ }),

/***/ "./src/main/webapp/app/shared/login/login.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\n    <button aria-label=\"Close\" data-dismiss=\"modal\" class=\"close\" type=\"button\" (click)=\"activeModal.dismiss('closed')\"><span aria-hidden=\"true\">x</span>\n    </button>\n    <h4 class=\"modal-title\" jhiTranslate=\"login.title\">Sign in</h4>\n</div>\n<div class=\"modal-body\">\n    <div class=\"row\">\n        <div class=\"col-md-4 offset-md-4\">\n            <h1 jhiTranslate=\"login.title\">Sign in</h1>\n        </div>\n        <div class=\"col-md-8 offset-md-2\">\n            <div class=\"alert alert-danger\" *ngIf=\"authenticationError\" jhiTranslate=\"login.messages.error.authentication\">\n                <strong>Failed to sign in!</strong> Please check your credentials and try again.\n            </div>\n        </div>\n        <div class=\"col-md-8 offset-md-2\">\n            <form class=\"form\" role=\"form\" (ngSubmit)=\"login()\">\n                <div class=\"form-group\">\n                    <label for=\"username\" jhiTranslate=\"global.form.username\">Login</label>\n                    <input type=\"text\" class=\"form-control\" name=\"username\" id=\"username\" placeholder=\"{{'global.form.username.placeholder' | translate}}\"\n                    [(ngModel)]=\"username\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\" jhiTranslate=\"login.form.password\">Password</label>\n                    <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" placeholder=\"{{'login.form.password.placeholder' | translate}}\"\n                           [(ngModel)]=\"password\">\n                </div>\n                <div class=\"form-check\">\n                    <label class=\"form-check-label\" for=\"rememberMe\">\n                        <input class=\"form-check-input\" type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" [(ngModel)]=\"rememberMe\" checked>\n                        <span jhiTranslate=\"login.form.rememberme\">Remember me</span>\n                    </label>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" jhiTranslate=\"login.form.button\">Sign in</button>\n            </form>\n            <p></p>\n            <div class=\"alert alert-warning\">\n                <a class=\"alert-link\" (click)=\"requestResetPassword()\" jhiTranslate=\"login.password.forgot\">Did you forget your password?</a>\n            </div>\n            <div class=\"alert alert-warning\">\n            \t<span jhiTranslate=\"global.messages.info.register.noaccount\">You don't have an account yet?</span>\n                <a class=\"alert-link\" (click)=\"register()\" jhiTranslate=\"global.messages.info.register.link\">Register a new account</a>\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./src/main/webapp/app/shared/login/login.component.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_bootstrap_1 = __webpack_require__(3);
var router_1 = __webpack_require__(1);
var ng_jhipster_1 = __webpack_require__(2);
var login_service_1 = __webpack_require__("./src/main/webapp/app/shared/login/login.service.ts");
var state_storage_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/state-storage.service.ts");
var JhiLoginModalComponent = (function () {
    function JhiLoginModalComponent(eventManager, languageService, loginService, stateStorageService, elementRef, renderer, router, activeModal) {
        this.eventManager = eventManager;
        this.languageService = languageService;
        this.loginService = loginService;
        this.stateStorageService = stateStorageService;
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.router = router;
        this.activeModal = activeModal;
        this.credentials = {};
    }
    JhiLoginModalComponent.prototype.ngOnInit = function () {
        this.languageService.addLocation('login');
    };
    JhiLoginModalComponent.prototype.ngAfterViewInit = function () {
        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#username'), 'focus', []);
    };
    JhiLoginModalComponent.prototype.cancel = function () {
        this.credentials = {
            username: null,
            password: null,
            rememberMe: true
        };
        this.authenticationError = false;
        this.activeModal.dismiss('cancel');
    };
    JhiLoginModalComponent.prototype.login = function () {
        var _this = this;
        this.loginService.login({
            username: this.username,
            password: this.password,
            rememberMe: this.rememberMe
        }).then(function () {
            _this.authenticationError = false;
            _this.activeModal.dismiss('login success');
            if (_this.router.url === '/register' || _this.router.url === '/activate' ||
                _this.router.url === '/finishReset' || _this.router.url === '/requestReset') {
                _this.router.navigate(['']);
            }
            _this.eventManager.broadcast({
                name: 'authenticationSuccess',
                content: 'Sending Authentication Success'
            });
            // // previousState was set in the authExpiredInterceptor before being redirected to login modal.
            // // since login is succesful, go to stored previousState and clear previousState
            var previousState = _this.stateStorageService.getPreviousState();
            if (previousState) {
                _this.stateStorageService.resetPreviousState();
                _this.router.navigate([previousState.name], { queryParams: previousState.params });
            }
        }).catch(function () {
            _this.authenticationError = true;
        });
    };
    JhiLoginModalComponent.prototype.register = function () {
        this.activeModal.dismiss('to state register');
        this.router.navigate(['/register']);
    };
    JhiLoginModalComponent.prototype.requestResetPassword = function () {
        this.activeModal.dismiss('to state requestReset');
        this.router.navigate(['/reset', 'request']);
    };
    return JhiLoginModalComponent;
}());
JhiLoginModalComponent = __decorate([
    core_1.Component({
        selector: 'jhi-login-modal',
        template: __webpack_require__("./src/main/webapp/app/shared/login/login.component.html")
    }),
    __metadata("design:paramtypes", [ng_jhipster_1.EventManager,
        ng_jhipster_1.JhiLanguageService,
        login_service_1.LoginService,
        state_storage_service_1.StateStorageService,
        core_1.ElementRef,
        core_1.Renderer,
        router_1.Router,
        ng_bootstrap_1.NgbActiveModal])
], JhiLoginModalComponent);
exports.JhiLoginModalComponent = JhiLoginModalComponent;


/***/ }),

/***/ "./src/main/webapp/app/shared/login/login.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var ng_jhipster_1 = __webpack_require__(2);
var principal_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/principal.service.ts");
var auth_session_service_1 = __webpack_require__("./src/main/webapp/app/shared/auth/auth-session.service.ts");
var LoginService = (function () {
    function LoginService(languageService, principal, authServerProvider) {
        this.languageService = languageService;
        this.principal = principal;
        this.authServerProvider = authServerProvider;
    }
    LoginService.prototype.login = function (credentials, callback) {
        var _this = this;
        var cb = callback || function () { };
        return new Promise(function (resolve, reject) {
            _this.authServerProvider.login(credentials).subscribe(function (data) {
                _this.principal.identity(true).then(function (account) {
                    // After the login the language will be changed to
                    // the language selected by the user during his registration
                    if (account !== null) {
                        _this.languageService.changeLanguage(account.langKey);
                    }
                    resolve(data);
                });
                return cb();
            }, function (err) {
                _this.logout();
                reject(err);
                return cb(err);
            });
        });
    };
    LoginService.prototype.logout = function () {
        this.authServerProvider.logout().subscribe();
        this.principal.authenticate(null);
    };
    return LoginService;
}());
LoginService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService,
        principal_service_1.Principal,
        auth_session_service_1.AuthServerProvider])
], LoginService);
exports.LoginService = LoginService;


/***/ }),

/***/ "./src/main/webapp/app/shared/shared-common.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var platform_browser_1 = __webpack_require__(10);
var ng2_translate_1 = __webpack_require__(8);
var ng_jhipster_1 = __webpack_require__(2);
var _1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
function alertServiceProvider(sanitizer, translateService) {
    // set below to true to make alerts look like toast
    var isToast = false;
    return new ng_jhipster_1.AlertService(sanitizer, isToast, translateService);
}
exports.alertServiceProvider = alertServiceProvider;
var LimsSharedCommonModule = (function () {
    function LimsSharedCommonModule() {
    }
    return LimsSharedCommonModule;
}());
LimsSharedCommonModule = __decorate([
    core_1.NgModule({
        imports: [
            _1.LimsSharedLibsModule
        ],
        declarations: [
            _1.FindLanguageFromKeyPipe,
            _1.JhiAlertComponent,
            _1.JhiAlertErrorComponent
        ],
        providers: [
            _1.JhiLanguageHelper,
            {
                provide: ng_jhipster_1.AlertService,
                useFactory: alertServiceProvider,
                deps: [core_1.Sanitizer, ng2_translate_1.TranslateService]
            },
            platform_browser_1.Title
        ],
        exports: [
            _1.LimsSharedLibsModule,
            _1.FindLanguageFromKeyPipe,
            _1.JhiAlertComponent,
            _1.JhiAlertErrorComponent
        ]
    })
], LimsSharedCommonModule);
exports.LimsSharedCommonModule = LimsSharedCommonModule;


/***/ }),

/***/ "./src/main/webapp/app/shared/shared-libs.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var forms_1 = __webpack_require__(15);
var http_1 = __webpack_require__(4);
var common_1 = __webpack_require__(6);
var ng_bootstrap_1 = __webpack_require__(3);
var ng_jhipster_1 = __webpack_require__(2);
var angular2_infinite_scroll_1 = __webpack_require__(17);
var LimsSharedLibsModule = (function () {
    function LimsSharedLibsModule() {
    }
    return LimsSharedLibsModule;
}());
LimsSharedLibsModule = __decorate([
    core_1.NgModule({
        imports: [
            ng_bootstrap_1.NgbModule.forRoot(),
            ng_jhipster_1.NgJhipsterModule.forRoot({
                i18nEnabled: true,
                defaultI18nLang: 'pt-br'
            }),
            angular2_infinite_scroll_1.InfiniteScrollModule
        ],
        exports: [
            forms_1.FormsModule,
            http_1.HttpModule,
            common_1.CommonModule,
            ng_bootstrap_1.NgbModule,
            ng_jhipster_1.NgJhipsterModule,
            angular2_infinite_scroll_1.InfiniteScrollModule
        ]
    })
], LimsSharedLibsModule);
exports.LimsSharedLibsModule = LimsSharedLibsModule;


/***/ }),

/***/ "./src/main/webapp/app/shared/shared.module.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(0);
var common_1 = __webpack_require__(6);
var cookies_service_1 = __webpack_require__(19);
var _1 = __webpack_require__("./src/main/webapp/app/shared/index.ts");
var LimsSharedModule = (function () {
    function LimsSharedModule() {
    }
    return LimsSharedModule;
}());
LimsSharedModule = __decorate([
    core_1.NgModule({
        imports: [
            _1.LimsSharedLibsModule,
            _1.LimsSharedCommonModule
        ],
        declarations: [
            _1.JhiLoginModalComponent,
            _1.HasAnyAuthorityDirective
        ],
        providers: [
            cookies_service_1.CookieService,
            _1.LoginService,
            _1.LoginModalService,
            _1.AccountService,
            _1.StateStorageService,
            _1.Principal,
            _1.CSRFService,
            _1.AuthServerProvider,
            _1.AuthService,
            _1.UserService,
            common_1.DatePipe
        ],
        entryComponents: [_1.JhiLoginModalComponent],
        exports: [
            _1.LimsSharedCommonModule,
            _1.JhiLoginModalComponent,
            _1.HasAnyAuthorityDirective,
            common_1.DatePipe
        ],
        schemas: [core_1.CUSTOM_ELEMENTS_SCHEMA]
    })
], LimsSharedModule);
exports.LimsSharedModule = LimsSharedModule;


/***/ }),

/***/ "./src/main/webapp/app/shared/user/account.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Account = (function () {
    function Account(activated, authorities, email, firstName, langKey, lastName, login, imageUrl) {
        this.activated = activated;
        this.authorities = authorities;
        this.email = email;
        this.firstName = firstName;
        this.langKey = langKey;
        this.lastName = lastName;
        this.login = login;
        this.imageUrl = imageUrl;
    }
    return Account;
}());
exports.Account = Account;


/***/ }),

/***/ "./src/main/webapp/app/shared/user/user.model.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var User = (function () {
    function User(id, login, firstName, lastName, email, activated, langKey, authorities, createdBy, createdDate, lastModifiedBy, lastModifiedDate, password) {
        this.id = id ? id : null;
        this.login = login ? login : null;
        this.firstName = firstName ? firstName : null;
        this.lastName = lastName ? lastName : null;
        this.email = email ? email : null;
        this.activated = activated ? activated : false;
        this.langKey = langKey ? langKey : null;
        this.authorities = authorities ? authorities : null;
        this.createdBy = createdBy ? createdBy : null;
        this.createdDate = createdDate ? createdDate : null;
        this.lastModifiedBy = lastModifiedBy ? lastModifiedBy : null;
        this.lastModifiedDate = lastModifiedDate ? lastModifiedDate : null;
        this.password = password ? password : null;
    }
    return User;
}());
exports.User = User;


/***/ }),

/***/ "./src/main/webapp/app/shared/user/user.service.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(0);
var http_1 = __webpack_require__(4);
var UserService = (function () {
    function UserService(http) {
        this.http = http;
        this.resourceUrl = 'api/users';
    }
    UserService.prototype.create = function (user) {
        return this.http.post(this.resourceUrl, user);
    };
    UserService.prototype.update = function (user) {
        return this.http.put(this.resourceUrl, user);
    };
    UserService.prototype.find = function (login) {
        return this.http.get(this.resourceUrl + "/" + login).map(function (res) { return res.json(); });
    };
    UserService.prototype.query = function (req) {
        var params = new http_1.URLSearchParams();
        if (req) {
            params.set('page', req.page);
            params.set('size', req.size);
            if (req.sort) {
                params.paramsMap.set('sort', req.sort);
            }
        }
        var options = {
            search: params
        };
        return this.http.get(this.resourceUrl, options);
    };
    UserService.prototype.delete = function (login) {
        return this.http.delete(this.resourceUrl + "/" + login);
    };
    return UserService;
}());
UserService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], UserService);
exports.UserService = UserService;


/***/ }),

/***/ "./src/main/webapp/content/images/hipster.png":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "ca854e6d0785ba4b9d715049c0bdbcb3.png";

/***/ }),

/***/ "./src/main/webapp/content/images/hipster2x.png":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "1cd3a1d782e85ba37677c1a2099bc002.png";

/***/ }),

/***/ "./src/main/webapp/content/images/logo-jhipster.png":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "a30deb26b4eb1521433021e326cbcc2c.png";

/***/ }),

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(0);

/***/ }),

/***/ 1:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(437);

/***/ }),

/***/ 10:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(103);

/***/ }),

/***/ 11:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(443);

/***/ }),

/***/ 13:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(436);

/***/ }),

/***/ 15:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(25);

/***/ }),

/***/ 16:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(439);

/***/ }),

/***/ 17:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(440);

/***/ }),

/***/ 18:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(444);

/***/ }),

/***/ 19:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(560);

/***/ }),

/***/ 2:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(442);

/***/ }),

/***/ 21:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(9);

/***/ }),

/***/ 3:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(438);

/***/ }),

/***/ 4:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(102);

/***/ }),

/***/ 6:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(14);

/***/ }),

/***/ 8:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(233);

/***/ }),

/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(5))(1);

/***/ })

},["./src/main/webapp/app/app.main.ts"]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,